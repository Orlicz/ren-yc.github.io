<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>LG - T190531 行程码 - 题解</title>
      <link href="/2021/08/07/LG-T190531-%E8%A1%8C%E7%A8%8B%E7%A0%81-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/07/LG-T190531-%E8%A1%8C%E7%A8%8B%E7%A0%81-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="a4efa37713f548e6ed2e8e0d84d2f45fc3ce28c12d280a2ce7363d133f856986">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c1063b9248d7b001af0175f55219c6208f3573cacc4b9ea6a1881851fa3163028a7c7664c6c12124836c16b800b652e9129698243673217f617f15c6e870eaa668f398a1e569f04e055379519771a6aecc1d433f128f39e852b228e08da860632f7cdbc0d4b05d9c0b27393b610fabb8bb66339480f56857655e6ebab13dddac050d20ea8264aca208a0bcd228321fe13c9afb713c7881e260c1abca12b96382073941538aa1fc8ce5b7793003bbf2af4bc61315426622fd0fb6dcdc952a1e9190a4b0942c4d6dbecc4347a7b17b74cfa78cd3bc526a0b81d0d2dc2c8f5b2c571b7058f4dcc2aa8ed999e9c46a73371d0d81a347efb8327572e2fabf19a5a21149dfb85165e4c6423d833b61202c3266434a0ba5fc6c44596cdf84e43573d67a7caf249ebd24094f64dbb97581fc7bc9dbc589727d1cbd1e9cb17ef18be6bc025e12016d7168cf3bc5c31b8caa30e8b037c6054656a610987b564a7ef4f53fea49e09caaff49ccfaf0751fe851db3694e9ba30b2a5cf54a9a30087d25f6498895dff50c8a321987bcbe318fc3091ff6e65f7d0eb9008e0799da37330b543047f022dd8f164730ec61b42e2eb6709b8e5b9de799f4a8ab76b6c39ea9b9001712f4aa117dccb581e58826a3551f2c11c1ef40afaacc6a22acb6f3cfa07764710504689063f33ee04b4cee3bf0ddfabc5542d101267a9d8b371cc1daee6726aadc4155d40e3a72f88c05bffc7097a584b40ba35e5ecf9c8ec22ce2292c181fac6c424947882ab83985cf29233a987372a98a630becb38566346d5f263e3d676b3e1d7da0dc2c3de59e47868aac2d229aa9136180bd812900552bb0a5969afb8de9e7c67fabdded5c14abbfd6686a4bb50e6e890e3d41c7209e805c48bd23438c2f4a3614cca936db98e10c7c524eac1780a518bc803d6fc76878882edd4e0d733ed25366eec2dd8b851f5a9c445e2d3ed93dcc6967d974940eef04f801fe30441a9a15f0f880c4ff27ae518f7c8662abf50555a70e88ae5ba95641c94a8051d68f8837a4b9b830e5d68c3963632ee8db4a70805f315b7a777b60f0c2a1ab42f5c9e6a8c019b2502da2fa16214fa8605f000735036dc86bdefcf222bc96d00a20c928ad39d37b123d96f7caf3efaf1ae7cd28a6635162d7bb7901fe6b1335a6993f8b9e654ba51f9719e77da39756a2ca8fc61aa064dc20d20ded70ea4992ab6c7d599cb1d95022b592ddb29a628d928a4016308f51ff5720d75a855db2eebf0bc03bf0262e39b3209fb19ece3a5557d14da4fa2de4617a27a2d66e52e48440f355723eb388bbf2fafd3fbb3f5e4497d11493612f6352c3f1bedb946da6059c334e7f2ffa3be5353b101b025db9ea92d71e770bdf635fc5a74808d1be0980df69a83f8ef39a109442e2c863e806e116d0ff3e7656c7727ec910d34c2cc23a3d3e284d8760311096c74c3c97eed3848fe8f1191623b3b91443b0c3f26e6dd706ab0c68385372a45a4e13790674b64e87687897c2bc11996b7a225bb73e726ae5ad4e062dff519477d00986f1b880704625a33d889afcb7871a519610aa5d7c90a31f0af7d110f34cf0a436eaced3523b7d21aa96d1c80ddddc83a74887a3eb0c1b4834143d3c62151f57359dffa1e622064ae8830e157f9f098bdd7955fc90224abd67f5e92f369731d406f02c7837767ad1b99ee808843aca747e981e67caf65503be95659b8cad3bcd3f9e4fa2a1267be1e7b904718863f35d52e75ada5d945ac2cb1aacdf23ddeb3cfccf6e3b8d490354fa07528768fa900e2b77f582407a8bf495293720d59709afb85955b49572e7aec6153498aa3792d5f732b3a26b9dfca2c2c47b3f92eca8042a96093d0906bea3fdea43c8a99ad0ff7e88fd311ae3aa5b17d7be736caccdc134f27aa54342735c3d24227f623cb2808788fc13b6ea9bc25168968ffadf11e5257f90e70f1ca92655f8074f14d55b84430958dabe76483b001c789f364fd46e00b207fe0f12e2b2c95d946358234c7a14c949072764fb6757f02a702495c19561b497a1a896edff791d8bde1d863cae5f3c2dbc2d50edd36795ab7c262d893d792b7268ba13c46934c7556ca96c067efc44dfaaff3b1a06743ef35909eb2fa0b139a29d76a8a724d5ffc829fe55f21d8eeefe11427d9cf9963d2f3964e8ce4d17d6f9144d74496615ec9b878188446f8abdf60a025e0025d3709bacc119f6061ddf54670e2327107aac8081e4b6d3e9342e32468930bed6ccf49657e59be4c03693afebdfaee40640f9befa8c678d7ed1d566913f3e2a3c16cfaddf0d52c17709ed2587d7a42a48914e793856887d7e337de67d8e8aa54f6a8477740156ecc173f33a8c33977e526ef09b737f669311a3f662ba5166fe7fe7f22b80e951ba1768786b4541670ed4dac723dce6230af5c9686d31cc1567a3b4324e9a605e735c1875970269ee35db6307d3bb9f2f2057f1cb8eeb4568d9e8e441e0413043246f90ebb8d5528ecf09c803a76b1d6cd0fc6e395787d58a9a5cf6a7bd168cb572e63d05edcbd8f6aaa7216c1cc37bc61be6c750975fc5f2935998ff04a8aee90b68b8de8394b61cca07c8b7c13722c866c92169c0cd06acf665c62b63d338aec76da3efac03d1868d747da52f4154c895aa080f107c973891042ceb984d7dae14d36042f97fa8e08bb3da9f64951de9df09b20fd6280a0f9c40ee3a0ef0ab3fccedda03dcbac7d5964be6fe1c65a6a71be4493d1d4c229d2d13c85a7fef5eb30a56af5f3cead83df8c86b81eb4a9cc0dd450bdf7f516b86f798171c418a1393efa875b7b5f8008dccaf574ec723b2e528ef593ac0b121998535a00fc048944083c0f42aa288f0e1089b8e6c3256a82744d47f9691ecf4573439e44ece3e4e42138115c7fe92c0fde3fb8cce5249df63ed96fbe636a56b6915fd52fd43739bb4c9932d502eeffe49ac3bd7ace30125dd4b82b09960c391a83525ffe2b0f60c212b48023d3c702b2a094e6f319b8742e6fbe94395b74c2c0a4186a6f3692989a9e856e0ff6de8a87dbf5b4c0a805b742ba23c0b0c62b8ddeb78022bc98d3ab26f660b673c25bd3fa620051371019e241d9820a1fcd6ee12a7a44d163f24d23cc4153f06f24a2c86084d4968820febaa88e8dc49470ec1c15a4f3a7ad5ba9d315d40454f230a323409483c187b98416ac5b8427ee14c0a960ba169d189a83ff9d7d0ddaa7369d6d39305c23cecc9f2f02a571342d391e310ee7567598c96cd1d16df0d1156cb8199e5951f02b771dd69264cd3e6d825a54487a2eec19e5dd2f312a06429aaaa49179655cd467a4e4ca957ab2f9f910e4eba84b4d570257a05b4e922169926846cead3de4990af16f23920c47ba50ebf9164036bc802e011d4a28ca1ee03e644f8e47162d1268b3ed7e96f0c0d7e17ef516b92bf75b37e0affc94b9ad52c192f01e7239b125174894adb1a007fb49f7b0ef56c390237ef5306ce6dd7f65e2973e872d5d55eb2b0f416b49b5f0f76cd23c546f65394ba5cef451bd6dab7fbeb2568610d8908a54d50e8fd392172b8adcd5593e09ca04adb6df086de00a1a75b20a6d59c3c04850dc7674a6cf418bd98d38e2efa174674991dcd687a72d246016691c91b3b48dff168def380f9026d2a08112a24f50023af40be3232954d0518f0ec5868ebfe2c52753d1538594e91ea511000674922be26b88de3644cb6c90e81ae355987263e1ed2960b61ff791ddfde424b54d96099a8b70eafdeaaa457c32cf666954fd8bf70cd7915206c30200eb66e68fef2a1ddd78f218f20452d828bc713fcb10b67132e474cff8008091dc20cba1bd199918e9c8b2376668899a4e14db68fb990e5a17de876725b75515a0f9669db3b9562da4ede863ca77f0b9ab260c04f4149d67a4f8e56fd221c829aeda3ebfd5a11e41f528526dd306bafdb1df6051fe1211db6a6e636c71f5f78048e169d92471e8475be57654fdc8762778f98335101227a329f81</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LG - T191905 MC 之吃牛肉 - 题解</title>
      <link href="/2021/08/06/LG-T191905-MC-%E4%B9%8B%E5%90%83%E7%89%9B%E8%82%89-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/06/LG-T191905-MC-%E4%B9%8B%E5%90%83%E7%89%9B%E8%82%89-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="0fa2cf2b63c7bb6db0a21b40c188d7959169be2752d3c2cbf9d52c04b04dafee">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c1063b9248d7b001af0175f55219c6208f3573cacc4b9ea6a1881851fa3163028a7c7664c6c12124836c16b800b652e9129698243673217f617f15c6e870eaa668f39922efb82eb6d53c3e0b9f6e62186e31c13de6f436734b9061b465d9ca71483c76e970297a583db8b119579de8c0768d7b46e9aadea4db2ea4d683e723e6951d2769788538f80b869837fcfb31ed2a7ec55f1d02355ef0b9ee498eb12465e94e53f994af2f643011f85fb408c16cd477e0845fd227d0f12f16123594354f9bd16fc1354d6e63fecfbaa6f4f3744acc5291218ecf99e9e91d5343631034d170dcad473d9324dd6386e61e4b5dff6f2a2cd065487392adf787811a9fcf24ac76c3a39a62090331be03ebc767b88c3ba99611aa22ac2ac54948002aad77337531b39d8dd3f15309b90d3e6369f1544d999ea3276d3555d04902ffd4f683d11eec37ef95c72d7f398acc4715c1610fac6546c5623ed909b935b06131aab7c4f247ef8500be182d322a19eb633bb1ac2331290f67d896d0e495232f21b2b3d00e7618516854f382767e459674849a9df2db9f5cd3d1eb9b7a4955500faf89ef66c5e5ae33f49bbe3d018b7c5ce89a9f4a9a9a6e62365c8bfd889306f4177102c1554078f220494641a75a25897717504443f2754645eac49f1f8d391a181c25f4c3c28fb222e7a5dcb250d5ad861630ea2e4c1e7a7046716dcd68515b4ba67a92f6022b84610f6e4f66edbdf5a248449f905ff20384ffd6d612ac17b684e524f59854e80e06c5d3d8afb07e10926ad3f21a93a3c57d6f3e4a3dd26815451e7432375647e72698a29598e6bf4f1d91ca8c70793d107670c28660986ab1b5432fb9fa303cf29b0476b76f69fe72960f16983831563b2541d75b955769522a8568fc144aeffe6213753c3dbf48609e7973cc4cee12efa2616505633b3829c2c4870f92a318fe7803a46992445af94f8736778bb67c6327c75c0cd7ef550b4a28c863ca9fef95c5b18a8c023bb8208c22a5f036616bd1b7c619631e0468ab6d0ca2d0e38127eda279a5e7cb9b71e0806177d4c4e3c6afd0109824bd395ba6e785c4cdd31d1627f3fc1e122d6bd4117526651a6c353c0407280e3e25ef13856a1acc145bbf68ae0541bf6cffec13804a39a926d1c46a0dd7bb2d64dc7a220dcaeea37f9df682147e630d83040f130745ad14be89713fdcaa684a779becf1b5ab31f01cda8361b2398716340a9263639dc828b728eceb0e540ed5541552e180d0381d9b260baa59757fe7c32daa38d5e2c169d8f5fa2864dfce1af3b2bc2a58cafe3ed0da249920af752b2d3e28a318ea833656e34a1fd6309808a14b8c35705892fc6f0edb0694ce65b10e942b5bd0b511114787d713b60c9ab7dfc3899b5dd6304115e2a369855636b62ca0fb9c08aa8e3e396ce853ae5a836c1443f4e59bdcf70f25acba72084153ead9015fe5d64f42e483bdf210a662a2417b24783efa589a11115a05db84070859b801f5d0775b5bdeb44f2def9b3d38341c74ee63e02793e65d0928dc749747841d8e736e1a43e3d1a9dd59a6d608caeb69d90eadd92dc16c0fa41bb7a27bc56950cb0485d044a0084ca7e48c35ef7246f02ddc9509859e8d3f09360d980a74a2ddd02eeb15cdc699b03f133ad08bbfc48c67ccc12452edf9bb46ccd8d03baa113ccf5fc7a4d4755cb184c50ae7664dddedd1804376921c74a9ffadbe5af60983266f0b95517345e0907f45bf5e8aac96466ce6d56574ee46a29e487b1558d74ae4364925268891611087034635d90ae46e7a3f0e3e88eaec6bfe378bdc251cc5c5c71ef1172bcd77d1bd50fd4601861ee18dc7a385b0fb74242271d7ebbbc0013bc09404346d9359c8ba4c44fb428cb59278f5958b39d1f0cc6ca503a552aff02943e0bcba54fde04f9cb16be2734cf5c90e60dc2d8a862426a2361d3c24f8613d8a025b92482ab0aa0f932c4ac61e05ae78400e09bbb169bfc31ceb08d47481c10b70af3bbef8abb4c483d41c79469ac72af21e5c2f869effd186f98e8b14af19eb00c851c4824f4b3f390d6c9df5bacd0bce5c90b3735ce5c10cb838554b44fb99e0d5b2ed45ccdc6575e4e025e7c985fa822798d769c764e3be0e4d648083430b425c5e3398b43d93ddca2c5051937a82899e7e0e2a2fe48f44da59e0147c9e06ba276daab7bb970e6ff0d7d09139e3684997d98ea44d213e3d64c8154019b8808273b73937cb9b93ef3e0ff3a56b298f979596220747ad4062db09ac48444d796a59795a3b32b071a533e4287b353b734eff7e9832765e89051a8c2c5c9617226495ac78d9a3895a69a419121f377bec5ba8412f96ae738cd52f801d1f6aade8cc02d1fff5c3fab8c14ac16e87fa994a15063c444e32d19b711f23b439bb0e34289a862fe98b43e7844241c1bb741a1e02d2ddd9526743b7dc73c42e56298f55e37e4852de4ddeabb18e35442d2d9befd568065158d5da26e0560c5264fe45c4e3aa03dbfd2adf1cd5c75024df5572596d09a7b09bdb5791d6f9d23be3d97e8fa69da1d24f067fd7299376624e262d0298dca3e9bbed55873587294bfbcde6dd512aceff0d0daab18681dc48a7221c5bdb0a539fceb15aa08c6dc3ae06cf1473413a4dfc3b9b9066af045fa733829210b238764f496534555c75cf40e1c58be48f3e101c40e38f9a7c57959d73044f4f06e93caf09cfdc414bb6d484cbea32940b86be0f6f9402e6d07b26e9d7b7b3b430aefb24bc42b671adb6e791530b3fe2b3fbb8ba05abd95770f36c33cd2a5047f32ff83604a1f12ffc50f5414ec4bb5094ff814024ac98c744cb845a4679917d34a56d47b2ab34d77a7fbe5ea92ca56f6900bb4ea7b5a3e5a3dd4114bff0b70f76d946e061b950b616c2a6bb088b0472e8a34bd0d38fba1545e1afb2528bb861c9a497b0175dce5cdb6b841403a075902c07f985c3b3030eba450a8914e694641e752428d42001cc9e2d8228ba66e2ebd48666a252f830f240681015cd65c0478a6343d73a6ce37c1b4</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T190532 公交车站 - 题解</title>
      <link href="/2021/08/06/LG-T190532-%E5%85%AC%E4%BA%A4%E8%BD%A6%E7%AB%99-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/06/LG-T190532-%E5%85%AC%E4%BA%A4%E8%BD%A6%E7%AB%99-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="ba612eb1c5b0f391631d5b99cbcacbce8af95791c47bf6a613c54e76161d2e21">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c1063b9248d7b001af0175f55219c6208f3573cacc4b9ea6a1881851fa3163028a7c7664c6c12124836c16b800b652e9129698243673217f617f15c6e870eaa668f3937f9bd2bfddab33f4bc4128fc1c54ec958282b17fa157eeaec48ad93332fecaccaa99011900e9b377868de4a22a2dea803bb5895de0029fa0cbcc8a0229de4568529138f356282d51a6824eb51e957bca719465626fc2c7240d476bbac42644e9819e363ecb7ec037120527ff760d8cd7a6613b123d989f88085c1c4079a81a61695146af2893497f423f931b2623d52359d4ad7fbadf1c6d3523545018570ed83fd25c3c30052118240c4c161463976f2cb20dd5960d0acb6051a0a48043560a256ade447cdb08f2c5e3c0c891191d518b809aeee7ad58799364c0dbcb3aabddbf03fde47cf3daf984c175a2c10da20a756c75cd1d5d3962408b6fe6e972625af60d9b38cb494c3ca9764da1acfeb4cebe9672aa4edb19525b83b5db1d451aebd03145f9cedee6aae0437ed846f29104d9c1b7a3cb49a5886e3286bb0baca13062db949d2a43d75371069a90afeaed13f59c40fbf41d71126ab01892ccb3db7b40ce394e3efa8d1cfd1282986ee408f71d377f736dc480ba4d0c26f9626b1ed0a4f0e56461a964d254deef3c2e6a5442df5f2cd33446b03b69e7ca0e287a83f8be3894877ec08cb921803ef15a32a8486c3b1da3d53029759d9c55718a9929b641fead3b710e071f853bbc42239a467380c1d5744fff83326cdbd030c616a3dfeb9b658f68db27e0d74c7516046f772fd19622ba792429cefdd2bde18fed8f2eae3295c0cc346d62631b4a7fd74557c08d9647d0e044fc17b8f9c0dea9434bcdb0c0b8144e56b7855562d82dcafc70592225b44a9222329b5d22ffbe103240ac9dfc31d85c90d8ca786deea138e6633b99a8ea8ecc19d3bcb2fdb04b4f1c43d7adf56cffacb0c406ab81004ccdec017a8ce280453860cc63da80cfe5934b67a98381038d8f83514a93c02b7a3d2824fa24142b50f8fa48a061bbfdbbf368733f9ab2ac69288bad6b1f6d6638a865bfcbbccd1906ff6c3fda0ad559aec90d2f4b087b6103dee4d910318edc5be839526a19c982ae88c93293bd4c1f4cb852fc7f1bbfe397efaaea7a4a9ed45041bddc8ff5372e25754084f20fc4111f6af83c37c5f1f255c978e48ea16869f569095bf1cd44b6614ba1a6832d1157bad29d45630d7a610bb001440924adcc91970ada87fd9992003e0a71a67ea8acfedc9d4450d03e612cbd60a1b242087b7097c3a442a69efca1012e9199c8a663173aa5a6b7cb2ba5b73521d5248fbfd06fd55ef466bfae262ccbd6e683a4286961493bc821f90d57db8dbc638a1b0c2e0e0ba82bc9adc2f4a39c58b9ede8876256b881a2edd9d78084c16b9f3b5e4df24d5de85e3d49d87601068d3a16950a526aa85de0ca163d5a58d4b00562c5b4b9dd36281a7918eb12be287d6f579a4ca7717afe0af2e439b39a676b8f8e85ce2c33d6d2bd6dc0a61256870f83b4c323bd2c5d0fe3471252d336535bd5055439f009df0a795f7a17cd2fb38923d8b9b87f9256b683647574759b97421253ffba5a67919b9e9840cbd0c4fe1cbc31553124c2e91effae934a65242bf727abbd16fdf3864ae7a3717c9d2df7f5272b0a417b1e997a4d3d9520955be08867c16c3d07062a525828bbc187d15fc504464599a656cfa952c6db4755b1736613aed0d55f3496e7206674dc2c1d6660024ad9998e23eadd18f06911b0926c76490dc4eab16931a4afcb1745bfef6c79ecd08278b19fb38b822d2d031873c75983e984f1c7477126fa11c17f77fecb001c20dd53d52e4f1baf538e60362543574a67797db3d9a8d9a4eb91a0fab632a4dfd2bc482c324b852c8ccc102203d5d948171e65af56ca3068592b405a77b4e6b8f65dc3706243cd8a27f7a0cc3ae336410ba1129d9df14a2e8e316af55818b61e3f8e20e7503e145f2b2b77ebf60c591007cdaf4fe0452444a86bba631128f5c81f1658289486c2addaccf61e7ec0564a13a4ef3348eb552c2e43735dc025707691ff761a0fbbab3bdf5a349b04dfff5a575a7508878f8b6a6639b5936707c7539a85871304df05e15ab27ae1e46d98239257f5f82be7cd3c1515c357c6631c62b177667362fa6ba75a0da8c07230696dc65bcee6abd428cb3ac47f448c102eb26e4926cfd7ed53430f2dbd86456b477ecf8b74cdd18c52bd62cfe83df9b56a932f9baff57d681a4f3fe76619a1d5fcd4a4c0dc5a4edf4b610734c077ffb6523621b023b97b10304c1690d67a5dab6b941a839673966fd0cd34946ea0ad7e19bbcf972c7128820d800cb303a2755583c3bc9ae2548f6ed0bf0765d21d52550791974686593931666bd124545fca61a567dbe12c28c8d7a671999720a556e19e8116b0e767462bfb0f3f1cb90abbf13221e3fd727b08f78a773ee3a20b0b9ecaf2bdb4e41a5f298c8407bedb56e398a10945546d0ef160f9260c398702a6879a33353942716fd9b77f59b7e048d276a7447cadcfc76553e0d9bc56edb37b842d962393607d1a4e96329a692d52bdaed7906c2a947de82b9a35ef9043b8b5b2b70c73255c3a9fbccf20d6a745e6c4673c65b028017b023f175ada19bf35ca1272c88465035c6488063958db13123f6506e52ac2c6f6fc78fcc57d56fb9ba715104455195f13e82e9e371755bfbc7c47f609db3bc00941b52532b19cdd5d4957e958a2e32785afaf4df59db67bd3719947038402438a2f169b412a2e2d227423b8a842ba327c9460d7aee00aeeba2aa45a421cedf0337afe7fcc348154cccdfeb304abbd161d3f0a7c00faa5cf4180d7723361442a697f3971ffef2938c86f19e06c27c4d2c57664bbc8112296b78e9c103d4fecb8497c09405220c11ccc1c79146d398aaa5106c93f4fb45ad6ac426a1bdaa3e440d55251d6621a41967fbf32b30afcbb4381e95b51359b8e8dd4955828db2eb3f07b61e290e6be6658d445fbd4cb8b83d380f363506a8cdce5a79328e99846c313d40b5666fc994b1399fdff2b327b21e5e4b636a8f65550db835dc3f292fa05912c49cd6aca5b3a648c954b050250626ed2d359f79b1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189807 Hands - 题解</title>
      <link href="/2021/08/05/LG-T189807-Hands-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/05/LG-T189807-Hands-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T189807">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这题看上去很难，但分析后就可以一个循环解决。</p><p>每次取牌如果有一个连续的大于 $0$ 的数列，那就全部取出，取到其中的某一个数等于 $0$。</p><h3 id="代码分析">代码分析</h3><p>边输入边累加，记住当 $x - last &lt; 0$ 时，就不要累加。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int ans = 0, n, x, last;cin &gt;&gt; n;for (int i = 1; i &lt;= n; i++) &#123;cin &gt;&gt; x;ans += max(0, x - last);last = x;&#125;cout &lt;&lt; ans &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/08/05/LG-T189807-Hands-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/08/05/LG-T189807-Hands-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WFR - 如何使用 Warfarin</title>
      <link href="/2021/08/05/WFR-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Warfarin/"/>
      <url>/2021/08/05/WFR-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Warfarin/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="什么是-Warfarin">什么是 Warfarin</h2><p>Warfarin 是一个由 C++ 编写而成的解释型语言。</p><h3 id="Warfarin-的特点">Warfarin 的特点</h3><ul><li><p>变量，支持数字、字符串、布尔、数组（允许使用 <code>a[&quot;test&quot;]</code> 这样的语法）；</p></li><li><p>函数定义、调用与递归、高阶函数、<code>lambda</code> 表达式；</p></li><li><p>键盘与文件的 I/O 操作；</p></li><li><p><code>if for while</code> 语句；</p></li><li><p>大量内置函数，以及一部分操作系统 API（仅支持Windows）；</p></li><li><p>点语法操作，即 <code>a.test</code> 等价于 <code>a[&quot;test&quot;]</code>；</p></li><li><p>编译成特定格式的 <code>.ff0</code> 文件，支持 <code>import</code>；</p></li><li><p>支持伪代码和普通代码混写 （打开 <code>-p</code> 开关）；</p></li><li><p>支持反编译成 JavaScript（一部分内置函数不会给出对应的实现）；</p></li><li><p>支持 DLL 文件调用。</p></li></ul><p>具体信息请看<a href="https://www.luogu.com.cn/discuss/show/334473">这里</a></p><h2 id="如何使用-Warfarin">如何使用 Warfarin</h2><p>Warfarin 最新版本：<strong>3.17</strong></p><h3 id="下载-配置">下载 &amp; 配置</h3><p>$1.$ <strong>下载</strong> Warfarin C++ 源文件，</p><p>$2.$ 使用 g++ 编译成 exe 文件，</p><p>$3.$ <strong>把 exe 文件加入环境变量</strong>（不会的请百度）。</p><h3 id="编译-运行">编译 &amp; 运行</h3><p>运行程序有 $2$ 种方法：</p><ul><li><p>直接运行 <code>Warfarin.exe</code></p></li><li><p>编译运行 <code>.wfr</code> 源文件（请看下文）</p></li></ul><p>Warfarin 的源文件扩展名一般为 <code>.wfr</code>，</p><p>使用 <code>Warfarin.exe</code> 编译时请在该文件夹下的命令行输入 <code>Warfarin 文件名 -cr/crj/crjp</code>，</p><p>此命令会编译出一个 <code>.ff0</code> 文件，相当于 C++ 的 <code>.exe</code> 文件，<s>但不能双击运行</s>，请<strong>不要删除</strong>。</p><p>关于 <code>cr/crj/crjp</code> $3$ 个编译参数请看<a href="https://www.luogu.com.cn/blog/Warfarin/ff0-faq">此处</a>。</p><h2 id="相关链接">相关链接</h2><p><a href="https://ren-yc.github.io/assets/ff0/Warfarin.zip">本站下载链接（自带 exe）</a></p><p><a href="https://github.com/WarfarinBloodanger/ff0-script">作者 GitHub 仓库</a></p><p><a href="https://raw.githubusercontent.com/WarfarinBloodanger/ff0-script/main/user.txt">英文帮助文档</a></p><p><a href="https://www.luogu.com.cn/discuss/show/334473">作者发布帖</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=ren-yc.vscode-warfarin">VSCode 插件</a></p><p>本文链接 <a href="https://ren-yc.github.io/2021/08/05/WFR-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Warfarin/">https://ren-yc.github.io/2021/08/05/WFR-如何使用-Warfarin/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Programming Languages </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Warfarin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T190529 买二送一 - 题解</title>
      <link href="/2021/07/31/LG-T190529-%E4%B9%B0%E4%BA%8C%E9%80%81%E4%B8%80-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/31/LG-T190529-%E4%B9%B0%E4%BA%8C%E9%80%81%E4%B8%80-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T190529">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><blockquote><p>凡是顾客购买两本书，就可以免费带走第三本书，只要免费书的价格不超过两本付费书各自的价格即可。</p></blockquote><p>可以使用排序来做。</p><h3 id="代码分析">代码分析</h3><p>排序，建议偷懒使用 <code>sort</code> 函数，<strong>But</strong> 是降序排序，所以要写炒鸡简单的 <code>cmp()</code> 函数。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int n, a[100001], ans = 0;bool cmp(int x, int y) &#123;return x &gt; y;&#125;int main() &#123;cin &gt;&gt; n;for (int i = 1; i &lt;= n; i++) &#123;cin &gt;&gt; a[i];&#125;sort(a + 1, a + n + 1, cmp);for (int i = 1; i &lt;= n; i += 3) &#123;ans += a[i] + a[i + 1];&#125;cout &lt;&lt; ans &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/31/LG-T190529-%E4%B9%B0%E4%BA%8C%E9%80%81%E4%B8%80-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/31/LG-T190529-买二送一-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T190528 方舱医院 - 题解</title>
      <link href="/2021/07/31/LG-T190528-%E6%96%B9%E8%88%B1%E5%8C%BB%E9%99%A2-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/31/LG-T190528-%E6%96%B9%E8%88%B1%E5%8C%BB%E9%99%A2-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T190528">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这是炒鸡淼的小学一年级数学应用题（（（</p><h3 id="代码分析">代码分析</h3><p><s>由于本题过于淼所以不分析。</s></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int a, b, c;cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;cout &lt;&lt; (a / c) * (b / c) &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/31/LG-T190528-%E6%96%B9%E8%88%B1%E5%8C%BB%E9%99%A2-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/31/LG-T190528-方舱医院-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189610 开关灯 - 题解</title>
      <link href="/2021/07/26/LG-T189610-%E5%BC%80%E5%85%B3%E7%81%AF-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/26/LG-T189610-%E5%BC%80%E5%85%B3%E7%81%AF-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="026e2244b585462410e7446921966a564ca9c46cef5cbe9fbd48a74d0ca46fa2">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c1063b9248d7b001af0175f55219c6208f3573cacc4b9ea6a1881851fa3163028a7c7664c6c12124836c16b800b652e9129698243673217f617f15c6e870eaa668f3951841d0df87d6b6701f5bb381479d2af22bdebc9563153223687d91f023dfe6e5f04f017c5568ae2c4e689ee3d7c006f758de87e899ab785ff0a0d512da7d3f4de54f18a1708c104829a8c08934ccfe270c6578fdc42d315215a42660051f50cf952959b971528220e035f628e490a0191ade40dcd76ebd96d23193c159427198d206895382677c8d4cb8331b11b91ce7a4d5f48cff64e1a0247d10146119fda79cbe9ec51eadb3505d18d857faf0cd3140a6523ae9bb02ba22deca373b9ff49c829d6c41c1fd04a94689ce42166e9053b472c37b9cc95431e33f181375b2da9c39126f3dc6896cef8099bc05a2bb0ccabac3ebfd66bcd1ef28a1ad437fd5dff3b4bbff4acece2ed52aed720f3078d5f4cc60ef87e07757753ef8d1f255630f9d546e919659cc9f775ef0862dae35bccac3ca4e4589dea6c5ab83890a8a3070fe43ebe9787da2d0977ecce859e11c2c9c815226741136a989829e9615ec3517d91373dff95d4e70e134c406364b57dbb4d6fb4381fd3437536b9145046e0f43122c91537c085f239f158d2ea2522cf31cdd5d07768eb63d9f4a573d81c7e47676d02c5c698646cc621eaa4235d16da6fd5cd9642af87b60f732987c2dff66f2193500905346dd502fd47f66e2506e9f6e938222f2aa00bb09f6d848df3bfbfe6c6bae72f614d3f498df1bd9e1e6376ae2c3a6748a1eb856bac5c0c1dca5de958ee7bd6fbc40062cecb3696af0458b7f21771ddb358f4b866c8a00089b65cdc0467a926b83a22a42fd9e2301ded446fd586a6b9275ba553e6f98fb0368ea749595661918ff156f6541850090adab561d0f13f46664133647d045170abd914e354c4fca3c63a27ca2115778eecd962f61c51dbf6763a4c19d5c1682cbdffaf5c328921507f7bdc5db6e89940c474403f76c771171cebaf4cbf8809037a79202f9a427765fe502776f6982cbdebb78c684f946bf05c65eb3959eaa2af4ef550bff0f79cd12e38e2e53c3f7073474cc2e065ea44ce3de008e5cbd7af5ae694f7e5045abc08916b9306ed93c2fe4c850c567c459550e5bd2c2b5e4aefc32f90a2b0b6f02833faee2d7512f231eabce4a3496b58ff57aa0748e3c740a8968a8d1ea530b9e26103fe05d78f194df9cf4ac16358cd4f2de4dd2a3ace18a4c6524c0e212935363f8ecb55847ef31a39137c0bd3f87b9ea2c09c041366cfff768f04637d693cdeea4907105a4bb03aba0bd7bc49d67eb0bc639cfe691297ceba0aec70cc3095ad464d4f2c8da3474411483fceedcfddf3fb55debee561e0387685b9058b24882cb8f3e3f59e67f05a89645a813991ac007115a2045cec1ac28017fb2d1b736429628a321cf9feb00f50cf1d5f7e0b0b468a3d16bc3329b80b8a706f726b4381de307696bc4c241a7e0dfd3867f2c94ff3f421a86e0315e552bd5b7d6bda8ba18085316b237a2562a96234427af71015963c4b4158dcc78901cbe13be800a5fce86855afc355af29e58251525382dbc6e8b60a7fb78b664b4046c7c907d3bfb70a0d48ffa0bf2125747138397386da698105a7deb863a53589ac88a695cde2388ea51da8e8a9d3c4b3a8e77bcfae1726f93c1b39a7f5915142e1a4fd560568cc87c89d66c19dc02193d3b8f752f2e302cdebe8291134cbd3cc19778f00431caed27bd5b2b87e09a3137da5f889e41d751d0f5b8151df8e919daa2b2886235691f98ca5575860da70d677fb6ade597cde3657ceef0aeaa398140ceaaa8fd7a060b73ba65ef9a94b80ef42c895ede99c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189243 古老的 A + B - 题解</title>
      <link href="/2021/07/26/LG-T189243-%E5%8F%A4%E8%80%81%E7%9A%84-A-B-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/26/LG-T189243-%E5%8F%A4%E8%80%81%E7%9A%84-A-B-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T189243">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p><s>This is the waterest problem I had ever seen.</s></p><p>好吧 A + B 最 water。</p><p>没啥好讲的，就一个循环。</p><h3 id="代码分析">代码分析</h3><p>直接读入然后来个循环，注意输出格式。</p><p>时间复杂度 $O©$，空间复杂度 $O(1)$。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int a, b, c;cin &gt;&gt; c;for (int i = 0; i &lt;= c; i++) &#123;a = i;b = c - i;cout &lt;&lt; a &lt;&lt; &quot;*&quot; &lt;&lt; b &lt;&lt; &quot;=&quot; &lt;&lt; a * b &lt;&lt; endl;&#125;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/26/LG-T189243-%E5%8F%A4%E8%80%81%E7%9A%84-A-B-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/26/LG-T189243-古老的-A-B-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189069 排序 - 题解</title>
      <link href="/2021/07/26/LG-T189069-%E6%8E%92%E5%BA%8F-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/26/LG-T189069-%E6%8E%92%E5%BA%8F-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T189069">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这是一道炒鸡淼的 C++ <code>if</code> 语句题（?）。</p><p>太淼了就不解释了</p><h3 id="代码分析">代码分析</h3><p>全读入完来个函数判断就行了。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int a[6], b[6], cnt1, cnt2, tot1, tot2;int mysort() &#123;if (cnt1 &gt; cnt2) &#123;return 1;&#125; else if (cnt1 == cnt2) &#123;if (tot1 &gt; tot2) &#123;return 1;&#125; else if (tot1 &lt; tot2) &#123;return 2;&#125; else &#123;return 0;&#125;&#125; else &#123;return 2;&#125;&#125;int main() &#123;for (int i = 0; i &lt; 6; i++) &#123;cin &gt;&gt; a[i];cnt1 += a[i];if (a[i] == 50) tot1++;&#125;for (int i = 0; i &lt; 6; i++) &#123;cin &gt;&gt; b[i];cnt2 += b[i];if (b[i] == 50) tot2++;&#125;cout &lt;&lt; mysort() &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/26/LG-T189069-%E6%8E%92%E5%BA%8F-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/26/LG-T189069-排序-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189422 生小虫子 - 题解</title>
      <link href="/2021/07/25/LG-T189422-%E7%94%9F%E5%B0%8F%E8%99%AB%E5%AD%90-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-T189422-%E7%94%9F%E5%B0%8F%E8%99%AB%E5%AD%90-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T189422">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这道题其实就在检验 <code>for()</code> 循环的应用。</p><h3 id="代码分析">代码分析</h3><p>读入一切信息后，</p><p>写一个循环 $z$ 次的 <code>for</code> 循环，如果满足条件 <code>k == x</code>，小虫子数量增加，反之 <code>s1 = 0</code>。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int k = 0, x, y, z;cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;int s1 = 0, s2 = 0, cc = 1, cl = 0;for (int i = 1; i &lt;= z; i++) &#123;k++;cl += cc;cc = s2;s2 = s1;if (k == x) &#123;s1 = cl * y;k = 0;&#125; else &#123;s1 = 0;&#125;&#125;cout &lt;&lt; cc + cl &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/25/LG-T189422-%E7%94%9F%E5%B0%8F%E8%99%AB%E5%AD%90-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/25/LG-T189422-生小虫子-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189358 合成大西瓜 - 题解</title>
      <link href="/2021/07/25/LG-T189358-%E5%90%88%E6%88%90%E5%A4%A7%E8%A5%BF%E7%93%9C-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-T189358-%E5%90%88%E6%88%90%E5%A4%A7%E8%A5%BF%E7%93%9C-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T189358">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这是一道 C++ 枚举题，只要遍历 $b$ 数组就 $ok$ 了。</p><h3 id="代码分析">代码分析</h3><p>输入正整数 $n$，然后循环输入 $x$，$b_x = b_x + 1$;</p><p>遍历 $b$ 数组。</p><p>倒着遍历，一旦发现有符合条件的数，直接输出并结束程序。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int n, b[201];int main() &#123;int x;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; x;b[x]++;&#125;for (int i = 0; i &lt; n; i++) &#123;b[i + 1] += b[i] / 2;&#125;for (int i = n - 1; i &gt;= 0; i--) &#123;if (b[i] != 0) &#123;cout &lt;&lt; i + 1 &lt;&lt; endl;break;&#125;&#125;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/25/LG-T189358-%E5%90%88%E6%88%90%E5%A4%A7%E8%A5%BF%E7%93%9C-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/25/LG-T189358-合成大西瓜-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189355 救援争先 - 题解</title>
      <link href="/2021/07/25/LG-T189355-%E6%95%91%E6%8F%B4%E4%BA%89%E5%85%88-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-T189355-%E6%95%91%E6%8F%B4%E4%BA%89%E5%85%88-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T189355">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这是一道炒鸡不淼的 C++ 结构体排序题，我卡 <code>cmp</code> 了好久。</p><p>就俩循环读入 &amp; 输出，<code>sort()</code>，还有<strong>万恶</strong>的 <code>cmp</code>。</p><h3 id="代码分析">代码分析</h3><p>输入正整数 $n$，然后循环输入 $a_i . sh, a_i . sm, a_i . dh, a_i . dm$;</p><p>使用 <code>sort()</code> 结构体排序;</p><p>循环输出排序后的 $a_i$。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;struct Node &#123;int sh, sm, st, dh, dm, et, id;&#125; a[1001];bool cmp(Node a, Node b) &#123;return a.et &lt; b.et || a.et == b.et &amp;&amp; a.st &lt; b.st || a.et == b.et &amp;&amp; a.st == b.st &amp;&amp; a.id &lt; b.id;&#125;int main() &#123;int n;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;scanf(&quot;%d:%d %d:%d&quot;, &amp;a[i].sh, &amp;a[i].sm, &amp;a[i].dh, &amp;a[i].dm);a[i].st = a[i].sh * 60 + a[i].sm;a[i].et = a[i].st + a[i].dh * 60 + a[i].dm;a[i].id = i + 1;&#125;sort(a, a + n, cmp);for (int i = 0; i &lt; n; i++) &#123;cout &lt;&lt; a[i].id &lt;&lt; endl;&#125;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/25/LG-T189355-%E6%95%91%E6%8F%B4%E4%BA%89%E5%85%88-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/25/LG-T189355-救援争先-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189354 斗罗大陆之武魂融合技 - 题解</title>
      <link href="/2021/07/25/LG-T189354-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E6%AD%A6%E9%AD%82%E8%9E%8D%E5%90%88%E6%8A%80-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-T189354-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E6%AD%A6%E9%AD%82%E8%9E%8D%E5%90%88%E6%8A%80-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T189354">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这是一道炒鸡淼的 C++ 模拟题，也不卡 <code>long long</code>。</p><h3 id="代码分析">代码分析</h3><p>输入正整数 $n$，然后循环输入 $x$ 和 $y$。</p><p><strong>一边输入一边计算，速度快</strong></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int n, x, y, z;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; x &gt;&gt; y;z = (x + y) * 2;cout &lt;&lt; z &lt;&lt; endl;&#125;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/25/LG-T189354-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E6%AD%A6%E9%AD%82%E8%9E%8D%E5%90%88%E6%8A%80-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/25/LG-T189354-斗罗大陆之武魂融合技-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188708 前 n 个偶数位回文数之和 - 题解</title>
      <link href="/2021/07/24/LG-T188708-%E5%89%8D-n-%E4%B8%AA%E5%81%B6%E6%95%B0%E4%BD%8D%E5%9B%9E%E6%96%87%E6%95%B0%E4%B9%8B%E5%92%8C-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/24/LG-T188708-%E5%89%8D-n-%E4%B8%AA%E5%81%B6%E6%95%B0%E4%BD%8D%E5%9B%9E%E6%96%87%E6%95%B0%E4%B9%8B%E5%92%8C-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T188708">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p><s>这道题目就不淼了，变成沝了。</s></p><p>写几个函数就不行了。</p><p><s>真 简 单</s></p><p><s>250lht：呜呜呜这是比赛赛题，我保龄。</s></p><h3 id="代码分析">代码分析</h3><p>输入 $n$，写个循环判断从 $1$ 起的每一个数，如果满足函数 <code>weishu</code> 和函数 <code>huiwen</code>，则加到计数器。</p><p>这时有人就会问了，<code>huiwen</code> 函数中的 <code>_itoa_s()</code> 是神马东西，请看<a href="https://blog.csdn.net/smcrystal/article/details/71191335?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.base&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.base">这里</a>。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;bool huiwen(int g) &#123;int i, j;char b[1001];_itoa_s(g, b, 10);for (int i = 0, j = strlen(b) - 1; i &lt; j; i++, j--) &#123;if (b[i] != b[j]) return false;&#125;if (i == j) return false;return true;&#125;bool weishu(int x) &#123;int cnt = 0;while (x != 0) &#123;x /= 10;cnt++;&#125;return cnt % 2 == 0;&#125;int main() &#123;long long n, i = 1, sum = 0;cin &gt;&gt; n;while (n != 0) &#123;if (weishu(i) &amp;&amp; huiwen(i)) &#123;n--;sum += i;&#125;i++;&#125;cout &lt;&lt; sum &lt;&lt; endl;return 0;&#125;</code></pre><p>以上代码交到洛谷上会 <strong><a href="https://www.luogu.com.cn/record/54096300">CE</a></strong>，你谷居然无法使用 <code>stdlib.h</code> 的 <code>_itoa_s()</code> ???</p><p><strong>偷懒失败</strong>，只好自己写转换函数。</p><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;void int_to_string(char s[], int m) &#123;int i = 0, k, n;char temp;if (m &lt; 0) &#123;s[i] = '-';m = -m;i++;&#125;while (m &gt; 0) &#123;n = m % 10;m /= 10;s[i] = n + '0';i++;&#125;s[i] = '\0';if (s[0] == '-') k = 1;else k = 0;for (int j = k; j &lt; i / 2; j++) &#123;temp = s[j];s[j] = s[i - j - 1 + k];s[i - j - 1 + k] = temp;&#125;&#125;bool huiwen(int g) &#123;int i, j;char b[1001];int_to_string(b, g);for (int i = 0, j = strlen(b) - 1; i &lt; j; i++, j--) &#123;if (b[i] != b[j]) return false;&#125;if (i == j) return false;return true;&#125;bool weishu(int x) &#123;int cnt = 0;while (x != 0) &#123;x /= 10;cnt++;&#125;return cnt % 2 == 0;&#125;int main() &#123;long long n, i = 1, sum = 0;cin &gt;&gt; n;while (n != 0) &#123;if (weishu(i) &amp;&amp; huiwen(i)) &#123;n--;sum += i;&#125;i++;&#125;cout &lt;&lt; sum &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/24/LG-T188708-%E5%89%8D-n-%E4%B8%AA%E5%81%B6%E6%95%B0%E4%BD%8D%E5%9B%9E%E6%96%87%E6%95%B0%E4%B9%8B%E5%92%8C-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/24/LG-T188708-前-n-个偶数位回文数之和-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188706 斗罗大陆之魂系辨认 - 题解</title>
      <link href="/2021/07/24/LG-T188706-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E9%AD%82%E7%B3%BB%E8%BE%A8%E8%AE%A4-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/24/LG-T188706-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E9%AD%82%E7%B3%BB%E8%BE%A8%E8%AE%A4-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T188706">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>@250lht 这道题目太淼了！</p><p>不多废话，这道题直接写一连串的 <code>if</code> 语句就行了。</p><blockquote><p><strong>P.S.由于 Windows 操作系统终端使用 GB2312，所以无法正确显示中文，但这不会影响洛谷评测结果</strong></p></blockquote><p>审题人真的良心，写了这个，不说的话我还以为我代码出 BUG 了呢。</p><h3 id="代码分析">代码分析</h3><p>输入 $n$，循环读入 $a_i$，尽量<strong>一边读入一边输出</strong>，<strong>速度快</strong>。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;void judge(int n) &#123;if (1 &lt;= n &amp;&amp; n &lt;= 4) cout &lt;&lt; &quot;魂土&quot;;if (5 &lt;= n &amp;&amp; n &lt;= 14) cout &lt;&lt; &quot;魂师&quot;;if (15 &lt;= n &amp;&amp; n &lt;= 34) cout &lt;&lt; &quot;大魂师&quot;;if (35 &lt;= n &amp;&amp; n &lt;= 39) cout &lt;&lt; &quot;魂王&quot;;if (40 &lt;= n &amp;&amp; n &lt;= 49) cout &lt;&lt; &quot;魂宗&quot;;if (50 &lt;= n &amp;&amp; n &lt;= 54) cout &lt;&lt; &quot;魂尊&quot;;if (55 &lt;= n &amp;&amp; n &lt;= 59) cout &lt;&lt; &quot;魂帝&quot;;if (60 &lt;= n &amp;&amp; n &lt;= 69) cout &lt;&lt; &quot;赤炎斗罗&quot;;if (70 &lt;= n &amp;&amp; n &lt;= 79) cout &lt;&lt; &quot;巅峰斗罗&quot;;if (80 &lt;= n &amp;&amp; n &lt;= 89) cout &lt;&lt; &quot;封号斗罗&quot;;if (90 &lt;= n &amp;&amp; n &lt;= 100) cout &lt;&lt; &quot;海神&quot;;cout &lt;&lt; endl;&#125;int main() &#123;int n, a[101] = &#123;0&#125;;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; a[i];judge(a[i]);&#125;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/24/LG-T188706-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E9%AD%82%E7%B3%BB%E8%BE%A8%E8%AE%A4-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/24/LG-T188706-斗罗大陆之魂系辨认-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188702 王者荣耀 2 - 题解</title>
      <link href="/2021/07/24/LG-T188702-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-2-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/24/LG-T188702-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-2-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T188702">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这道题目应使用算法库函数 <s>当然自己手写也行</s> 和类型转换。</p><h3 id="代码分析">代码分析</h3><p>先输入 $x$ 和 $y$，直接输出 $\lceil x \div y \rceil$。</p><p><strong>注意本题数据范围 $10^{18}$，卡 long long。</strong></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;long long a, b;cin &gt;&gt; a &gt;&gt; b;cout &lt;&lt; ceil((double)a / (double)b) &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/24/LG-T188702-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-2-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/24/LG-T188702-王者荣耀-2-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188712 - gcd 与 lcm - 题解</title>
      <link href="/2021/07/23/LG-T188712-gcd-%E4%B8%8E-lcm-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/23/LG-T188712-gcd-%E4%B8%8E-lcm-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T188712">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这是一道典型的数论题。</p><p>题目要求我们求某两个数的<strong>最大公约数</strong>或<strong>最小公倍数</strong>。</p><h3 id="代码分析">代码分析</h3><p>输入字符串 $mode$，然后输入两个正整数 $a$ 和 $b$。</p><p>判断 $mode$ 是否为 <code>gcd</code> 或 <code>lcm</code>。</p><p>写一个求最大公约数的函数。</p><p>（算法库里有 int 的：<code>__gcd</code>，不过本题卡 long long）</p><p><strong>注意本题数据范围 $10^{10}$，卡 long long</strong></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;long long gcd(long long a, long long b) &#123;if (a % b == 0) return b;else return gcd(b, a % b);&#125;long long lcm(long long a, long long b) &#123;return a * b / gcd(a, b);&#125;int main() &#123;long long T, a, b;string mode;cin &gt;&gt; T;while (T--) &#123;cin &gt;&gt; mode &gt;&gt; a &gt;&gt; b;if (mode == &quot;gcd&quot;) &#123;cout &lt;&lt; gcd(a, b) &lt;&lt; endl;&#125; else &#123;cout &lt;&lt; lcm(a, b) &lt;&lt; endl;&#125;&#125;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/23/LG-T188712-gcd-%E4%B8%8E-lcm-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/23/LG-T188712-gcd-与-lcm-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188700 微信（2） - 题解</title>
      <link href="/2021/07/22/LG-T188700-%E5%BE%AE%E4%BF%A1%EF%BC%882%EF%BC%89-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/22/LG-T188700-%E5%BE%AE%E4%BF%A1%EF%BC%882%EF%BC%89-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T188700">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这是一道典型的 C++ <strong>结构体</strong>排序题。</p><p>要点：题目要求<strong>从大到小</strong>排序，$a$ 一样的按 $name_0$（字符串首） 的 ASCII 码<strong>从小到大</strong>排序，所以我们还要自己写 <code>cmp</code> 函数，来比较两结构体。</p><h3 id="代码分析">代码分析</h3><p>输入正整数 $n$，然后循环输入 $a_i$。</p><p>建议使用 <code>sort</code> 函数<s>偷懒</s>，写一个 <code>cmp</code>。</p><p><s>出题人 NB！！！不卡我们 long long 了</s></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;struct node &#123;string name;int a;&#125; wx[101];bool cmp(node a, node b) &#123;if (a.a == b.a) &#123;return a.name[0] &lt; b.name[0];&#125;return a.a &gt; b.a;&#125;int main() &#123;int n;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; wx[i].name &gt;&gt; wx[i].a;&#125;sort(wx, wx + n, cmp);for (int i = 0; i &lt; n; i++) &#123;cout &lt;&lt; wx[i].name &lt;&lt; endl;&#125;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/22/LG-T188700-%E5%BE%AE%E4%BF%A1%EF%BC%882%EF%BC%89-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/22/LG-T188700-微信（2）-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188699 微信（1） - 题解</title>
      <link href="/2021/07/22/LG-T188699-%E5%BE%AE%E4%BF%A1%EF%BC%881%EF%BC%89-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/22/LG-T188699-%E5%BE%AE%E4%BF%A1%EF%BC%881%EF%BC%89-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T188699">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这是一道典型的 C++ 排序题。</p><p>要点：题目要求<strong>从大到小</strong>排序，所以我们要自己写 <code>cmp</code> 函数，来判断升序。</p><h3 id="代码分析">代码分析</h3><p>输入正整数 $n$，然后循环输入 $a_i$。</p><p>建议使用 <code>sort</code> 函数<s>偷懒</s>，写一个 <code>cmp</code>。</p><p><strong>注意本题数据范围 $10^{18}$，卡 long long</strong></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;bool cmp(long long a, long long b) &#123;return a &gt; b;&#125;int main() &#123;int n;int a[1001] = &#123;0&#125;;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; a[i];&#125;sort(a, a + n, cmp);for (int i = 0; i &lt; n; i++) &#123;cout &lt;&lt; a[i] &lt;&lt; &quot; &quot;;&#125;cout &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/22/LG-T188699-%E5%BE%AE%E4%BF%A1%EF%BC%881%EF%BC%89-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/22/LG-T188699-微信（1）-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T190576 王者荣耀 - 题解</title>
      <link href="/2021/07/22/LG-T190576-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/22/LG-T190576-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="https://www.luogu.com.cn/problem/T190576">洛谷题目地址</a></h4><h3 id="题目解析">题目解析</h3><p>这是一道典型的 C++ 语言入门题。</p><h3 id="代码分析">代码分析</h3><p>直接输入正整数 $n$ 再输出 $n \times 10$。</p><p>或者输入字符串 $n$ 再输出 $n + ‘0’$。</p><p><strong>注意本题数据范围 $10^{18}$，卡 long long（使用方法 2 可无视）</strong></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;long long x;cin &gt;&gt; x;cout &lt;&lt; x * 10 &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><p>本文链接 <a href="https://ren-yc.github.io/2021/07/22/LG-T190576-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/22/LG-T190576-王者荣耀-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/06/03/hello-world/"/>
      <url>/2021/06/03/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>本文链接 <a href="https://ren-yc.github.io/2021/06/03/hello-world/">https://ren-yc.github.io/2021/06/03/hello-world/</a> 文章转载需注明出处</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
