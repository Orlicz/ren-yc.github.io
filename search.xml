<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>LG - 双色棋 - 题解</title>
      <link href="/2021/08/31/LG-%E5%8F%8C%E8%89%B2%E6%A3%8B-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/31/LG-%E5%8F%8C%E8%89%B2%E6%A3%8B-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="d013fc4eb84166082996ab48d2f9ceadfe1671b24c06065c47b4b2204cdebee7">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58cc3f58295754745f19e5981852a52ece6b2eac06c3cc1356b39a175868193dcb8775ab5e1534e5eb9a5562cb2a1d56436b60052b23ad6638d48722def9fa3bae056e6f41fe69011895407587f49c5d2c3ff564c909939f7e61ce74eae815a232ae803c80107bc59c4d7f91e1f86c7bbacfda8357ccbbf1a661e6d96904af58555d8fc3505991348a506716f3447f62c82f1c53b79f6caee14bd84be42d4e0747756a6172a60af474af57901ab3bd39aab7719de272216ac8f93f1eaafee52f26ddb47bbeff9ba398fe394c2fda34b3f52a05f4e3a5c7f75f71842c6776a2bb08782bb0cd78e65692281b8f64128271c63b7e2a1002d5ee5db7a669708a700a6d421f4d5a23d111d4e6769857f3ef2fd1dd7a53693594a9292621554ebba902fe9a349c8f685c71503afbd0234d6e30e2d84457ccc791bb7fb8a8e343d10767913523e9e711fdb1f3f688f9c1a15e38fe413e249a19eb18cc4efbfe92dd0efb9e69177a396bbaff953467caf73978ac2d3a6fd0074e4ceb622d5e334ed56d0301274ccd5939a2adacbf423024ebf0122be82ac085c17c3e4615b8dccabd5360436f2616bdab7b24f95a1e857c54f31bb5ce85a25c5be6fb35d3eeb78479402c56df4b3e95868456e52bd9c1b5dfbd88d84f62bc5cc0df6d893d29579b8030822f4736b3a43e798ac03183a9d1bdc9a2fd09526251b8ac119a6f88d77c8089235cb2cac844f2aacebda7af1702564b23cd8939ee4fa536f83960216467181522a3bc2f0b807b7a64e4af27d36b37797e79693058aed6c6d1f9bb2bbadf6ef290bfe4496dc1b5effd9f946c1bbbbdbd79f80333b8a63398c4e2aa015250b3a386bc814d8e7e9430346a369c5ec45729816c4150d2b6c9ef5ef63769f9d855f5fefb188323095c93cca0531e9b3a9ddcc3eec6fef6f46540d2911e9423d6940cbf9365e32067601887cadeaf00629da8fae2852790bce60ec38f10ec541fdbb4fdf18c74250a108ce403a29b4a762b80cab64ab7bdb487e739d0c8b3ae52ffea6c251a39c13a84dfd7699125af5d9544fc27bc804cb4deb247612bf2342c4b47ff63e582cdd6b4112ba893cedf720e59620d7ac9675992397eec2ef7dd0a209c62145910d8eeb7228573c32ac7cad9c96bf971046fe97b51cfe614e83b11a02b8668975a70ff6a3ee0ce5cd17a836b6d2ba9663ffd9dd430e15495d7bda6757c25d160cd8515f1fe82032b05bff49d408ff4f6a8fb844c9a858a9fb9ef0699ed92c938e72f7f01021c93c69bf35da305a278bbe621689eb0876c2cdce631be7c0d8dce2c38f106aa37e149b3b7c3fc0c51c5f907cfec6049d07b5d064f660a3dfad7e8277385a233b092470fa266d5e221c7c46c7237c652592e54b0a17b0388371e57f3fbdcdca0235f5fe9b13594d22cd1d863104e60ada6b611ad5462edfe29904aa763a8d5812f5785d58438918a043bfc193a91abe1d32431b0239437acad465544c06890f40f654e2d284ae97a134c224fa9126423a28a6555fb7dba9539b5c4cced394fdc5e3a7bb0549187f7e9848d3411a14cf47251f58800908b6e6dc5c45ef465ef58dec39785f1aea5a56458c5a0851e48c5e914dd760ed372a549f448acc3d72abb5f7bf4ef3d086ed42ea17e3190dcdfd730c35c18ebeb77f7a6584fa44871253d0d5050da6d4fbacffe6e4fa432551170e8b3c3de11d0b54c10c9bb3003add7084ac4cb11e1eba9cbe1563aa3cc45449ed63ffe34d52ed12baaabed4ae2352c62d968559269db826f3a020ba0742975e3f349307020113ec6f9e4dec35657b6230aefe16978431a462c86439b544dab0c4e45f2e2eeb43b8fa5fd79e106377cf01608fa9603402dd90c0913392dfa0c1a05e2f6e7d8282be3a0813ce3d4da3a31fb7cdade888658e8d1098c5ffd5580d32813e88f82801e50b1d076317c2e3dd663c3512ec4df5a95b9b1f7a1ca71dd7bdc927e73c4a039c4c58a66d0efb891f41e37624aa85c108e06ebf7d65194283085046e6711d07af85d95c5e9841026aeab54ec673189dede73fc9d3b6fcfd2b5f41fd835ff0ed2600be24cd3bc0de2a8f5fa0e7c8524122ce3b6bb2ae29729320f1bafaf94722d681de9041b0b01cbe15a5b639ffe16df0de8378f66aaea40a4a35fd90eff458b2e1cb5b8ce06c3739b9dc805a39828cc7858a90035e04f72f29988996d951764c6d0a4a1fbedf1d244a17ea186292632e3623b6d8cecb212ed9631e3e840f39e3caafd1f81fefc868398ef2613be21ad63c1241b9ff6fcaf06f813d8b2854ec5e0ea58b9ad60c7142fde6d2750e76bded41906128b307c396257a39fe803cc25b7361625f62fc7fe9bafcdf6b1e467840899d269801f179d982ee752eae22dc344d787709ac0c53d1f7a2f0d80568a5f77a4bbd3ccc277225add15c59cf21db5461ff96251955125ef65310c42ee88f01852cc1b33bbb7ce17ef57719f8f16f297e55b8cb9655cac2cf5c6ce4dbe65fa7de3fc2270512f87994cdc5371af3aefc1902d784464a0b8dc3490f06d6cd2fcd8a391b0c237b3f8500a605e50662d268f26d9a6e02b7f2c6088954c45e8c902b0329e677cb943e41a14d469c01f28754dc18fe1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 贪玩的 ac - 题解</title>
      <link href="/2021/08/29/LG-%E8%B4%AA%E7%8E%A9%E7%9A%84-ac-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/29/LG-%E8%B4%AA%E7%8E%A9%E7%9A%84-ac-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="7fedba1c75a164fef03c61c4595c17bf5e68eae792d985320833fd4f794f0a83">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10637c6e81d6995515642d55a82aa31a45814cb943c1938bfce462287bb4e6f662972741379ec8720fd386f2d1c3f1d9d237e87f04e5888a4c7ef12a34888ccd754776e8fd259c74546f44032739932d3ea620ba8b7e189c52bfe93c338142f3674c8f490bcff261bc642c17239f5a217703ccf9984ad1702d8b8db8a8f0c9adafbf8907c3e64d19f811788f933438838d2b878ca1e9a345173e0f9d2a02cbb11ab54988caa00b00970162782f9c6c91417546eab0380979a13b8d6bd9a8280f01e27b6bf91b68cb3bce3661ad135e39b357aeee3dc20b07c5f1bb23700f528b9ec997b445e1ebc1dbb7576037d864a4d5d9728b74e15886fb4569bb21e2d9f106ebd0c6a9c32f0fcccfe926d3450b7e68ffce34f5e16e052ed5a12aadb9087f49a7172ac956b35114a90885022fe77bf88058bef4e0d16a849deff512c93fcfba40f218093d0ccbf2732d78b5d48549a49ea67b41753cbf70e8f78f7dc1fab22e67a3687a64e1f50b0a6804787642cf9e8b580a42875c69507ecaeb35cf412c05a9eb0c1e11848b3d95cb9f8f4a3cec39cd44323240eac32d3cb4a4113e04efd444707958d4de3659590f74d5b388ff71714916c31d2e67508679d430a4c688332d187b8940175574fc2315618d4e43dc51b71124bc5511a62b6a9b01d69b6d275722c687b51f7e2ac59c31a6322c15d8f86f3edacb0094a88144e4c74f82b1e9a9128d8cfa67ef9082bd319e8c25fbbc5f0dd32be32c53c1c6e017458caeeb618216fd91405bed30642d544de6dc5aa4ada8e9f5c6daa28f9a267a18641f0dd38772906d738c4859d17ac1fd10a467203f118363819b188dee41837ee926e2a5af9e6714bea45aa1892c04396f8c3c1fdcefb2690d6e8a44738615fe0e7a97181fcba42363e7668770f8fe4979e220edfd69f626e0f6b3d117f8821a730cd754dea54f8b636af349c6b1a97587715f70147b22a94085ad101a450dce00381932b3222d9f5b8b6aea20cb94c0195f7a72ce69edd297bc6f1ee8ef456ed93e84ff9806d554a0e4ce003f49552a133d8e5264dfab08495ab51cf4e884c94b613651918ad0dabfca880cbe359f0377b3edf616f5905fc2fbdb856cefe92b11e576a20452ab668d7f8b15316103c30d8f5e3dc20ba5208fb0595ba5a4dea159f546ca6e064400215471918e47c09199403194a03f837242365f38bc9b2141ab269d86110640db061a032020f7b1bc9856245563425b3aec50d81a4d1a7ed2b3252f0fcaf1a16899690569a9e3dae391938261e540de4143859acee77efe9064fcaec23bb8afcd7bd056f534340f2e311aa65bf280ada65a37a8b9fc40d3167f39c684a7dc8341b129da85f2e4492d5afe80e8a0f6c904b085305f3f6698a3fdd16d06f227f24e329e4ee0254eb548116acdc508090668b1b3a9278953aacad2e956ca667f6bef858622434221b7a6c1688dfd500bdcc84ccabd8730fbb4e9630c5df71de42a02f7d90c181c3206501ae6b95bea364da09f59565827aff220fcb3376e683d688b7782e049843e7cb5fbb9c35e2a4d5149f9499bd78e250c82f64dd66d8620bae8c0ffda0e7cb36d816fb556c2a164eeca356d11f64eed432d5c6108ee374ecb7f60bcfe194dc4e1223b8fe9c1a00a08c5d11ab62552f4e3f069109faa61151613921bb0b14b71a337c3c21de9cf7ba7ff4d77245a508c834d6856be04395a8c20268d0e9a09e5c60091b328f9718cbc4a62474c83880bcf5999dfe5cfbda216eee8a7d3a086d849857fd77277febb37542531bb68cea9c0c700f918ec5752532870410e392adada16cdca56b604c11758e48fdecec813315e0308f1286b61913d03b76af79b941c79f7f232df002002bbad0b3369d250909ac0a8ad9934f3f382ff1e59acffeba52c60e13e86af4077a5e4696519a8bb88b82a44a02525e7e823f59649007265dee5b18748c0c4c7a94ef65deb7f1f9aac4abc3dbd4a5a124b0ed28f07e9f2cec3f3bd6abf563eac8df879ff11501b355c50e22cf6de9d38a6eb68668fa386d270a6da02393970a14c03cfa41fe4f195ba55891f28bee976f5aa4e97a79e7292fc14d4a09a04d61c2e10a113c7edee91b1590eb39e10dcaf4aa19bdbde6a9ab18cb9399561ee0f37bff947a671524bee18a0469fcaebe6a30891a27434e01a1c078e02577f89059d8c214b9de250c385c6f3eda43d1ede8c92a5cc805ade8e68d46ac073bf7ab50c6d53d1260d1113e9be727b7147c0d4301d104eee56fa8f2fe487470955faba9bc7e40a5741188d4ee724156760a6bcf7b3b9ddba4f1866aa925608ae546150f2bfbf7ffd6821f4b1ddea13a15d81e5a5cdb0834e43167d0ef377ec2a38dc2ba6441868b4439aa5cded7747bf891251</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - Numbers - 题解</title>
      <link href="/2021/08/29/LG-Numbers-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/29/LG-Numbers-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="0cac20aa8f67b6d5c35ce72f6302eb87a1c0375ad7edf4e2c05a2727d7728453">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58ccc585a7c36e3b30bc5c5863a045649895cc97491ebb5aa3cb334e82f8e49866b5fd802a067de28843fecfe5b20a3ba1b39f123f4d30ac641eee5c06f1b77f28b2092cf1d6493ebad7051124f154186d0f45e211849acfcaf85ac786d7933a454478c3e9bfecdd420879e208c332b956bef72671c0eb5c71a9b6b3a9ee7600a3ec9f711e0c1060507afe6dfaca61e21a131b0db9257948d333f6891e4c2b2898c9345730ce85701dfdd44f813616840acbae7fecd772e380de90d0a30cfee5461d639278e17a5a9926b09f32429f60748b39bb088c659b71518177c8d4e8eb2caeac1aa90cce4b5937aa535b58b58a8cefe9aae105233056e41abb4ddbe9e0e977ba8771651fb1914ef915809b09080c4b6ffc15d599bbc37791d07dd06067efb67b96717b0011f4e99ef1955412633ece9f03bda6c4d643f00ae07e20e9bf71b8e9e10e9006e085652254e1e5e5b85b6e09398317385e1400108356d860d44b3d6cf173445b03c80d4a039a6e22b3db81523d5e0d22ca47c18994a4e237f98b8a6b7891bffc7a410d7d238de39d6f92e37a58f499efd40b41c0de40f3c5f5fe93b2c10547e1345264aeee884b8a12097f584481d8d491ae3242c531c843de5dec39a6ef78d30bc252564bb7733e80d12ef7b9a59a6c93c4e5bf253536d7785d32eeaa6e789adb7c603966016d4f2a1a9aa69d844b5cd3d7988f64ee4dd92211498914895251c5d55342824cb18ad03aa0e54980b44e5ef193f1b41d7e4605447e393cc4c733da8eba0954657c692ee2128f96540bcf29e192a6e9387de80134478371639994586bfaffbf7c77fe4562ab9aa6adb006a49fe8a8a4ab5d18d79759d4dead83c61d9e02ff0dc9e78adc50c5a71d33ecb42bc53d8329c64c91a6f8570a6cc4c30dcb17b2f448cf88357f84bffe141e4e27b7070bbb222fb0f592f9e72788027e4b89a9b68a5186f3e4dfa104a63285de5412e14320ce6661e7d223fe92ceb542e8a8a5ca1d8b9c31070e087e641e9cc52728ea2903393dc04d01783d1310f63791aeb95d40ccfd5e7be70cc68e5699029bbce21ca16b93a369704b454adaad8f47e1d228c99e46edd7b280bca4777b4f3190991174dae534dacc9f105013920095261a0fd467ac07373a6f51680608abaada426c8cf54be746d47776779836b9147c266ff6451da63434c3349b777dd2310976007a7ee301df991f703b8da1980c66213f60a3af6ecee59b3f640d8dea214a4ac28877efdb0d3e57a2ecb7f2219bc177e88f9f281c8df4f9caec1e51dc4764aba03cf4451e3d02dc2f079fd2599458068a6e9bfbeef6f480c63dea5c37bf43a96010a76d661b25594e5b0509f7ad3741c6e6ca18349ebae8c12e9cce26117ccd2f4615829ac0072d4169529a44e99567f40bcc0fb125da7f179b5c75d975b8d2c7563d088360996e90bf6cbed7ecf0760b5adaac2b8f63f5091a067891867a6aabb8e869f205800baf262539bb17b04913c1bfe37553ee4010897436ce2f91c9339c04d0a7db5f249a81176bec746eb36b47d99fcff1a53a3925ff75369c0e8eb3e51f65fcf2dc5eaddcf8eb04d9af2574e88475af02ebfdd25c1d2ede71848128dff640160c2de43dcc7d751b919326d9fcddbd68ba47f8f75c71d81ade153ff5639dc834e9fced99785d61ae6d3867aa8066284253fe129ddfc1efc32432de8f2cfe241ef87136d1c4f4da705492e4996cd9963c57a1774f9d679a33a88e23212459bbe8cb86270cf8d02a29eada83711365b61fe3574f75622f133fb208b5c41ee1714f512839fb540e99de22fc377360f693ca27601d9455a4f999db3c1d661189382bb2279fb12f6e346dc254587c65953d2242c1cf557f56fdbc6fd93ca2e30731bf9a2439877758a246590a184147a83250dc8dd59563dc71e269ded8cd5eba2884b758b97a2d7017e5cc46bdaf152610d19f50056a397be8c5c3ba69543fecf6d09e16c954a085eb8480bc84e1c45a81be924f3e51e7a2577809c575698dc5e0bb22828f683db22dd30b1ae1fefd6a537241d06aff5b3b8e0d20307b745ab91c7e64c4c457af241fd98f64a5997abb31eb8e42b3291cd0498f77abe07319d84384dceb7030d94479bc789c16d3612b19ee676fd75120e6a29c6a8cef0aa32d911675fa35ede0cd04f2a8b27efa056d764598b1693d16b08a0c714d9aa4a24b1c4ce897afc42a46bf302c937195cecca32c16f313487a0cf405c2ccfb01da82cb26f0a5a442dd555d19118da17138a33e74ca116cb77ca611a34389274b6a9f39a84612f0ee837fcb10b51ef85df28fbe733bc831b954a709d323075b0fed781b0771c8889512c70f89fefbcd045700011bd75f94e409e2ab1835345312bad485473652bd81b2b3a07c237a5fe57eacc5cfc0a01665a3dc00c25a8e5ed898ba25f98ce7a3eeb5889ef63ef272a72a1b06c27099fb00ed6e29c9d9fe7b74424cd6540e1d6a47908227de624a30a8a212b3aaf803f30b11c1667059fe4ae37668c87ada3dd1fcecea71a26d897e483f3bb1418718aae1ff389c40252f186ce16a92a726e048ffbc4c32e401b60266b13181820f79430b4a510e5e484a09541c87364030aed3e34855c110e0d850ba3c4540040151178da00b28323e8c5ced4437ece2bb10b6048d1554bc30a1ed88463eb0ac26b74bbcac9feb16bb7ad4d0c7113f9bb931a7543dc57b81130b9a86ab6324e2a2772638368b2736c69ac112e0d9121720c574a6e8f3ebe23a6047bebea61eca155378b17bc842f6a3ccb95a60b219d16fab25b7941d9f6a2a898b2fc8e131c4e18a7c30668d99dd5e2a2a00c1b09de2c7ab8c7cafdea8ddc0a2cd325f188d9356f11d99084528439b406118059e23c8c7fbc79441c32172ce02cdb0d539ea036173c4b09f11bddd2fd01154a6df04abc68009bfe36f242dba3b63cbb36d8e8a1dcd3baebd10c6de96bd43e7688d392717b9e6409374eae545b12e44ea7b02c408e27117f81f4ecb97a34bf3abe0c05e4c0c89bb0dceb2e9818b2610cb51fea0f27c353953df7e7186b009958b8047a2f837aa62d2c38b275006358d16725d4acf21fceae5a3f92a7f6be32a8e5e9d6c4f47e8dd3c76aba43339f56b27b5e5caf8f01d01273f85d473cb98f5cd84c00f223ba7b6ca66f6250d4ba5b49bd1bc5d50cfdb7262df924a3d90ae02755e58ae81b33f0d9b9765c8d9d696d261a3df53d032efd99c5acdc6f9a84357e4339608062c385912be2006b09b67a8769ba0f5a9dde36d62aaa1fb64fe13a8f8d5e0d2dbd1e60b9ef90965b789ca6d87b6df5e555499d9740258110a0f2f43db474e23f61de89b932819d1f16bcc8d95d360ede1492157b86dfbfcb8df4ca016ac8f1078fe29af2b96f1179bfa9e1505f616b33d59647c65fbad623a0a7c72227649a150c717e710a1409bcea713a0bd45e892c6382d6aaf5b385908dc8a75c53cd87cdc1ebd9f673ea59274c04f1d12c121a51e7fc6d7c2c6b129b6f1da3750bcee9f735d70e0c0c8a96f603f07a3a50829f0ebf8ee262e67905515ee04051aa76e4a067c58227da6aec30d446887782679298d56bf30fff8770de6fb475a51e9875914f09e366860cd4d356fa44bfb8c5ffa6d9605e39db54f419d4ed28240d67b8ff7b82b6b48df9fa3fde9c1ea8f71e2927158ea3375812d0401ba0a9446c24fb62bc78b2bc758904a40a484a46698647fa96994604f67ad45b26642c309b35331611f4f9f7d1ac635ff1f5f4f5fba5590ffb9cbe3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - MC 生存游戏 - 题解</title>
      <link href="/2021/08/28/LG-MC-%E7%94%9F%E5%AD%98%E6%B8%B8%E6%88%8F-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/28/LG-MC-%E7%94%9F%E5%AD%98%E6%B8%B8%E6%88%8F-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="86caf766b1e54d6fc2bfb7c66e1e5e6d19376aaabff53087e9f42522a0a9670d">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58ccdd0cc6955c9a521f3f73ba1ef23130e9f5a03d58ec0e875e9e1824f289438cf3f906962409f0e329246a5069beba33560c7f6bdbc520054c94d48bd9f2bb4434dce35499b678c7d9e31791423b881bfbfd3dedd8a159f847d37755d1a5ee3b0132b1920fa3058e5b9ab530e5936a235b2920707aa164bbb414a4d7b0d610a14929211f3e11cb138103e7069d3e7936888d72a4d4b319b16db76115c8814fc3e14a73211f38cbf48cd18775ad7cb5c6755053b8142040b5d446762f1a0a8dcf0c9837c068a3ae91b3c744a140657a00b5e5043f5e474b104e1237aca2e2e7315554024233bc7e7c05b0e6c7489ddecda13ea9539851c4b65162a448ca9ff6cecb7db3c6738b2c4fee1f8e7a509e0045850c615317546a24e928dd2660b893492ed01a50361bbb942e4feadafae0e23745ad19e8f9ebc8563bee2e9ceaf5a4d5184d7b01fd51ab5fbe6b181e8b2b2594f9be4d97d94da74bc1390286b7b08b33fef1600c471797fd6a65cfc4d2c2904b799d551317eff5624c224e013e3845edd225451fe462f1e047bb15ff35ef653fdddea21e7c3caabbdccb56bdbae5f94babac41d486e4dfd6c7d53b34a221d6e007c9f25ff43273f52e4af061f05a899027414c28605a2d388c4c490964048d9d37b4f25489b352f3887704abc25f43f250145db5f340a54458b6d864e1245bbf853ba582046b2bb2142cf46faa41d7a95fec576b943f86f9fff19dbd3493dbd0f2010386a02f9050a73f8e3ea5533fe6954ad012209c84a17e03eda2b1eeda237858b54585e7e3136bbe2c1f5236029caad6efa04051d7d7836a3c55d670e5965eff746d52c182ae648d359cf3214dfde5950e28a6437c2cef02911a956b5abb57572024ce80d9eb14d6c83edbcbaa477808eb3d44cf9e3da8486e76f915e00020691b34a6be26fbb101074b404d95200e76ffbe9b89bb17bb4fd784b6adf259f950e3d9e116c04e1bcca105a69cac0730fddf84245464281b832201b12295acec13764c6fa2b232ded9bc807240b81d6f6f97a21bef5e0913e11c9ee3a7de34bfd04f7b5b805073d68678bddf24772ce305f8d60d7ba1e08b4e6e7d7dfefb1d1b6dcfa52842b4f76142361fdb4d35f4a19f4524b3c3d58cbb06b9eafe735c722127412c32831a4c602a454f10234eeed0afe3e959e50b6ac42a16382ef3f8cfed63375eb4ea4798dac5d6e4f81baba7912da6b30923065c1b27c44de2d4c6192dd61e246390a87ed53f9293f470abb8d8bf95c59f9181dcf2a884e71c9273e652701aa9ca56212d726d264f70df923ec5bcfa7db082f89fffa6ba3b252fcbcd46d7657a2ae86d8b5b4b80fc1ff5916475ace5437073ebcfef02b2ff8f6b2d0e46e4bac54809dd56f34ffeb04dbc03d845af21ffa200c749408dce1445180ad6630ffb6157abaeed9b4571da26696f0b91c9e4820a49b4d56d74a15cc863ef56a4de199d0ac2275a5f8e480e77159774335e8e767f85ccde376a725fa05a0fbdfa511a205475e32fcceb4bebd77137cf2170e6d066549b4eac791632f203d875cd6167029c7ca2d62c6647b5859024262600792049f118d6ea4a4676768b77440d781fd312b13329f17009708c9b544c06137542a165ca5c35434ce30ae4f88ca527cbd790766ca973aaac8ab6816d01363a4fb7ab8f3d49ea913c4d7615d7e1b6998e72ebf8441ad0c7cafef3a3085b76e0c744f21dec46e69943a46498513e739248701528a7fa5234944d81a7f2901d3cb3052d0fdb3d86cd4df3c46524c6029126107ece7186e579823b781590d6f9d95a08605da37443fdc6110a96b0f34ccac9e7d0c65fc4c4562df0146622d7667563fd368877e181ce47702818c2c531924a01a7d8abd4787d340688417cc494ddd3c293856b1a9f30f9ca79bbe710eac4183ff2b4b9bc32fb0e51e4acaf285858936b46fa9f74f4e1df02d4dff9dc9a3dd4563c1609ac92144690b5e6b4c35517cc518e062a28ce25f36f243067a88addef1153a4fd6f3554416db7ccdf4fe6c316ff9a7ee03b39b5d299596556dce15da1d90c4ba9f3b6efd3b943a318982b91388d1be3dcc5ee2abd7ff328e8f7b4c3c7ae1d1f8b11f624c45cd2766f510df65af5cdae8ea72e42f33442cc5ff0aef7fb423e32879c0a14c31e7af3477e5c06cdd5513d09e7482d560a1545dff8069d05184cee29947b7e1817cdae9557d576b3789badcd408aaf97717ee2507fe538be2092ac39120609088eb64e1d78547fe0911fe0ba328a9927c59822219634c5fc04642dae5cfb6ad9c3430f56f20181c0be4c1109fabc6c5dfac2deaea1ef3c085e803fecf2ea57694555bc8ddf1b45d04d122e6552b56ef01a7c58bcadcc3a10163a063afdb63cce4cca8ec49326256e69e065acaf9e73c67172d72117ae5a48919339ca09641471e45aaecd726a8d341a078eb37f78e06c4899ca7f883b724a07baa30f84b11d8ef37c4cd5cf9fb2cd55fc55e93a8bb9f96efbf294b999df117be8802a2f1d3fd917ad6d53a9c9c5403502438315c2fb59106417eee0348ffc0e91eaa9201964c327272a00e8d64f6fd86dd2fa1fe3f86ea16821584c95472cac9e50ce188e38e96ea1816892d273810b16f93c5aef007045684f9539719ecea98aa86f84d20f4841260b3e41a599236f7ceda468b582c39ed8605e3bb57e940503be11f62bd9932d8e58cd573c61173cb2191f851dcb5282b0d885738bfbc30a32ceba3db3b4726adeb99773a3dfd9e57ac2b51b1aee8bd1ec80c93a4a4d6d7b60af33ab8ffedcb01091e14fc1cea0f4d315b8dc387a24996712b7277ca04f0be3f7a57ae6fbcbc043803b9749261ab0b4e7ef6ff4ab80eaf6f5a6d30d8b1c6403d30d1d5abca182cefd0542e0d6d61a6e646e3c35ab6b5dcc4cfe249bd0f1bfb40808f68e081768c19f68b6158f7acf360d67069bd0cd939f62ace1be0ab1fcf8380cf74bea70ab32f1e5eb4e48fe9bf59c5691481def6b0616cd969af2f97daaf69857749763fd2fd81b68f7999332d73efb72c22c4547a21e1bcb57787afd497527fb26bccc27851357514e7298a2806df9cd8a9c9eb677534e06c8bbbd33b9c486d54ba51074889a591a75783f180302032042523adee8bb6796673ae1b94a826fe6842fa70df1f4062419caa05ca284cccaa5a61e0ddb62644bb2e63024e9c1f1c5f56b00752adb1db75bafb22b3be9986b354ba7d6d9cb13306807182f20ab914e61fcd9c1f5c898276a121dd744ee6fbcae241cc51e62a788c44e9c50de0bab982025bccc84263298bce3008240fe91c508b5fb8ed4f94ef60b82eeeef9add28dff21b2c868185feef6f7a28a9757983c1af3332c4286d69b533ce8ce86f8ea7c6f8ed81975474edf6181b82346f640f12c727720f0fbb8f09a8aa822eb0058e4bb45b1e54181a3cae3bf39054a24209f8580a3cfb23dea76a032c29c1af26534b8aa507e2f35eac033564c4f74ca099d6fa76673439af0d56e8e73ffb709b63d6c2994d64cae4f17ac491cb3425ab7be4f7ade6594ef4d8ce8b29955238fedaaebdb3e05ab9ee168e3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 爱数学的 ac 做因式分解（弱化版） - 题解</title>
      <link href="/2021/08/28/LG-%E7%88%B1%E6%95%B0%E5%AD%A6%E7%9A%84-ac-%E5%81%9A%E5%9B%A0%E5%BC%8F%E5%88%86%E8%A7%A3%EF%BC%88%E5%BC%B1%E5%8C%96%E7%89%88%EF%BC%89-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/28/LG-%E7%88%B1%E6%95%B0%E5%AD%A6%E7%9A%84-ac-%E5%81%9A%E5%9B%A0%E5%BC%8F%E5%88%86%E8%A7%A3%EF%BC%88%E5%BC%B1%E5%8C%96%E7%89%88%EF%BC%89-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="043e2771b10aec592fc898b1ed73d2bfd40c9b46d5ceaf2ec2090a91e8063554">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58ccc8bc78212f166148a4c68dc108945a7c79725a479066f905decc7a749329571881c1336b6be3dc0496716d8c66692d6d4ae73ad2e0bf0ef41ac9837122e6158b16636161662a38c6156c76cc7c5db76227542f050840f8915e6677c92ade7f031c09e5ba8d8a435de43994cc28484e52e51453ae052dbf10da1c6c66e071bb91d157b5960b031d8e32d2f4a085473630c8d1aa7902f360f7f9b81cc1bc7bec51b9d063be1f31e14f05bcf4e0c5ff65b299d889f648c02bc47f9bdce84f030e19a32f128fcbd5ba4219378b66bef26a3e4be4a963487274fc448c9921bca7a8c03e7131705731a8a1f25e3e556172ad880d5495d8fd701cac14cb537c6a4cbdbd0f6acbfc427684887f2f29179d1fa1cc11e165e4671a30c5c374069137147e2d9dbb28c44cc91f76d005a852c967a58920ec1b2f1b89b3720f109a9e50ccc2309ac5b5cfcf4d50b91980aa6a03ec5060b43eeff758b5a0e19c6c61816cd534d1266de96f0e291a97888f34464b137907c6841920e9126cf7b19674818318c206d389ac83ef1267c69180405e95ed1a170ad37ce8fc716c50058000a52047447b87c1c01b9f34e32f7567e8d19c2faeb49b52b25e8f1ca9bcd8556d32448b7b635ec4f79fbf3d87e8135c6306768f805c2ad50c97fb04381f63049ddb26fca909ca3e828abb6d5dc5d67b9c4aa5cea598e72577ec1db331b39005d615e209a3981ea70e491e1af6330bd5238f070d34f6787026d89326c83677490e94376122bcec333e7b259d4f1632b2e0a0f0debccdfb818a0ddf62534eb651671d31d198551d667ac9ad0cd53a9955a7391cc03bc36445b81441fc4e2e90c657435aedb5b28b3df147df989e96a04a26e88d35d883b8ca04b03937d58b6d7a7ec869e67cb31e27eb62a31d7ff1de4524df4ca20b604a7ca23cad1f4ba83801b1a4c123acd83053eb2d51e7d15f431b7f201ee942f6f31a73147d4c2dedac4fb09ba0b0358cda837b0d6ffcde5096293b371c907b10da02000c42e1d58a417cb02981240e596403c501bf4d18b405e3783fa5fd0024fd27e951f2b2f5d7ba4c719c8d966c9417a1f4902d9a20e50739f8830066630ce43a2f73f5dfe6f9a9ae416c4e075e62f197a67ae174e0c11a35797f28a03ef483c4511a2ca09b741cf83bfac255a8e91d500782033d213da46eb49dbaa01974c9fc93c7b1a1f6b1774075e2e7f837ec3c60ab6657b7c82eb9cadd0d473181d5f0d33509856565f8e8a0763ee0fb38c64eced5277b68332e7f5ea73983680337654542e382a10da96f0febf2df464fb170f00a8c0b17ce12396580622853e81d0717bf06173b2b705ab397b150c43ef5060d2bf0437ff8ce0801bc22f7322faffd65190878f9a02d71b5fea7878792d0f1f1a841767372d0f8a42a0c650d6a0981edf672f6d6f284276aaa57434f656b715ef39048d9e813ebc4bdbb28f301cec94186f4847941350e2b3b01271bf7cc1173507bd5208d34291f1829608b0ec5b30f0d4dcb296a479031aa6da6989867ee6e5ac30272b720b4071323bdb07699c1b4aa57a6447aebdc533075c5310a3ea75c3ed22229347ba18d33ce5cef8d3710ba96021dbc99fef038f98e13bd40f1ec70585340267e32dff0240054a0e6cb5565bd8cc0c4c2f876356214abdcce0331f57d13f4c34266ef42168c7077710b5671e1304c3c8a4b3538acdec70ef31313103b03f7024f8ee18ed66a0caf44e844e3219e1989e5e93b9ba9b6414f23fc6f344d5655b87d8dc2dcce48655f037080e877b946e87dce13657026cb9eb4bf470c513dce106a8c66cf7ca73984f80e7e7d944cb52b147db71e8a34d080ad4716dc1f8f939a610eb135002f7110ccbd0aa8dcc6bde33bec869f48b146c7e2677b35951b1ea03b55379a5e3310d7ae1d5babc81b7dd4699bdb49301bbd23b1dd87dd57e200966a162e28fab2fdda83ac0d542942f8a85de7a0dd2e9aa41a8acc35ec8f21874909c4284b6b2e19428921bb303c862ea2a5c11a37c057bf3d28971536d5523bcb6d5e59ece9a7e93ab1d88f9fd8c6214404f226cd9f4c93326fda4a150882f0501b84af35f1752a9b67a3bafb2dd1cef8074b4477fa7147849f9592e32ff35bb3b79703910880735ddbf4e90a69004b421b34870a176883a290be089d2309550766c0989de1c87a7e245a42085702a91df66dbe9d2e768778ce7ba8e6b4c97435902961bb415c85ecb7160dfca6358c059f86e059585f1a529c50f0ed4e1a007da687d4ac3e32885d944b1c5cb71a469a56262cf8d16a5ffdc3393a27213c65bfe1581f559071bae77f7fae3fd9eee2d509a0dad2904ad88363a18111ac12d403cdb13abba474c13c89a907cb5f8990580b3e72798effaf3a935bcf09aa3b4c751dc037a176a9c2154d722d14b2b6ddc7dea59a8c30ce556c5ed4c50ed993b9ab5ed05e06ead97206732b483d99125d43f67104278b30542d9dc776eb0d36d3f49b806ea40b34a2e03b5ce252e7f667c052cfd0231756f888aa54c18265d429c18aa3b1fd05f599a11c7ce63108675472c55f84de29f2e8fca8d0d0414e718bcad4e9a085465b47082263c4fc5ad037b48178cf5f114a0d4185933410e92e34696d3019e0e79483595450f923c42c49e8d9ae0c8b518a65fcf1ade5027cfa994a7c18968bcaaf5c243c540edcab29147811f06eeb875a6228c91c2b26dad0413884b81e20c0d81cc54a76125f76ed96479b57abbaa48e64ae0c1674443836b9c68e780ab3b74f60f3cdd7d17fceba4227d5d41f6374f781e5aad3112ac63eba0f79b52ddc1b71114c3ef45deed375eeaba3ac5eff3a2aaa923991825e17db6185ecf85ea9a3f4133e027f92d15041fa26a89efcc381ee3158cdb676bf0d224e0e31cf55302630ad9d870afcee31eb32cba9409223eb6f3b048bd738a3ef9634458f9bbbe678ab08a9cc00cdc8fa0e467ceb3df65358347a76811fb13ac074bb3886cc5115b93b9c0d11177d9dd7aeded8f0d52bb9f218aa0c8bdd02bbb82a4a251ded1cab5af7ab694c96b60ffaa2375bf760c3454ea409035d39c1f82a5ec554b0170182a9d8badafb6a9affbe860084f16a6708a9d1b50ce21a3604e03e1d05a664e6dcc507efde7dff182c630bbefb3682fe60e49482e7d36f192f9a22f5b481f2eeebf7bebba49101c4693193e8c8a10d2df27e8eeffb65156809fcfb41c90c9ada4f5e6d3daf300957ae156c2b3489df779f76fce3ab81f502913ed39e06fa5ae87b80675b4e4dcd9cb8e4f3d9e39fa79a586c0ac8f3e0ebcd888af4bd7761bbb1316b01713ed79ed8cd30906d7ba781d50a46468ecf9b62d1eae36692315c51493124f5240c091d69f9d89ea0863e37e49a44046216d7133535a0774996d1782ee83f8f03b4e9f8fc2cb6980fb0443b1952101cfc6e72e9b05c7d82ae440ef52cb0b5625eb3f8040804c30a8c340fd3c8ff3d20d72f5d9aa3c679549dfca81c8513dffc8392ff0e4ae669319badb3f7f2d8388e8697d8f82e99ada717c470104ed0fdae2a99a6708877719ccee477c357ca36c1b3d2add160e201deb286e11f19ece998357bea4e52c14269b73cdc99d6f09a6fe70b727dde6352dfd27df3755e3af930b2e4653129fec1eedb933e4df3e358806c27c7dffefc89e2a3e5e89495c393981a7bf2d55bb0f2f7d382e8a2547b50417a2b09e10376237374601a5aff0f64148c9ef6c30cc24c22ec0eca8db8ed7b0041a1236a4a0c5ad24acc94734ae7d2f1c8cd128a84151ead5454863e3c96cf34433764795e438592867992bc1196b2191f338c2af73aa42d0c29565ba6bada339bdfc2b0fcab89fcacb6252ccd4dd464ae49826e1e4619a477cd383394594fc18a5ab7a2b910821bc9c817b97562b8c4e46550ae9c46469c79d4093d32eb03c379ed912d47492e71acd2d6eb82c0b3b27fbf927551379b0002c1d3fdebb0ffd8f8317e3ddb63ba0076b2e8c3cb067e2c51eefec125f0370eb807769327f3d91e8b41cd13098e26518cedf2cc414fcb0a33d552616f2c68f50494fab4a3d9e29cd918ecc8cba28d82682300372b494a8c0f8860a7b2fa384f0991edb6a2bda80c1e68319a929c8deb0ac2b798c21bc1fa57161357055ffc4e875b912e293463b51a288ad4d6df6400fd977555397cc33a98f846027d3e6c0cd53cda988692d84c49f259990bf3309c0b1b6d5629c79316632c3ef41e25892095c90b1ccc57479890ecf121</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TLS - 如何使用 FTQ</title>
      <link href="/2021/08/26/TLS-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-FTQ/"/>
      <url>/2021/08/26/TLS-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-FTQ/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>本文章所使用的方法保证在管理员账户下的 Windows 10 中有效</strong></p><p><strong>本文章可能包含敏感内容，请谨慎阅读</strong></p><h3 id="前言">前言</h3><p>标题中的 FTQ 全称是 fotiaoqiang（佛跳墙，<s>即一种名菜</s>）。</p><p>那么个软件的用途是什么呢，在 OI 界，这个软件是我们众所周知的 <strong>VPN</strong>。</p><p>用了这个软件，就可以访问类似 谷歌、推特、油管 的网站了。<img src="https://xn--wcs.tk/5" alt=""></p><p><s>以下纯属扯淡</s>：</p><p><s>你听过佛跳墙吗？只有1%的人答得上来！大家都知道，佛跳墙最近很火，究竟是为什么很火呢？佛跳墙到底是什么梗？相信大家对佛跳墙都很熟悉，佛跳墙就是我们每天都会经常遇到的，但是佛跳墙是怎么回事呢？今天小编就带大家来看看究竟是怎么一回事。佛跳墙最近很火，其实就是因为佛跳墙在网上火了起来。大家可能会感到很惊讶，佛跳墙为什么是这样的？佛跳墙究竟为什么火起来了呢？但事实就是这样，小编也感到非常惊讶。以上就是小编为大家带来的的关于佛跳墙是什么意思，佛跳墙是什么梗的内容。关于佛跳墙大家还有什么想说的吗？欢迎在评论区留言哦</s>~</p><h3 id="下载">下载</h3><p><a href="https://xn--x8888com-ih6mv89w/#%E7%94%B1%E4%BA%8E%E6%95%8F%E6%84%9F%E8%AF%B7%E8%BD%AC%E6%8D%A2%E4%B8%AD%E6%96%87">官网</a></p><p><a href="https://ren-yc.github.io/assets/FTQ/fotiaoqiang-2.7.6-1.zip">本站下载（不保证最新）</a></p><h3 id="安装">安装</h3><p>运行下载的 <code>exe</code> 文件，</p><p>安装时一直按 Enter 就行。</p><p>启动时由于需要设置代理，所以需要管理员权限。</p><h3 id="使用">使用</h3><p>双击桌面上 $/$ 单击开始菜单上 的 fotiaoqiang，提示需要管理员权限，点击 “是”，然后在默认浏览器里会自动打开一个类似 <code>http://localhost:端口号/一些字符/connect</code> 的新标签页：</p><p><img src="https://ren-yc.github.io/assets/FTQ/final.PNG" alt=""></p><p>点击 “点击连接”，就可以愉快地使用 VPN 辣！！1<img src="https://xn--9zr.tk/gx" alt=""></p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/26/TLS-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-FTQ/">https://ren-yc.github.io/2021/08/26/TLS-如何使用-FTQ/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APPs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>『题解』LG - UVA13012 Identifying tea</title>
      <link href="/2021/08/23/%E3%80%8E%E9%A2%98%E8%A7%A3%E3%80%8FLG-UVA13012-Identifying-tea/"/>
      <url>/2021/08/23/%E3%80%8E%E9%A2%98%E8%A7%A3%E3%80%8FLG-UVA13012-Identifying-tea/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p><s>太淼了</s>，一道模拟题。</p><p>一般 UVA 的题读入行数是不给定的，所以我们要使用 <code>while (cin &gt;&gt; n)</code> 或者 <code>while (~scanf(&quot;%d&quot;, &amp;n))</code>。</p><p>每次循环读入后，使用 <code>if</code> 判断这 $5$ 个数是否等于 $t$。如果是，计数器加一。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int t, a, b, c, d, e;while (cin &gt;&gt; t &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d &gt;&gt; e) &#123;//不停地读入（由于是cin,所以不用!=EOF）int ans = 0;//计数器if (a == t) ans++;//判断if (b == t) ans++;//同上if (c == t) ans++;//同上if (d == t) ans++;//同上if (e == t) ans++;//同上（草）cout &lt;&lt; ans &lt;&lt; endl;&#125;return 0;//完结撒花&#125;</code></pre><p>$$END$$</p><p><strong>本文章同时发布在 <a href="https://www.luogu.com.cn/blog/renyc/solution-uva13012">洛谷博客</a></strong></p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/23/%E3%80%8E%E9%A2%98%E8%A7%A3%E3%80%8FLG-UVA13012-Identifying-tea/">https://ren-yc.github.io/2021/08/23/『题解』LG-UVA13012-Identifying-tea/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution - UVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 愚公移山 - 题解</title>
      <link href="/2021/08/23/LG-%E6%84%9A%E5%85%AC%E7%A7%BB%E5%B1%B1-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/23/LG-%E6%84%9A%E5%85%AC%E7%A7%BB%E5%B1%B1-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="dd7915d3d2e1fa03939f5f91bf8902011094163b6c33d91aa6d27b1ab382776a">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58ccde8e7bf39cf21058937676cda16fa723b0b4eb38a7fb1846cc94a68a94069eefe834a9452b7de6ec3ee553fafd36141d7979976d973159aa889cdb2010bf7e4bb7446a986fc4e29d30a0460e9a122e8f7e08b69d883319a6d6f6aa2804362ad9177acf1e4f35f489539fb9b93e407c02ed22470d5fdd5775f01587da6cca46420317d2a10424efc74172838b0112f0c87c9c7844bba0fb6da0981dd8b77c4e4bee702de250ee85daee22a2dfd8a427c9a3e46ab3fdf83cf22221c9f18e20343825f916a020dd7ec0784d72605f65db1eb93159f3c01ab79e00ee16f0b36d3be30a7f25e4b7e96fbfdc3299104c05b6e4c332b6da97fcea0d98dda4cef9eb3e0dc2c8fad3fbca16c9051dd5712f95fb57519af770be44a65c6368a28f03f2ccebc1a02bf581e9f1a4b739c90839f7c94a5bc6bb9713d702681945e5d0ccf2482166e8c05c25885abb035c0c95487573794132ceb8384760ed472433f507628b213e570ad93f089d77e1db87d43f73a680762336dab33f6888814ebb63858a38ff9c626a14ae1b3645ac533caa16efd0df93e645f834a7b182d6749e3549bfa3d0e06a3826628519d809fc24136480460fd372dfdf6d53039d5d032b137513d4db5d440df6a821bf4c74739cb9467097d2f649aa7d7f0211289011a22d01e61e37af890c5f380f2df4f89cc3a5c252b7c228cd9ed9c7d5170a6709cc253f64ea913adf6ca16b583cd41be1a6d44bb0c807ee21aaa56f9b54c40ac25aca07cf9d238bd2a9ccc2c3b43ca1a34a22be1077fe5926db61d4ad6fb596e0aad32a030b35663b099745814f2059564d19e43790a0a18d5e1e8b6c78a91a218aaa5b1bb4b4d43ee4edd971bd88fd6baee200c73749c90df4a932deb15cd03e513a8c4ca20e37679d8e7bc33fd43f1c17e427bc243b596c5d57c3e2cd2485769738772c2e22fa2d0116831ce07a458049015320f31a993d30981dcae5851747bccf18790d11574a80cad1a999272ab1ad246e58dd795fac384f71c5f12d17aea0e6672af0f868bae3f3189beeb61fd3b3757b01b2ed215593dcb18f34e677b3d43fa1ff43654de6fa46d21ba0302117b236e26c256b1f1bf5d4b308269a8190badc0c9e1ca9d2147506a68f754385eb4a275c429b2ab44a1cc317c462686c1e61d7bcbbf1c4ce83c7059f53f525a247387f01dedb66900a616651e4cdfa24b8ee8150178fe17bb640b2ded9631c0cdb5c6dd61430164d1047bda69fcb1bc5f8ab544afbcad658d4a7468ba4d805e4222d32a83bdf7a5e564e376617fb5bdc06cc3b7f7c366e2f9cd1f59dc979b9a507df78ca2bcad4f75c490033af95cedc80063c088a82946cd3a141244e8f2fb21b05045273cc4f943812fd2711ba480b7f610c9957cb2d66b2235c0a4fb056a68ac093bb44393f4f0390e1227f74db150c0bf786cb924954eb27dcbae0c66c218b9970dc99be404ec0d299421524722dbc5bb79eedfad1c5abe42103aa42f482acd8eeec0b77e227a79b1f84bc8ffc746652167c9ef1ff81d962b38bcdfbe5feace68f9aacf0caecac34ac9cb9e8fb7f926f11e2955273284a53823ae72d126874ab4819014195dedf4464c234f716592381ab77ff403256e2467699e76124b87e418234ffa4615bf8604618196f53cd6a0645174fc224ce7efe6f1642bc14f8537bb2bb42cd93617ae4fbc0c204a0f73198d5ac69457020c0c87c28ad6c067c66a0be76ff55a6a288293f4ae45ee995fe733a95236eb7</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 听取 WA 声一片 - 题解</title>
      <link href="/2021/08/21/LG-%E5%90%AC%E5%8F%96-WA-%E5%A3%B0%E4%B8%80%E7%89%87-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/21/LG-%E5%90%AC%E5%8F%96-WA-%E5%A3%B0%E4%B8%80%E7%89%87-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="16783c8ea370fa03c2a733b27c5cb42db545295467564aa7b48bc00c7e63fe86">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58cc14db3c95bd80164544e733d5d0b786a6dfe96ebae7851c287a7d1d36f18e1da08f2fb956c5b0c60263fdb2d80ee27d1fca2ee688ce7bc5fc9c448d1f71c6814ed090838911cf32f86a13f02d2185fb3f5ab745f5d4ec57e08bb6d337873502e93cd9fe8b4c974b0087ddc58671873986c27b653a28c5c6d38d58a825d7e642335c12134b6e200b639f391c0856aa7cd73d3b85b8f89b1e4e6d4447e4e2eed709bdd321441108504910b3315a5cc8b59ab4705743a9195de2326b83b9d62b2d40d9b614eb654778e8d63170b76dc0c714a8defb08f315bb543828786ef3c707159bf50f861928b5baca828f3184ee43804dc08ff3c9d31f2878cec77f956c161317cf553b00906be2701363f40ae785a6f93ab2a5bcbc338ede7cfa74092be8c726536188462fde01755a29984fc34736b66e2e4798620f7947514d04c665144fdd41cc8c3c8397229d51f5f69f4ad3bec4c8565f75f79622be1db98dfc17e349d9eb4ab53af8284c9d778fed3e43b662d6a2a399e908e5260c6a10fe034015b2cbec5be13089016b1087d8514ab4468a1d6919757384498031c88ae963d40293fe2c39f90646a9942091e278d7f599f2374c348a08b2ab6be24d973ea919dd18465c7aabf0a50fc324cd62456db4d9df6708873fd055db56adcb3887ecbac407fbb56af703bf29193e5e95af2fc9e95b1e73da70007a4e88d2468c64f8ac1ace83b542a31d34070e1463e6dd24391800ddb0ed35b1b4ea4513591d37c970e096bb4fdcefe676e5acfaf94afd991697c6595e3eaaeedfe7c5de9d7f7cf9cb3d307ce3b1f5147e4db7dfcf07ec021201cb9a5680ece0ed7cd0ede89032a035a08c49a2bdb8575212a1ec4e2653fa251dbc989547ad5d174a82b42235cd78205d8bbfe7d7a9f03f6c08299ec83ad02554b0c1f93adaaf4820bc986519c3f73e48457e285fabcac1411bd7b89ac87355888c72a634651f9896e29e14520a5365bc2f5ebab5c4243c533d7b901361d652a97abe25b837d2172b3279866e94fba1b895ffa513d939de5435a1c45781d468cca3462f24cd3a3f35f64de3af73935732136428a2ac5d3fec2d2b49b10fff211de17dd8861f70ab5a18337f939711a7eb22ca0bf62323b5a75e65f220dcb3d2c0f9101ddc166ce3c8b4c2286bae32361348fca7670e67100f2e35a4874d89034c591773d7ea4747f1615f5fd92b0de5edd2b61831ff0690c8c38c37e0ef65358b57fb2f969a63c0fc32f486250514bd60f5aa2a3f6684c2289665f2c78b3ef11d1e6d27c6e235a6d57dbbc0a2112736b817296bc46f3ad8969c5a2e37f4ab0688b9d15d6d370345b9a8a2c306f82eaddeb1ca7a6bf4e0dfb6cf0f3863cfdd128d9cea5c6e5150aeb3cf0e8fd5d3ac85e8fa7fdc620542af45c3ccd372839dd45fcd0147a519c4c5051ff31c5279ed0178b752ab6bdda500cbf37bd1e323392fed0a54a6c7b5dd6fae1886acf5f39278c5de3cdc09bfba869efbecef452ffed619b752711722851ecd50d152ccf9351c21d27e174f8cf528b2f357c31342eaad903e2397756a4c24c8d84a2c1a1b071797f4199b8204aec89cd50403267c1817492ba2b23beb58a37407204b315c0099e8cf508e50810e4c97633eb67472fe6192082c66ba52a60feb36c95a89cac64f2d43612bacb4fed8817bdba62eb05139c8ca0b7524775e9d3896adc1c35181bd5271063464c3d96945c5d1865c0bd26f72d2d89e74d313210769a4bab577079ae30062261d9e808a0f6755797138de9cca4ebfb03a4852bd9e4bd12240eb4287fbb8ccc8f78322fdd4e4b9a5061097caaceabf291640641508a7b579fbf6bf7b464b858d251eac54317abea749c28a498b7a6fcbce0678921c9761800a7214dee8dd2cfe6c998dd5bf44fc2c6d6923905f3ccb4bbe06d45eb31f73aa294b5d0697b3c93236c6e96533c604129903e635dcf7455e30f013dbf45a5a6cd87700078d7b1c2a4fac085049a592e41e728aa2c8336bd4803118f4c0c0e206849470fbdeb9a2e140f5efee1067b2db35a2ba403df53ab59dd228cfd2e3931ef3572382fbe69347512be511f88b7d807da262a3df3cfc706f63e2eab6a70dba16a718ca5dc1dccf2393825152f95f1f3a847540085fe7b3a69175a9d137a07be9ffb5f9cb05bebac2656c0987765625b148ff690f30e2b706eb378793028a275794d34fc20b67dd1b290bbd72523588141f930194993c2f99023e7342fb0d3f098829667ab0</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - Killer Queen - 题解</title>
      <link href="/2021/08/21/LG-Killer-Queen-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/21/LG-Killer-Queen-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="c74177d141e6f637b8d32708d8d51fa937fe481fc83652bda69d3660dbed8033">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58ccaa6885f8ac6b9c2096f2c5720d5e186599d241d983a798af7d3a46530b6945401ba8d2cbc6ce6881b6a8b581bee33c7fe1802de903fc5d86f9d4e4a35f88211b01fd26f720d0cbcc8a3243e7b031a39bc0f1abdef9be2d15aba4f7afb7289370a4920ea6164516156ed2f0b7129c1ec1fdd90e9a06572948e2dfd6d232fa0ff4a5a2626b00cce020e8bd4dbe5bda9abfec54fb96caf7471a7804e15d9f5d9c9b84c519605514e5379c543027067d50dc864c60b1954783e96a7bf83c67c18f1fc09a8f67b1f63bf1e6e658ff2e2353776914ced0d93d5cba4afadb201e213f4f7481b13096a756bb40d4ac7c1f3d8f02ed2425fcd34b6415fd3363af24049f66f32710c7a52e5a1e9851462d981b1680e01aa2edaf9e73c5a4528926a9c07ba2a10ea1c5ce9145ccdcee1c3a11504f8ed939f72db23f1490660acd17de259b655e36a010e410288b6547238c55a7704ad93f4ff4e1ec8cc783b94e5892b1a95571e3fe12dc559b7b1af593bae7a4d8a62d46b89f1185af62503aac9f52e382786468b337052aa1f401734e893e23df952a08ca0dfaa90a714576e5b26425f9d6dc60a29fa3d0fe57e8b411113e25ad25ed2b0939e5a45981947a5c39c9c9bf59119b306974e71e399b1df7d8a0c201e4a009eceaf54572d54f50f64b5dc95646fea52be5ac5a8f92596f3c39ed940b23dbde1b6582da51c2f3ca7c02e194bde7374b816804bc333cdc7ad5ed8a9c29877bf1092f184a12608e1e58b85b67fb8784ce36f1f63e3300dbaf0440624ab296306e91ab300287093725feafb9a479b822ab2483c48a9c60cf7009173cbf6df47e4d76f15af7c137b8c58dcf96c015a38348f06ffdf93e944ce31ce5760840f072aa785ec411724c5f3488af1a49c21cb890dfe7585a6fb6387e27cbbd0d67d0b0f47e11c6d400c46d5f55b4a52a09affaff0ba9a7c5c5a045e0def49c865f9c285b9158140e34581bfbc410d215f23d7f5070d7947c65aa25a2b54106e9952bc70df06e66090a7e3819f48e68c627b7d70136c5abda291d9f5a0c60bd27fd6a216e2c3653a29ae56cc411aea0b07bd4a6059ddf1fe4e1e31d094d929277ac0b81c488c3fd26328f1ba9469047014fd2c515632fbbeb3a617fd2271b0f00ca6bd0816c664b30a0fab6bf7a1ebbacba693ac9da532ecc263658637b45e0bb0c8beccb3c79207d46066f9973a760a0e4708ae97b57957354bb1d597ca878f5297492e9e5619599f4b375f35245dd499d65f6e7b57fc8bbfbf9eb14f463eefdc9e88f9b912dabe66f88fda5b076ff88505e247d1fd49fe5c53d3a0f64b8b2f353042eb85b317456906d657917b05d3f23cd963ec786e8e738a2e267b5973977df3d61c517a6ec13e27736e3f0874c6cdf5604a4fdd1aa268c429794448d68ab1d9d14af38ebedcf62649e55a19b101a37878864f8810c6755762e6286e24cfa55e011fa78bf1fb2ddf0a0b0a68fc2104f582a1cf0053a6ef25df57c0c856f97bdd9e69faa42c92cfcb819f91daaeeeed41de9a07393d9d539c54c7614fecc1c63af58f2193ee5311969f9caec1650678d1fb400b9dc145fda86fdf8a478c43926995fe98a1cf715d6b97de0d45afe43f9a5ccde3528a4f31cf9730d62b2905e61d002f6fb0b13fb7931cf46d6f932a2c1dcebdf4ce540086a98cba39a4677f73f9b3222c14fd1ce02aba93bd96c0054ca272c595b4ffa547a90920ac169057e5418d0ab961a199bd8eda3bbf66ac26b7c394264db4efe04b2ef482f3727ab4efff662195c7e2ad6a81ca737deaaf6c4e6fac3dc3477ba2b461be37703b4bb590bd7f123e0e65f09ed82b973e0e41b1b9f15e2c3128ef2b1babfa1c7468b2c60b598a8b961a27303748144ae9e4d806c16accc8f8638b357db1a232e8784af40137f75930cf3868dbf3d4f9127c7d7ff02db61a249bbf7f776b206eb85bdceae0989d038f1dd1d1a40b12c2f65facd0d070a3ac851ef9b89a5c836d511acb9b1a1aa4927ef43f3eb32c38f2cf99e080bb359cab50110b211bf1cd6ab0bf10184e6cd393d1e2a7ba8ffe10a40780df38a4f6217ccd352106b6b63269835599d2886fdef278f5d5355527fd2f7d857ca4ba49e7c6ef702b909e14be5a6d7e6b409165050d9046bd522814cf92c869711a897e9c766c6e7cb6cee68d8053af24120f413288fcef385e8a8e62a1c86499ebded3601d4baf159ab2008ac09233b6ff7deb3d59cded6e324a385084f7f98e69bef659a8f741b857ab6257ddac9440b67134d5214253092aa6d805e5a77a4d911c1bc3df2b993e6c7d4324ebe587de5ce849225fe8673629235764ac3f7f681ef23597559c5b3c4da37c616654deffbb8d0cfc45f5544b3e188824697e22a1cb10b3fa8f86aab5bfaa929ff54009da5847de160a15624856d4f6de2366e9a951d5a7b4ea19c74fe3c75a6880e84cce103e909e458a2ff63409cfc8bf23822c1f7e970bbcaeb4a81319a7b89d5bf1d7248ce5a415f732009809b7fbafdf734ddd39ca49d6e4e2a3790b7f90b249ebd57751e026427d474ccc9f166a60e6a6eb5e51be205f4a17a04c4cfac72152b818669391f3456bfed5ac1377ec47bd1ca2fe74b1380bb1b084876f5c8ab03a89da8474089493dc517b44f64a3f352d570951a7ba6e07e9162d5152e5de5c2a20181f318174d7a3ab719725794c1b510565b1b183067ca448f0103a2ab7dc226c372e5d8e59e999eb3d86be7163453d5f4ebdbefc48408f3d7edb13da13530def4e19609d4e63ef04e4db144f23c7f7af24459b6ca10cd0fd0508e9136cdf268c7cbe7c09243c10c4ea0c9dcc22990c020af63c56de5ee2ee5bb248dc1377a04f659c6c7f8d531b5f1281f04df1a2ac317a8c2226f2782a05b6bd31c24c7e32090930eb1ff1be5dd172385a8c7711a44b5289a1828ebb25a750ac032dcfd84b4dbc0fe6d7f541d4e85eadaa2f06c87d3a0ae87d8dba7f422123c238e4c767bf8e18516fc36d0d300ba7bc784433c7bb359397768c32e449b0312e850f04fab340c913e14bdc784f0d22e535b74f24df0fd8f9ec0d10f2b140007bd3a0dd4f6691e3c5739f3cb67c4b4d9dba8f893f846b3ee25ea65da4e1a00a705ddcff72af767455bce5fa396962a96f712cdfa7973aebf0160f20646f894e8b7dd62f24320b4b63188bf44873ebe46f40724bb8cbf414c1d39eaab93e7b95b4af4a55a8afb4812cdd1bd167fe606590678ad21a75cd22491046ae5b9af4eb8d6b09a6285cf4cc7b14c668b0991f92658fa2dd6b52772287c527061db939e4933ca01541bdfb90f7f81b3c25c0b556f873903a97027a44d0ff6a2c7a9ce277a6120f89d501ad38e205fd5004d9ca764f3db2484a58ef6aa6a50bfd331b8004883423a12afa34a49cb5eacc5ee264861ecd30c8c9cef55d3aefa5abebccb20c01b4309e15c5fd4bdb623f21943bba8f12d614e86ce1eb3f753036872ed1c71a0644ece37ad6bcfdc2721d71afd88eaf3663a249caf67d192071b4f48e64636e354903a347c79df46d64ee4fd0b58d4b573cff9be0cbee79dc8c840</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 李白的酒 - 题解</title>
      <link href="/2021/08/14/LG-%E6%9D%8E%E7%99%BD%E7%9A%84%E9%85%92-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/14/LG-%E6%9D%8E%E7%99%BD%E7%9A%84%E9%85%92-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="1732d01fba6bb970cc72da49331a7093dfb46c6184aa790b36230336ef31eb7d">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58ccaa6885f8ac6b9c2096f2c5720d5e1865029b59918e662b9c9e69486b6a57a36beb17c3547dca7b8249f343835aad2a0ecbb5f0dcde69fa04353f23ade5e013efdd8d3526ff60268dc4e2fdbc0607f59521d76f4d057c1ea7d5028393c81ec4288f8728ac16b5ecd974c02afde78d9aab6eafbab735f3b91b735ece1e0766fb4d2c87f56ea35898d1a7ff3d140cce75ca1347039a32b1b1e95e8867d09cd250353afc4a2ce9a9799acae1a359c614a539047d7d0e7e5ca7008ad6d7f3c83fc4d373c224a42c109f9d1e1f00b4d74bd6f91674738215b0adc138f6fda6c86e4eac9296d049b06b238990701721f22b2cc1d5c8e0cb8e4ac07bfd4f4f3e4dac577ed52671e9047bfd6e7c2b6a36f5a3c23be096db18459b9a759c69f135e68c51ebad025d42958d24b38b8707f6c8e125faf0277038ff58458e39edc1707248dfabe3984ecd821f430a629fdf2d4cb006425fcabf1999f322e757edbcb023b291632bc0d9400e218aee4b7700b1d3f4db92dcf4b6f53a61f4ab6e0213b0aae3266a0e2a0eecb40cb07aee2d8769f4eb29573d0bbaf7c6d97db61d5aea9a49b8c0135e9e1c9ee0843f9c3402c8d6690a7aa6e90d1673acf6f37f935455a57547f86c072b8efff5d8b805369ffacd8fb906b3a10a068f4c3f46dc80ef89cc9f08282df0782da5a0e4ffae29208e4b0374aca7167869516da14e8f33d038189401fa06bf19a4b53efa76746ba8fd83b1110408f5b406ce94f6fde8d65d4a1dcd9bccb98e4a95f08d4b24d2aab70ceefdaee2cae36dcbeb30ce73998225c067b9b354ee1b864c83c3bb5476223e5950b059db57cd5b6ffefa833598175a41370ae73b7e7120f80fd02fb50ca54b9f0eab0c8bc821b7a89c594124d769966c459ee5ac62e10794cc2d88c4254a9635f223b76fbf4850733f6e015dc39f39849a1910d65ca7833110bac363859e29817ddc54407e3472a946f719ec19e93153c9d31df2d0109d5bc7686788903f61b69124028d8aac206249a8ffde56a34d412841915e2bd799afefabfd434a949ca5d111f993a6020e20ee7aa6e11355efde68ccfb2e55d125c7bee8e2388ec67366a708b2f066d3053ba72215f9a49c153e2c16e0331100d7a1fb90d51807ca81bb29e8ca1564bd1089ce5dc5e237a66a324662a521146ba22b6b93e7ad3bfc114c952be23f72d9c618e8de5886766c2884174d51e388571579e96f98582fe9fd6bda19192bf59d6dd3ea2ffad2eac1e23fa080de53d5b2b484e6dfdd05d36836d57266a47770d32e9e9f4f259516255e8daacda45171b1066da1e0d4563cbe8d7fd16a542c0b38766db7c4eaa4512fc4b9620a7b04a705e053037010ce8f6699953b9dcb446f1d5eb7ee9c392fb5615d6852cafd7c8af4a473a3f8e7abd2cadffdd51863b64f05cc949c53da5b81390f51ca42b801dd2861b90e203916e03f0116be58aff9d81054d990a668d156577b9efbed93d4857a8c5ddd60da3c30f8bf651b5b69e2051d10bcbc70a194b758a68d0a67d5e70a434aef991b93d57a775b537f0bd9b342a674fab4ad074263c8bbd9f87011c422896eb29b481c1f858a6d94c214f0286826645ab273bac9095d51da156a540ed038cba07b2988534cb25601775d138c79c9f60df5f998b3091ab70a83d8b2baa61af00aae09870d9c82eaad9e861339ae61d9a497183fcc1e4f769fd955102f7372cbb668549fd65f1d13494b1bcecb28</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 满二叉树 - 题解</title>
      <link href="/2021/08/14/LG-%E6%BB%A1%E4%BA%8C%E5%8F%89%E6%A0%91-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/14/LG-%E6%BB%A1%E4%BA%8C%E5%8F%89%E6%A0%91-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>满二叉树板子题。</p><h3 id="代码分析">代码分析</h3><p>三个 <code>for</code> 循环，</p><p>第一个用于计算节点的数量，</p><p>第二个用于初始化树数组，</p><p>第三个用于模拟。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int k, q, a[10001] = &#123;0&#125;, p = 1;char s[101];cin &gt;&gt; k &gt;&gt; q;for (int i = 1; i &lt;= k; i++) &#123;p *= 2;&#125;for (int i = 1; i &lt;= p - 1; i++) &#123;a[i] = i;&#125;for (int i = 1; i &lt;= q; i++) &#123;cin &gt;&gt; s;int o = 1;for (int j = 0; s[j] != '\0'; j++) &#123;if (s[j] == 'L') &#123;o *= 2;&#125; else &#123;o *= 2;o++;&#125;&#125;cout &lt;&lt; o &lt;&lt; endl;&#125;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/14/LG-%E6%BB%A1%E4%BA%8C%E5%8F%89%E6%A0%91-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/08/14/LG-满二叉树-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TLS - 如何使用 IDM</title>
      <link href="/2021/08/12/TLS-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-IDM/"/>
      <url>/2021/08/12/TLS-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-IDM/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>本文章所使用的方法保证在 IDM 6.xx 版本有效</strong></p><h3 id="前言">前言</h3><p><s>众所周知</s>，IDM 是一个很好的<strong>多线程</strong>下载工具，还支持网站爬取音视频。</p><p>IDM 能够在使用浏览器下载文件时自动捕获下载链接并添加下载任务，目前，IDM 的自动捕获功能支持以下常见的主流浏览器：</p><p>Safari</p><p>Chrome</p><p>Firefox</p><p>Opera</p><p>Microsoft Edge</p><p>Internet Explorer</p><p><s><em>我很严肃</em>：</s></p><p><s><em>IDM 破解是怎么回事呢？IDM 相信大家都很熟悉，但是 IDM 破解是怎么回事呢，下面就让小编带大家一起了解吧。IDM 破解，其实就是破解，大家可能会很惊讶 IDM 怎么破解呢？但事实就是这样，小编也感到非常惊讶。这就是关于 IDM 破解的事情了，大家有什么想法呢，欢迎在评论区告诉小编一起讨论哦！</em></s></p><h3 id="下载">下载</h3><p>先安装正版 IDM，再使用破解工具破解。</p><p><a href="http://www.internetdownloadmanager.com/download.html">IDM 官网下载</a></p><p><a href="https://ren-yc.github.io/assets/IDM/IDMInstall.zip">本站安装程序压缩包下载</a></p><p><a href="https://ren-yc.github.io/assets/IDM/IDMPatch.zip">本站破解工具压缩包下载</a></p><h3 id="安装">安装</h3><p>运行下载的 <code>exe</code> 文件，</p><p>安装时一直按 Enter 就行，</p><p>若安装程序提示重启，</p><p><strong>请点击 “取消”</strong>。</p><h3 id="破解">破解</h3><p>把下载的 <code>IDMPatch.zip</code> 中的 <code>Crack.exe</code> 复制到 IDM 主目录如 <code>C:\Program Files (x86)\Internet Download Manager</code>，</p><p>右键该文件，</p><p>选择 “<strong>以管理员模式运行</strong>”。</p><p>执行完毕后运行 <code>REG.exe</code>，</p><p>方法同上。</p><p>然后启动 IDM，</p><p>点击菜单栏中的 “帮助” – “关于 IDM”，</p><p>可以看到 IDM 被成功的激活了<img src="https://xn--9zr.tk/gx" alt=""></p><h6 id="若破解失败，记得在评论区留言告诉我小编哦">若破解失败，记得在评论区留言告诉我<s>小编</s>哦</h6><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/12/TLS-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-IDM/">https://ren-yc.github.io/2021/08/12/TLS-如何使用-IDM/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APPs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四篇关于 chen_zhe 的美文</title>
      <link href="/2021/08/09/%E5%9B%9B%E7%AF%87%E5%85%B3%E4%BA%8E-chen-zhe-%E7%9A%84%E7%BE%8E%E6%96%87/"/>
      <url>/2021/08/09/%E5%9B%9B%E7%AF%87%E5%85%B3%E4%BA%8E-chen-zhe-%E7%9A%84%E7%BE%8E%E6%96%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="壹-chen-zhe人">壹 chen_zhe人</h2><p>那是谁 是谁 是谁</p><p>那就是 chen_zhe</p><p>chen_zhe 人 chen_zhe 人</p><p>背负着暴政之名</p><p>抛弃了一切（指民心）而战斗（指禁言）的男人</p><p>chen_zhe 代码是超音波（形容很会卡常）</p><p>chen_zhe 之眼（指管控 OIer）在洛谷飞翔</p><p>手里掌握着 恶魔之力</p><p>正义的英雄（</p><p>chen_zhe 人 chen_zhe 人</p><p>开始知道暴政的男人</p><p>因那紫名而觉醒的男人</p><p>chen_zhe 禁言是迫害之力</p><p>chen_zhe 之眼透视一切</p><p>chen_zhe 劈砍肋骨可断</p><p>手里掌握着 管理之力</p><p>正义的英雄</p><p>chen_zhe 人 chen_zhe 人</p><h2 id="贰-少年-chen-zhe">贰 少年 chen_zhe</h2><p>明亮的机房中开着一台神秘的电脑，旁边是一个题库，都存着一望无际的 chen_zhe 做的神仙毒瘤题，其间有一个十二三岁的少年，血管里流着网络流，靠着一棵平衡树，向蒟蒻的 lhy930 尽力地踩去，lhy930 被爆踩了好久后却将身一扭，反从他的胯下跳进他家的内存池了。</p><p>这少年便是 chen_zhe。我被他爆踩时，也不过十多岁，离现在将有几年了；那时我还没开始学 OI，也很 LJ，我正是一个蒟蒻。那一年，我家是一件大比赛的值年。这比赛，说是三十多年才能轮到一回，所以很毒瘤；正月里做神仙毒瘤题，题目很多，数据很讲究，做的人也很多，数据也很要防偷去。我家只有一个忙月，忙不过来，他便对父亲说，可以叫他的儿子 chen_zhe 来出题配数据的。</p><p>我的父亲允许了；我也很高兴，因为我早听到 chen_zhe 这名字，而且知道他和我仿佛年纪，是个神犇巨佬，会做和出神仙毒瘤题，所以我们叫他巨佬。他是能 AK 所有比赛的。</p><p>我于是日日盼望新年，新年到，chen_zhe 也就到了。好容易到了年末，有一日，母亲告诉我，chen_zhe 来了，我便飞跑的去看。他正在机房里，红色的圆脸，头戴一顶小绿帽，看上去明显就是一个光头。他见人很喜欢嘲讽，唯独嘲讽我嘲讽得最过分，没有旁人的时候，来嘲讽我，于是不到半日，我便被爆踩了。</p><p>我们那时候不知道谈些什么，只记得 chen_zhe 很高兴，说是上洛谷之后，做了没有其他人会做的毒瘤题。</p><p>第二日，我便要他做题。他说：“这不能。须有神仙毒瘤题了才好。我们电脑上，有了题，我开出一块内存池来，用预处理所有的几亿个数据，打好表，看输入来了时，我立刻地将我预处理好的答案，只一输出，那正确答案 $0$ $ms$ 就输出来了。数据结构、字符串、图论、DP 什么的都是 LJ 玩意儿……”</p><p>我于是又很盼望有题。</p><p>chen_zhe 又对我说：“现在这些题太水了，你夏天到我们这里来。我们日里去网上虐人，lhy930 也有，kkk 也有，tourist 也有。晚上我和爹虐全场去，你也去。”</p><p>“要加文件输入输出吗？”</p><p>“不用。我的程序可是非常大佬的，可以自动判断要不要文件输入输出。要管的是卡时间、卡空间、卡算法。洛谷上面，你看，月赛开始了，我要 AK 了。你便写好膜拜之语，在犇犇里发出去……”</p><p>我那时并不知道这所谓月赛的是怎么一件东西——便是现在也没有知道——只是无端的觉得这肯定是神犇巨佬才能参加的比赛。</p><p>“比赛很水么？”</p><p>“有我呢。开始了，看见题了，我便 AK 了。这些题目很毒瘤，要用主席树，还要用模拟退火。但是对我来说都是不是一点的水……”</p><p>我素不知道天下有这许多新鲜事：竟然有比 A+B Problem 毒瘤的题目，而且竟然有人能够 <code>AC</code>，我先前单知道我连 A+B Problem 都过不了罢了。</p><p>“我们 CF 上，题目要来的时候，就有许多人喊着要 AK，但最后都被我给 Hack 掉了……”</p><p>阿！chen_zhe 的心里有无穷无尽的稀奇的算法，都是我往常的朋友所不知道的。他们不知道一些事，chen_zhe 在 AK 虐场时，他们都和我一样还在颓 A+B Problem。</p><p>可惜正月过去了，chen_zhe 须回家里去，我急得大哭，他也躲到厨房里，哭着不肯出门，但终于被他父亲带走了。他后来还托他的父亲带给我一堆神仙毒瘤题和它们的 <code>AC</code> 代码，我也曾送他一两道红题，但从此没有再见面。</p><h2 id="叁-chen-乙己">叁 chen 乙己</h2><p>chen_zhe 一上洛谷，所有做题的人便都看着他笑，有的叫道，“chen_zhe，你门前又长出主席树了！”他不回答，对老师说，“开两台电脑，要一堆毒瘤题。”便排出一堆 <code>AC</code> 代码。他们又故意的高声嚷道，“你一定又 AK 了人家的比赛了！”chen_zhe 睁大眼睛说，“你怎么这样凭空污人蒟蒻……”“蒟蒻？什么蒟蒻？我前天亲眼见你虐了 lhy930，吊着打。”chen_zhe 便涨红了脸，额上的青筋条条绽出，争辩道，“AK 不能算 AK……AK！……巨佬的事，能算 AK 么？”接连便是难懂的话，什么“我是神犇”，什么“lhy930 是蒟蒻”之类，引得众人都哄笑起来：机房内外充满了快活的空气。</p><p>听人家背地里谈论，chen_zhe 原来也做 IOI 的题，但终于不屑于再做，又不会出这种对他来说特别水的题目；于是做的题愈做愈难，难到我一看就吓晕了。幸而做得所有题目，便替人家做水题，换一道神仙毒瘤题做。可惜他又有一样坏脾气，便是不屑于做。做不到几天，便连人和电脑程序代码，一齐失踪。如是几次，叫他做水题的人也没有了。chen_zhe 没有法，便免不了偶然做些 AK 神仙毒瘤比赛的事。但他在洛谷里，品行却比别人都好，就是从不拖欠；虽然间或不屑于做洛谷的题，暂时记在任务计划上，但不出一小时，定然全 A，从任务计划上拭去了这些题目的名字。</p><p>chen_zhe 做过几道神仙毒瘤题，涨红的脸色渐渐复了原，旁人便又问道，“chen_zhe，你当真能 AK IOI 么？”chen_zhe 看着问他的人，显出不屑、鄙视的神气。他们便接着说道，“你怎的连洛谷的题目也不刷光呢？”chen_zhe 立刻显出藐视嘲讽模样，脸上笼上了一层红色，嘴里说些话；这回可是全是“全是水题”之类，一些不懂了。在这时候，众人也都哄笑起来：机房内外充满了快活的空气。</p><p>在这些时候，我可以附和着笑，老师是决不责备的。而且老师见了 chen_zhe，也每每这样问他，引人发笑。chen_zhe 自己知道不能和他们谈天，便只好向蒟蒻说话。有一回对我说道，“你会做 A+B Problem 么？”我略略摇一摇头。他说，“不会做，……我便考你一考。洛谷的深蓝题，怎样做的？”我想，这么大佬的人，也能考我么？便回过脸去，不再理会。chen_zhe 等了许久，很恳切的说道，“不会做罢？……我教给你，记着！这些题应该记着。将来打我出的比赛的时候，做题要用。”我暗想我和他的等级还很远呢，而且我也从不敢打他出的神仙毒瘤比赛；又好笑，又不耐烦，懒懒的答他道，“谁要你教，不是只有你才会做的题目么？”chen_zhe 显出极不高兴的样子，将两个指头的长指甲敲着键盘，点头说，“错啦错啦！……这些题目都是超级水的红题，你知道么？”我愈不耐烦了，努着嘴走远。chen_zhe 刚打了一堆毒瘤算法以及宏函数，想在 IOI 官网上 AK，见我毫不热心，便又叹一口气，显出极惋惜的样子。</p><p>有几回，邻居 main 包和 ltt 听得笑声，也赶热闹，拦住了 chen_zhe。他便给他们神仙毒瘤题，一人几十道。他们做完题，仍然不散，眼睛都望着他的个人题库。chen_zhe 着了慌，退出题目将屏幕锁住，弯腰下去说道，“太简单了了，这都太简单了。”直起身又看一看题目，自己摇头说，“简单简单！难乎哉？不难也。”于是这一群神犇巨佬都在笑声里走散了。</p><p>chen_zhe 是这样的使人快活，可是没有他，别人也便这么过。</p><p>有一天，大约是 ACM World Final 后的两三天，正在慢慢的算 <code>AC</code> 题目，取下粉板，忽然说，“chen_zhe 长久没有打洛谷的题了。任务计划里还有十九道题呢！”我才也觉得他的确长久没有打我们的题了。一个蒟蒻的 lhy930 说道，“他怎么会打我们这些水题？……他打神仙毒瘤题去了。”老师说，“哦！”“他总仍旧是 AK。这一回，是自己太强，竟 AK 到 IOI 里去了。IOI 的神仙毒瘤题，AK 得的么？”“后来怎么样？”“怎么样？先拉他去了 ACM World Final 比赛现场，后来是做题，做了几分钟，就直接 AK 了。”“后来呢？”“后来他 <code>AC</code> 完所有的神仙毒瘤题了。”“刷完了怎样呢？”“怎样？……谁晓得？许是去出神仙毒瘤题然后自己 <code>AC</code> 了。”老师也不再问，仍然不住地感叹 chen_zhe 是历史上最强的神犇大佬。</p><h2 id="肆-chen-zhe-先生">肆 chen_zhe 先生</h2><p>浙江也无非是这样。NOIP 爆 $0$ 的时节，望去确也象绯红的轻云，但 <code>WA</code> 下也缺不了成群结队的 “天朝 OIer” 的速成班，头顶上盘着大辫子，顶得绿帽的顶上高高耸起，形成一棵主席树。也有解散辫子，盘得平的，除下帽来，油光可鉴，宛如小蒟蒻的算法一般，还要将脖子扭几扭。实在标致极了。</p><p>天朝 OIer 会馆的门房里有几本《算法导论》买，有时还值得去一转；倘在上午，里面的几间洋房里倒也还可以坐坐的。但到傍晚，有一间的地板便常不免要咚咚咚地响得震天，兼以满房烟尘斗乱；问问精通时事的人，答道，“那是在学 DP。”</p><p>到别的地方去看看，如何呢？</p><p>我就往上海的 OI 专门机房去。从长沙出发，不久便到一处驿站，写道：新♂日♂暮♂里。不知怎地，我到现在还记得这名目。其次却只记得温州了，这是江南皮革厂的老板黄鹤王八蛋欠钱的地方。上海是一个强市，并不大；夏天热得利害；还没有浙江的 OIer。</p><p>大概是物以希为贵罢。北京的白菜运往浙江，便用红头绳系住菜根，倒挂在水果店头，尊为“胶菜”；福建野生着的芦荟，一到北京就请进温室，且美其名曰“龙舌兰”。我到上海也颇受了这样的优待，不但机房不收学费，几个教练还为我的食宿操心。我先是住在小黑屋旁边一个客店里的，初夏已经颇热，蚊子还多，后来用被盖了全身，用衣服包了头脸，只留两个鼻孔出气。在这呼吸不息的地方，蚊子竟无从插嘴，居然睡安稳了。饭食也不坏。但一位教练却以为这客店也包办棕名的饭食，我住在那里不相宜，几次三番，几次三番地说。我虽然觉得客店兼办棕名的饭食和我不相干，然而好意难却，也只得别寻相宜的住处了。于是搬到别一家，离小黑屋也很远，可惜每天总要喝难以下咽的蒟蒻汤。</p><p>从此就看见许多陌生的 dalao，听到许多新鲜的算法。数据结构是两个 dalao 分任的。最初是二叉树。其时进来的是一个白胖的 dalao，大饼脸，戴着眼镜，挟着一迭大大小小的书。一将书放在讲台上，便用了缓慢而很能嘲讽的声调，向学生介绍自己道：——</p><p>“我就是叫作 chen_zhe 的……。”</p><p>后面有几个人笑起来了。他接着便讲述 OI 在上海发达的历史，那些大大小小的书，便是从最初到现今关于这一门学问的著作。起初有几本是线装的；还有翻刻中国译本的，他们的翻译和研究新的医学，并不比浙江早。</p><p>那坐在后面发笑的是上次 % 你赛爆 $0$ 的留级学生，在机房已经一年，掌故颇为熟悉的了。他们便给新生讲演每个 dalao 的历史。这 chen_zhe dalao，据说是太强了，竟能 AK IOI、吊打集训队；他做的题，都是神仙毒瘤题，有一回参加 IOI，致使出题者的疑心他走后门，硬是叫他爆了 $0$。</p><p>他们的话大概是真的，我就亲见他有一次 AK IOI。</p><p>过了一星期，大约是星期六，他使助手来叫我了。到得机房，见他坐在树状数组和许多单独的线段树中间，——他其时正在研究着线段树，后来有一篇论文在本校的杂志上发表出来。</p><p>“我的代码，你能抄下来么？”他问。</p><p>“可以抄一点。”</p><p>“拿来我看！”</p><p>我交出所抄的代码去，他收下了，第二三天便还我，并且说，此后每一星期要送给他看一回。我拿下来打开看时，很吃了一惊，同时也感到一种不安和感激。原来我的代码已经从头到末，都在注释栏添改过了，不但增加了许多脱漏的地方，连语句的错误，也都一一订正。这样一直继续到教完了他所担任的功课：二叉树、线段树、主席树。</p><p>可惜我那时太不用功，有时也很任性。还记得有一回 chen_zhe dalao 将我叫到他的机房里去，翻出我那代码上的一条语句来，是递归的定义，指着，向我嘲讽的说道：——</p><p>“你看，你将这条语句移了一点位置了。——自然，这样一移，的确比较的快速些，然而代码不是竞速，题意是那么样的，我们没法改换它。现在我给你改好了，以后你要全照着PPT上那样的写。”</p><p>但是我还不服气，口头答应着，心里却想道：——</p><p>“代码还是我写的不错；至于实在的题意，我心里自然记得的。”</p><p>学年试验完毕之后，我便到 slay 颓了一夏天，秋初再回机房，成绩早已发表了，同学一百余人之中，我在中间，不过是没有爆 $0$。这回 chen_zhe dalao 所担任的功课，是 OI 实习和莫队。</p><p>OI 实习了大概一星期，他又叫我去了，很高兴地，仍用了极能嘲讽的声调对我说道：——</p><p>“我因为听说浙江 OIer 是很敬重 main 包的，所以很担心，怕你不肯次 main 包。现在总算放心了，没有这回事。”</p><p>但他也偶有使我很为难的时候。他听说蒟蒻是很菜的，但不知道详细，所以要问我怎么菜，菜到怎样的程度，还叹息道，“总要看一看才知道。究竟是怎么一回事呢？”</p><p>有一天，本级的学生会淦事到我寓里来了，要借我的代码看。我检出来交给他们，却只翻检了一通，并没有带走。但他们一走，洛谷就收到一封很长的私信，拆开看时，第一句是：——</p><p>“警告：刷屏者禁言”</p><p>这是《算法导论》上的句子罢，但经 kkksc03 新近引用过的。其时正值犇犇战争，k 老先生便写了一封给 chen_zhe 联盟和反 chen_zhe 大队的团队主的私信，开首便是这一句。文文新闻上很斥责他的不逊，爱咕青年也愤然，然而暗地里却早受了他的影响了。其次的话，大略是说上年 % 你赛的题目，是 chen_zhe dalao 代码上做了注释，我预先知道的，所以能有这样的成绩。末尾是匿名。</p><p>我这才回忆到前几天的一件事。因为要开同级会，淦事便在黑板上写广告，末一句是“请全数到会勿漏为要”，而且在“漏”字旁边加了一个圈。我当时虽然觉到圈得可笑，但是毫不介意，这回才悟出那字也在讥刺我了，犹言我得了教练漏泄出来的题目。</p><p>我便将这事告知了 chen_zhe dalao；有几个和我熟识的蒟蒻也很不平，一同去诘责淦事托辞检查的无礼，并且要求他们将检查的结果，发表出来。终于这流言消灭了，淦事却又竭力运动，要收回那一封匿名信去。结末是我便将这 kkksc03 式的信退还了他们。</p><p>浙江是弱省，所以浙江 OIer 当然是蒟蒻，分数在 $9$ 分以上，便不是自己的能力了：也无怪他们疑惑。但我接着便有参观封禁浙江 OIer 的命运了。第二年添教高级算法，算法的代码是全用电影来显示的，一段落已完而还没有到下课的时候，便影几片时事的片子，自然都是 chen_zhe 联盟战胜反 chen_zhe 大队的情形。但偏有浙江 OIer 夹在里边：在犇犇里刷屏，被管理员发现，要封禁了，围着看的也是一群浙江 OIer；在讲堂里的还有一个我。</p><p>“Hello World！”他们都拍掌欢呼起来。</p><p>这种欢呼，是每看一片都有的，但在我，这一声却特别听得刺耳。此后回到浙江来，我看见那些闲看禁言 OIer 的人们，他们也何尝不酒醉似的喝彩，——妈耶，无法可想！但在那时那地，我的意见却变化了。</p><p>到第二学年的终结，我便去寻 chen_zhe dalao，告诉他我将不学 OI，并且离开这上海。他的脸色仿佛有些悲哀，似乎想说话，但竟没有说。</p><p>“我想去学游戏设计，dalao 教给我的 C++，也还有用的。”其实我并没有决意要学游戏设计，因为看得他有些凄然，便说了一个慰安他的谎话。</p><p>“为竞赛而教的 C++ 之类，怕于游戏设计也没有什么大帮助。”他叹息说。</p><p>将走的前几天，他叫我到他家里去，交给我一道神仙毒瘤题的 <code>AC</code> 代码，后面写着两个字道：“爆踩”，还说希望将红题也送他。但我这时适值没有红题了；他便叮嘱我将来出了发给他，并且时时私信告诉他此后的状况。</p><p>我离开上海之后，就多年没有写过代码，又因为状况也无聊，说起来无非使他失望，便连信也怕敢写了。经过的年月一多，话更无从说起，所以虽然有时想写信，却又难以下笔，这样的一直到现在，竟没有寄过一封信和一张照片。从他那一面看起来，是一去之后，杳无消息了。</p><p>但不知怎地，我总还时时记起他，在我所认为我 % 的 dalao 的之中，他是最强，最骚的一个。有时我常常想：他的对于我的热心的爆踩，不倦的嘲讽，小而言之，是为浙江，就是希望浙江有新的 OI；大而言之，是为学术，就是希望新的 OI 传到浙江去。他的性格，在我的眼里和心里是伟大的，虽然他的姓名并不为许多人（除 OIer）所知道。</p><p>他所注释的代码，我曾经剪成三个 Word 文档，收藏着的，将作为永久的纪念。不幸 $9$ 年前迁居的时候，中途毁坏了一台笔记本，失去半个 F 盘的数据，恰巧这代码也遗失在内了。责成修电脑的去修复，寂无回信。只有他的神仙毒瘤题的 <code>AC</code> 代码至今还挂在我电脑的桌面上，C++ 旁边。每当夜间疲倦，正想偷懒时，仰面在灯光中瞥见他白胖的面貌，似乎正要说出嘲讽蒟蒻的话来，便使我忽又良心发现，而且增加勇气了，于是喝上一口冰阔落，再继续写些为“dalao”之流所深恶痛疾的文字。</p><p>***文章转自luogu</p><p>此文章转载于 <a href="https://www.cnblogs.com/Attention/p/9781101.html">https://www.cnblogs.com/Attention/p/9781101.html</a></p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/09/%E5%9B%9B%E7%AF%87%E5%85%B3%E4%BA%8E-chen-zhe-%E7%9A%84%E7%BE%8E%E6%96%87/">https://ren-yc.github.io/2021/08/09/四篇关于-chen-zhe-的美文/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 光头强砍树 - 题解</title>
      <link href="/2021/08/08/LG-%E5%85%89%E5%A4%B4%E5%BC%BA%E7%A0%8D%E6%A0%91-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/08/LG-%E5%85%89%E5%A4%B4%E5%BC%BA%E7%A0%8D%E6%A0%91-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>很淼，读入后循环判断输出就行了。</p><h3 id="代码分析">代码分析</h3><p>时间复杂度 $O(n)$</p><p>空间复杂度 $O(n)$</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int n, k, a[101] = &#123;0&#125;;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; a[i];&#125;cin &gt;&gt; k;for (int i = 0; i &lt; n; i++) &#123;if (a[i] != k) cout &lt;&lt; a[i] &lt;&lt; &quot; &quot;;&#125;cout &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/08/LG-%E5%85%89%E5%A4%B4%E5%BC%BA%E7%A0%8D%E6%A0%91-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/08/08/LG-光头强砍树-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 不存在的 1 + 1 = 1 - 题解</title>
      <link href="/2021/08/08/LG-%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84-1-1-1-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/08/LG-%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84-1-1-1-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="c25995f06632be837ef49c1cbbdc04a81701dd1f9a85eac141608e6744d6e582">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58cc3bd371f049ef504a3c48130505d3f6926bf609c21a06465e0775dea1ab7832d460b099b43628fad2298ee201e59e37320ed2abfa3ed2b2f8b9e7fec135eda9f875c9a1ddd1cf028828123f9765768b027e07a07df2e77134396b442ccfb2dd32fa2062cc4cbc49c6f856870baff1547a23efd0e357d94a55b396d556ec5b389dbe14d9bad113c55ed08eef01dbaa648f277e1e8da4d96cdd51272182bd2463049a2e3de16b51425ead31735983a76d2a0776d0c6531333a5168cf9fdecc43be0de85fab9f4690e5d66acbbf18815ff7077ca5a88f5a073a9b41fb2bc48963b8917f8a54966f26a9b2b46bea1fd169334aedf1bd59529e9263943f28b5a4294a3238ffcdd91190dcccbdf775ca529843fc4dfd198d2ff16e197166dd1557b96aa429abed2b819963b5949afa8c100236931e2fb37fbd240cd1c41e11d0d584c4b54a9bffe5f0e767300c5b35522e651e04de0e514edd1a374a7577f10c4e6b02c4c6739d392f9fd1cd1cd51749bd77f686c1a0c0bbc6576029a61f314f0952ba7cee2f5ee3162ac1642379e7c2fc65ea7cb0e8ec01ce32c9639e12b5dbc1ff464ba5ceffdfa7368a214b7fa2dafeefb50c9848acb7eceaf4142327573c2228b879077c1bc1c2a58fb2ccb0b963784ff821e6e262335a9e21ccae192ac499f5b0e3f5b9800cd143f74be6a1529504b89f4edd604cea82446f8e19cd3490f308026372faeaecfed93ecbbcd69789bd9bdea66944b58533d16aea8fa5c02efe746c7e4e0ec646be2ba5cb858231e3873c30cd226d7d6572a61821090e2ae70819aca91e50c1248a818cc61f20410b133d48adf23f50b5bc76cd9c5d3ddacec75e61a91e19ba9266de678808569385c36244c1c5ee0fac1ab3bec4ae77fff848f5f00ac7efce3aac81e6a3ae5f7220e13ef5cbdc1c291af2abd602d581e36734d2f525e5497e6c3c8f6b9e81af37d458efe6d5689415ad0615aaf30e7b6af662d40d90b5b2653ca2d671e41314e39733b4ad92968bdfea137d80ebe8060740c27ff7fcc8407a88d901270f64576cc70e64acde0bbf6a1ec7afa317c81e3b918972b7cb84b1f1aa2208dd5b1ee8e3ffe0328c260c2049e37a62ce56efff56891c10cd1610e449aa709bf9c70a74ef9112b0ca7feeb2a866ba7ef7cd96a47454264ca976d01d5a816507d0f574f2018e27e7574ea587d446a436bc686da12a454a170385efbf7f39461ff02cd97eba69ccbd7d6f848c5413bb39dece301ff2995d2a21521c12bbb8907989cd09aa792a2371039a72de7fb0a15915a264840d053a275e27bb714b56e62be0db6d1aa0e51824d71aa9aca830ceeaab202c2731d735b5815964fbe27e484aea6cc80f8a0b4c1aa9d557e96bb3d48eb477866bb4a24e5e66d55ed64314c5371ee24174062457815dc9ca03963bc81169bc2d852d89a1075ca6ff3aa14050fb924e1bacae37f5a6fe1a87ea015d07f48189439462e753a12c4d7ac747a995badf5f672509ea4daed58404fcf4aa64da8fcb9916ccb80902479ff4e7a782406063d673205ab59ef03a609338caa7c79960c365cb5d7215adb959d1a275d7b776e78c05c96ba9c261d87374a727f687c16b307a70a7d5b5e8187225db20d4ecda0d9786ee924e42681518846533a64ac5d7140397643d89e0e3043e98dce240934aba9643abdb1149eef5403b188d84251612d5c861ec4be881ffe327033efc716043ac80561154a34cbb1250df719dd99093db35a94a5ae8ca759e03c5d59c6ea43709d349910f99fa2e405d449349f9cf6e2aab331a75fb92726d3d8940f9799a5c78200a707b6b0ddeb79d010c7f51050ec7d9a3370479a326a9796f3c15f642eef4c4fcb0de6715e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 木棍 - 题解</title>
      <link href="/2021/08/07/LG-%E6%9C%A8%E6%A3%8D-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/07/LG-%E6%9C%A8%E6%A3%8D-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>题目说</p><blockquote><p>Bob 想知道至少他需要去掉多少根。</p></blockquote><p>所以我们可以利用 “三角形两边之和大于第三边” 的性质来做。</p><h3 id="代码分析">代码分析</h3><p>不解释。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;long long n, tmp, a = 1, b = 2;cin &gt;&gt; n;if (n &lt; 3) &#123;cout &lt;&lt; 0 &lt;&lt; endl;return 0;&#125;for (int i = 2; a + b &lt;= n; i++) &#123;long long c = a + b;a = b;b = c;tmp = i;&#125;cout &lt;&lt; n - tmp - 1 &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/07/LG-%E6%9C%A8%E6%A3%8D-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/08/07/LG-木棍-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 苹果树 - 题解</title>
      <link href="/2021/08/07/LG-%E8%8B%B9%E6%9E%9C%E6%A0%91-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/07/LG-%E8%8B%B9%E6%9E%9C%E6%A0%91-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>典型的 $Fibonacci$ 数列题，题目居然写出来了…</p><h3 id="代码分析">代码分析</h3><p>板子题。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int n, i = 0, a, b = 1, s = 2;cin &gt;&gt; n;if (n &gt;= 2) &#123;n -= 2;i += 2;&#125; else &#123;cout &lt;&lt; 1 &lt;&lt; endl;return 0;&#125;while (n &gt; 0) &#123;n -= s;i % 2 == 0 ? a = s : b = s;s = a + b;i++;&#125;cout &lt;&lt; i &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/07/LG-%E8%8B%B9%E6%9E%9C%E6%A0%91-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/08/07/LG-苹果树-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 万恶的试卷 - 题解</title>
      <link href="/2021/08/07/LG-%E4%B8%87%E6%81%B6%E7%9A%84%E8%AF%95%E5%8D%B7-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/07/LG-%E4%B8%87%E6%81%B6%E7%9A%84%E8%AF%95%E5%8D%B7-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>既然题目说了 $a_i$ 可能很大，就是高精度了，<s>但我懒得写高精</s>，得用个不同的排序方法。</p><h3 id="代码分析">代码分析</h3><p>这题难就难在两个输出循环怎么搞，为了避免溢出，要先输出一半再输出一半。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;string a[1001];bool cmp(string a, string b) &#123;if (a.size() == b.size()) return a &gt; b;return a.size() &gt; b.size();&#125;int main() &#123;long long n;cin &gt;&gt; n;for (int i = 1; i &lt;= n; i++) &#123;cin &gt;&gt; a[i];&#125;sort(a + 1, a + n + 1, cmp);for (int i = 1; i &lt;= n; i += 2) &#123;cout &lt;&lt; a[i] &lt;&lt; &quot; &quot;;&#125;for (int i = (n / 2) * 2; i &gt;= 1; i -= 2) &#123;cout &lt;&lt; a[i] &lt;&lt; &quot; &quot;;&#125;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/07/LG-%E4%B8%87%E6%81%B6%E7%9A%84%E8%AF%95%E5%8D%B7-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/08/07/LG-万恶的试卷-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 捕食关系 - 题解</title>
      <link href="/2021/08/07/LG-%E6%8D%95%E9%A3%9F%E5%85%B3%E7%B3%BB-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/07/LG-%E6%8D%95%E9%A3%9F%E5%85%B3%E7%B3%BB-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>水题一道，输入后循环查找 $a_i$ $&gt;$ $b_j$。</p><h3 id="代码分析">代码分析</h3><p>时间复杂度 $O(nm)$</p><p>空间复杂度 $O(n + m)$</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int n, m, s = 0;cin &gt;&gt; n &gt;&gt; m;int a[20001] = &#123;0&#125;, b[20001] = &#123;0&#125;;for (int i = 1; i &lt;= n; i++) &#123;cin &gt;&gt; a[i];&#125;for (int i = 1; i &lt;= m; i++) &#123;cin &gt;&gt; b[i];&#125;for (int i = 1; i &lt;= n; i++) &#123;for (int j = 1; j &lt;= m; j++) &#123;if (a[i] &gt; b[j]) &#123;s++;&#125;&#125;&#125;cout &lt;&lt; s &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/07/LG-%E6%8D%95%E9%A3%9F%E5%85%B3%E7%B3%BB-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/08/07/LG-捕食关系-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 负二进制 - 题解</title>
      <link href="/2021/08/07/LG-%E8%B4%9F%E4%BA%8C%E8%BF%9B%E5%88%B6-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/07/LG-%E8%B4%9F%E4%BA%8C%E8%BF%9B%E5%88%B6-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="bfd80e894189546d713a82eac798b09cc818dbfcdcdcc6d07b7571ec00075e07">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58cce1cc1f0fbc27e1d52fb73555db5b68ca124bdad7eaba8fbc9bee8bd54ce067cfb63b48a6ed0a33595d2cca444e77366b20e5e2e399f9d03b04de0f3bf234f5522ed793dac5329152312ed814378bccc43aa9c314b88e20a603b3e0242602fafe53af23138d68928cfa5c1c6e7b6cb6838e03d3f791ea4b8702812d48711fb1b3ade8135daf7f692c1f3f739acd52594bfb8b72c52349d2feaad114b10f8503edebb2691d0fc9b148a508ef9ac6859fd9d03f816553f65b403641db8837c2630334b82b450fe88f483956dde0315c6bc7e271f355ec74f6f0d547356288ce6fe82b08dc8aa62385d22a6ed70472566d12bdc63ee2e0955a04c267328a8ba5a588bb09439f96b8ac7a9a6793437e58fc8d8d380f425ca801d783bfd3fc99c8bd507e70777d472f555aa40950ab453fb887baaf81e00080ec5cc5bc8e62c5e231d7e12d60b319980b115ff04aa258652ee497b926e0bde66281dd952874c77fcbe0566b8ee25f88e5d3846f52780061fea72bdaa07a9faaf706be78c25b0c1375cce519bbf9880c7e48d9c8cf40eb5419ed361445a2a8b997af03e784d66165b8f2be8109b8efaa62554b2c6c1fefe131c25bee8e625db416ed9bf78aeed2b4665413f828af6ad53535f466ac551670831c98fa3fde4c5163f4c3034a5f598a998465b447cbec79f25a51685cfce1a8387b241e894b949ac28b1cfeabde08730af0ed5807f3d9fdfe6c2e4c18a0216909e43695cc0c304a1c4a083e819b43671bd5272e90ab94fa5734e346dd6d53f106800fb36da72b23abe0ef57e15dfbc8c10dee7bfc8f861c8b5d5eedd201b1055353829c97dc7582bb58b400c5162b24b52c5f81354fbfea637b50a20d0706fb958416c934d0ab74e09e226602e2d5a74405e9087390466f19e5d898a5a919a2c207ae7911ba5f12345ee44cb9596ed903c4f9f9a64bc848651d00240af48ebc9704a5d67743d46aeb32694cfe1c0e47462afcc7866b856e51fb46fca51feab910556fd62e80c3feb49e1fab108c520fbe06d856d32684965a417a7bf6aad380229a5d73df740a9b8e48cdaeaeb2d66ee4eb1a5419b515a6ecb6e8316ca7e9f109bebfff78f0b7c28c27e9f27e83048687f52ea6ff46714fdc5e1d993bd203c5541aa08c8db22c46613364875a1a2d22c9b548e5dfb810a8fe29fdfc6117f694a7932f4e0f9e859e04013ed296f28f5d6a99d6c2cf7920d83c9d8bc98dc2eceda4a6cb7d3f2ba0d995c94ca25fec0bea4ec5ca4d30ae00db9abc8f171c62579867db086763a88227baca497f199f398cabfc92bb06d90f0c6544d0be7688e460bfeb0dcc495d48cb5d27807ab921690a666d618a2c952c9b943265817ea0fc5f0df4acc1326263b79e4ebfa0a78659a8ac15cf9e46377afd1765196066136ed6295fa672277411f793c314f0bc5532b347b50d9f0cb80a964d07a8aecc023bed028596a5beb516328d008a36265b562413f9c42a52278925765c69f46c1434e223f96e3b667862497a2b41a9272456ed04017aaeb90c331f4d0f37dcce21ea31c82e65292a55b0a9e7b86f179edd621b113e1009fd1c775b31bb299e770497b75285bfa64f6e64806d8dde81008aae70716b850454f75fbcd18dc1e10a074e10d5bb50e7c79d64feeaed34f3c94978969a24674dceb0e30c368b33d40c57d825fa496fc46e27bbea063d3d5951cc493ba7d7230faea39bb02f6d1295a6323b82c8b838a863fcf8700e009feef32b73812cc9d84e492cd660e3759b4afc458c6060fb297e2a5a3829da76d786ebdefaccab4d2732f751a982eeb7f9fd87822071bb5b8ff33f20dcdb8b8627a07e5ecc78f79b9ecfd347b1f62541ecbddbef36cd99107c1364dce0c20d9660bc7d409e1b785da1a465bc3d50e373e6d271511394fb7d322ecc04d1d0604b5b95fb6a81504cb4a8e75c250ba4fc9a1f5339cfcce66cb37a53163613609f33ad192d7d4796c669f1b700c6a5e849aa3eacdc5dc37b7bfc72b91fde515e7b4f7b704bed71924e8c3533f09782c36cd4a20fff6a553635b071af6e3695274576f5a5837ea154bdf9ae1e2d051de95ea7b6e006be9d997f70c711f1e4f5d1f2c4185f0277e6d1bb7cb75a7a19abdadff9a3b180c088c516f504666445d7e735c4742b99c7e55d168b6932a5139034ca43352df7bc2c6612527c6cf53505ac756a50dfb4dd522ec7c8bf8934626d52ca24d80bb5b9bc4e1d09d65ec76ff3f00bdec46d328ec70837586c03fb1966ef7bb2d5b80910772254aab3a52b3911e1cdf675ffb4c721cb5f1a794a644f9b5a16c7fe1197a8887491032d0d1d22afa789f7fdb174db11fb13b45310a2b92006f85ecabb061cacb4c2933c8f89090997cf32ba28cd2e204da0d00a83989d68523fd13ef7e3584dcc897681a7700754a3e822fd88b0603ed6a18380de9b58df163b1fd0f1f8e52ce47bf6606420a68e77546925b8bdb91b1f5cae8f1073816600ab2d918e8ae524bcb688dd5c8fc5b93f296d10ffa091c12a4c29afc0814fc27de4c8c49fb4bd8472f437</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 行程码 - 题解</title>
      <link href="/2021/08/07/LG-%E8%A1%8C%E7%A8%8B%E7%A0%81-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/07/LG-%E8%A1%8C%E7%A8%8B%E7%A0%81-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="df4fb9dfa253aa85d47ed62fa6f6a70e93ac572991bf7f8f2e09d774d92e3641">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58ccc8bc78212f166148a4c68dc108945a7c87f953b3c77e49e7e44003b6ef865d9132ac9d4b448e49006032f292c1d7a8d4c3a2f3588346bead18f59a8802b220477ca98a419cab7333cca188a73e5e912a62974f81df9c8f67a80f9db298bc2900eea623364fda50ee8a32aaf85c6ba7a3ff82d63f436c2169b58cf78f03867dd54401954eb5895cb6bfc8d642245a10f34f7e5d9acb05790569c3841b0485aaa70f855f11640f49f9b7f5bcc5261d2bbefa4f95e1a6d00d1939807a355a2004ee53072f34281f4b2383cbb4edb1d1161a9e9481d2c295e6851ba25c6f1bd405052c0f136d1bef03a695457b58ea4b7fdb7499dbd47b909bda206be5b34e085fb9903314d5ed993892ac5f8f395b1ec2fa88ba0db06f638d2332265c1896fc14bff33820fb33750a297360a3543029a7e1c7e748071ac5c0691cbd47c6f8b4111a4b7d1b2726575252fb2b529ac30dc4b846948ada9436b2782ceecacd18e581bc96c80ccbff30800760b600f9dd45252ffcf583b880de76b9fe786d15d6d2e3b919b12c15fd919e6829618aed67ed399d96638a30bef7e834f231f5a597d00a338613ebb97a8628d1e248e209b47ce303ce57b1e34979057fe34f468e903a7097bbdf37bca2a30971fdefcc765a9b4b891a01defa0605bb3a2f9e85a218be0c839377423968a7e8d0db457de8f4de65fc5f9f4482b95fe357fca1d062292d5691c23ec48524cb0a7fcae402285bd726ff6c34feb687961c65785649a33e93228c9b9a077a3757bb83d20d1c4c55e24541271708cd1949942a2634a26487cbcd4ba5793c9c5df3cf8d45b941a2f891093a3f0ab0a85c870ab5b2a531657760c2e3fdc0ae9b2652fcad1412d4e092481db10baa731c2af230b5f8f8d15149f2f86126222aa4bc6ab6178eed47b2403fb5bf7fd06fc4ebdfc427ebbdc2e6447758a63b1390cf0f4cb2edfa0314ccaa54f83766985f063f2056cd8d69aee51919c1c348c81b82c5dd95be58ee1d2370ed9e772965ea41a841bff9f6a9a40a1132fc45606111feb4d6453d82f5479ee936dbaed8406bb2a92d3039a21142a8a26a5b7987c1dbaa3948779c1a45dcacbbf26509f0ca70a23214f7565c0e6e74a1c4d8d38ec8abbc5ac41a784d339086cf15a84df6b10d7396a707804cc6d3e8fff8ea20814ce8e01a1babc203ca3aae2b7a00a372ef6969f5c40b1abfe4b5717809d656d840132c9b539d4c2e63eeb01580814d27e64057f3a470f0ddec8897bc96b434457acc36239f1ac4b8adf0e56c058ec1f84747ff1161d3fc0c3dd4618d7143e1b70e7618fd64fb7a56a7dc4530644703f792a10d071129c73a2d59d04c7f9a11f0f335681cd923802ed4854918be69d0299690e45eca17d787416366cb902c790aaee8ab95addf0e5a16b8907ea58c9342e9cdea20f668b156c99f75bf25503679b6e7e96fbf850bd0c86f076c0cb679d880f0e5d0cb3272e64b744c2a0b79ec558730a85ca6764e85b211dcabfc716810c37aeee9310454fdb1064cf66f14cfc97cd360e32d103a9963dd9bd454befe6984c991a422f079e9982866ce1b574907a0fdc117940738fe1a5d2933d673597c08351e354c637ba82433d90f8885c7dcbe64c6db8fadc55b079c991cf22ef266fdead86b809398b4e0ff63d3e1d76b7ec462f4562ceb1450a45e6b30d21b7b4cff13e33b32e3434d457f4534d8615c4da731d9b70000d892cb4cac0231714d1ba2aaef380730e844a689397582bd68119a5bca5941d18104ca5208d062fbd6f8ed300b8e7829c13c0b4218e5c42474494196b5523b0fcf16ffb1ea668d5cae0e28130ef9927c5e080a8fcc74c654665dc4206a87491b53a1f81d134540140dfbda88c828b8126f3159d7e004c8e5179f84de772ebeeca29cb6102c4ca403c5653b57a618f3507e52c79e9df271f737e2a3811c5f1e28cf37f0585762c173bcaf8e78505e38cac134ea702402efef714e2701be0924e82877a122a2936330e77ac5e76bb9d3651079fe6d392106887a1f5ebedf54c0116f31aaa0fe5449600d55126709171795a6d8245f851827513330c1326bdb157d8ea3ef1434e90a4489b836ef2ed9af90f6eef3308e0d377752a9b4b958dd691fd87d3d035b1eb17da761e1fbaac7d4c7881e485f5041b70fc326cb8f89d0272d5de54ec64d8a620429d63629fcb3eafcb77dc89589c440bb0f471bdb819eacd14cffad282d0d92eb37518df17773ffc611364212623ac13dee1ad35e3e0c1b54fc122b08f6370e9ea112bc22e2806727c32033af90e86fc07098065edcb3693570f2891945db21a32f4abeb008b99ee652a24c58c532f2217f888838733ab3d00e2c317565f70b83349253ac71e5fef37977315d0e122c24a612507559b62a1a6f858680f0b74918db4d404f01b5849f20f4e08008ef47a4988a43e794e569be9176533b8a9f369cf411749e08d538f9c63c0070254b2083683adc8795141de5209e34eff3e08f4234bc9102768c0c98dfec8a63f0e682b02a2d625d18ec6c1b5f596944e3a87becf86dee88a0733a65158ea5529681887d6b086a655ed5759ce90a36a9bf9c87f67fa5b029b85732f8c20909e4233f2962a5457f26ba1cef19fa5e9fbdb70aa6415afe1230f2ea3b94ec8532bff975e04393284d73810a6e6d76ea87875976cc859451ae8a544b04d9bfd6e8015b53c709f25f195675e36390e2e7b4b4cfe03b983f13f92ce5510164ad1670e5113de9547fbe62e9d4395fbed774ca15a953e11525ea93c03e8f94bebf742090eddca03d64a11be8bcd2fb67066f2de3c6e7051e799b21d00062283e61fec8e0c2f8817ece95178d67666aa8dd62bd60822683e4caed0da6c91bbe210f53c25957f8aa45655928baa9d39bffd8c64f3a443d5a077973909400b71d02c1a3cd108fb9bd8d39e66910e63084ffda85ba6efa501469b0d49ac0f239e5b78ce984c6dbe32de9f83b10e05834b9b28e2be25e71c06fbab31332c3236add47d96f9567ef677c978eb66da05b4fecc302d877d2e6f75d9665fbb6d195004c0e54ec290146efad20d52c49e11a243536fab9bdc9f528d8dae4f2ba9d485c9140679731183c33299bb7bded9b42aecf7e75e92d4e526e40b02aa5d99f7eab07798f4fec99d70a2ffe1f14f547c587c3abde69fac9e5ea6aab1c6614f6206f86f711eacd624e02f9fb38632c0426d7dc6bfe73e544cb6f454eb5d22ec2e7808ed81828db4131ff8e3c80c4ab99507481a6cfcc4184978d0ae1f1bc92aa51267dabb25ce8318a3032c73ab194a9a0fed26b52c20aca991c9cf4166a4c67775e6fdf868ae600fd0e3783c12892a6889fcc666f092c36784c9a3f713ace9928ac7cf603924478fa8bba80909cc09ccca430d89a4db488d352967af8f31e3df909e951672b3c434f357a66e2bda9832608f5e5a13e5ac972b96e78c1d2d49ea95a4377882f22f76d10385654d9ff1d7ec942a887dc550f18f1d7909e7eb8ce7f22f101fbe451d9e99bb6fbe23f56c1adefe934f6110e396b99475dcaae4b378d0bc5a278affee3acb6b8a965a7206b067b90642423b0cc8ee0ccb7bbc7f3557643d64785860ca77cd6565a296e401e7e3188335461e13c32d639796e2828017477a853a7a3e3b181a0fabf7be1be0b58b16b4db32bbc6b40df259d720ed3f2bab48ebd661add0f6d1f01fc30d62978ad7aeadd7ff7a555088f67cc615eabe57bbe761e5b91d35da84d636771bef3f9facc5a4d792637b8e0b97f49af91774333042ae1f07aca2d0d7f32c910fcadba562124bca7d7317059c814369120e833b2fd1645c524e15f6bba5ee083025a1d1f80a4574d6c2f2c21490fc0266ab8b8d4edb2f574ea8adfb22bed1a28f16815080c985a6c8a0ab4a2ed1a95d3826bb94fa3fe60ad5d218f98d11c50ec0bd282afd00ea7c5a442b18c49cb550e36e7f8ea3244fa15d67da219c69c49d3ef980411920674abc45ea0d1f4ac57a22c5c16cb470d53235c307befd585ae302ec75abb292de057a9abe43fb7ace8432a0043b6fa66445837c73d874215e6c2cc853d271834d1da5764691b0d88a0a294ce6c8b76f54a61b7f8dc31353e370e887fa3d9106c9e05d2243f6a77d41d0001d87e96614268cabeb0c2c8e011e53e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LG - MC 之吃牛肉 - 题解</title>
      <link href="/2021/08/06/LG-MC-%E4%B9%8B%E5%90%83%E7%89%9B%E8%82%89-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/06/LG-MC-%E4%B9%8B%E5%90%83%E7%89%9B%E8%82%89-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="来自验题人的致歉">来自验题人的致歉</h3><p>本题验题人太<strong>垃圾</strong>了，没有注意到题意矛盾，导致标程出错，而样例过于简单，无法查出部分错误。</p><h3 id="题目解析">题目解析</h3><p>这题太淼了，但我做的时候因为玩过 MC，觉得吃饱指的是不能再吃，差半个饱食度也能吃的那种。</p><p>这题就是字符串匹配。</p><p><strong><code>if</code> 出奇迹</strong></p><h3 id="代码分析">代码分析</h3><p>时间复杂度 $O(nm)$</p><p>空间复杂度 $O(1)$</p><p>要点：</p><p>$tot$ 要转换成整型再 $\div$ $3$。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int n, m, cnt = 0;double tot = 0;bool flag = false;string s;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; s &gt;&gt; m;for (int j = 0; j &lt; m; j++) &#123;if (s == &quot;stone&quot;) &#123;tot += 0.1;&#125;if (s == &quot;coal&quot;) &#123;tot += 0.5;&#125;if (s == &quot;iron&quot;) &#123;tot += 1;&#125;if (s == &quot;gold&quot;) &#123;tot += 1.5;&#125;if (s == &quot;diamond&quot;) &#123;tot += 1.75;&#125;if (s == &quot;obsidian&quot;) &#123;tot += 4;&#125;if (s == &quot;zombie&quot;) &#123;tot += 0.5;flag = true;&#125;if (s == &quot;skeleton&quot;) &#123;tot += 1;flag = true;&#125;if (s == &quot;creeper&quot;) &#123;tot += 2;flag = true;&#125;if (flag == true || 20 - tot &lt; 6) &#123;cnt += floor(tot / 3);tot -= floor(tot / 3) * 3;flag = false;&#125;&#125;&#125;cout &lt;&lt; cnt &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/06/LG-MC-%E4%B9%8B%E5%90%83%E7%89%9B%E8%82%89-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/08/06/LG-MC-之吃牛肉-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 公交车站 - 题解</title>
      <link href="/2021/08/06/LG-%E5%85%AC%E4%BA%A4%E8%BD%A6%E7%AB%99-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/06/LG-%E5%85%AC%E4%BA%A4%E8%BD%A6%E7%AB%99-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>题面很长，总体来说，这道题就是让你来判断每个乘客的区间中是否有车停靠。</p><h3 id="代码分析">代码分析</h3><p>本题要点：</p><p>要定义结构体，结构体中要有总时间如 <code>TOT</code></p><p>输入的时候记得用 <code>scanf()</code>，这个函数可以无视中间的 <code>:</code></p><p><code>scanf()</code> 的参数是指针类型</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;struct NODE &#123;int HH, MM, TOT;&#125; a[1001], s[10001], t[10001];int main() &#123;int n, m, tmp, d[1001] = &#123;0&#125;;cin &gt;&gt; n &gt;&gt; m;tmp = n;for (int i = 0; i &lt; n; i++) &#123;scanf(&quot;%d:%d %d&quot;, &amp;a[i].HH, &amp;a[i].MM, &amp;d[i]);//输入记得带格式a[i].TOT = a[i].HH * 60 + a[i].MM;&#125;for (int i = 0; i &lt; m; i++) &#123;scanf(&quot;%d:%d %d:%d&quot;, &amp;s[i].HH, &amp;s[i].MM, &amp;t[i].HH, &amp;t[i].MM);//同上s[i].TOT = s[i].HH * 60 + s[i].MM;t[i].TOT = t[i].HH * 60 + t[i].MM;for (int j = 0; j &lt; n; j++) &#123;if (s[i].TOT &lt;= a[j].TOT &amp;&amp; t[i].TOT &gt;= a[j].TOT &amp;&amp; d[j] != 0) &#123;cout &lt;&lt; a[j].TOT - s[i].TOT &lt;&lt; endl;d[j]--;goto END;&#125; else if (tmp != 1) &#123;//敲黑板tmp--;&#125; else &#123;cout &lt;&lt; &quot;Leave&quot; &lt;&lt; endl;tmp = n;//记得重置goto END;//goto跳转到结尾，也可以用break&#125;&#125;END:;&#125;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/06/LG-%E5%85%AC%E4%BA%A4%E8%BD%A6%E7%AB%99-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/08/06/LG-公交车站-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - Hands - 题解</title>
      <link href="/2021/08/05/LG-Hands-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/05/LG-Hands-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>这题看上去很难，但分析后就可以一个循环解决。</p><p>每次取牌如果有一个连续的大于 $0$ 的数列，那就全部取出，取到其中的某一个数等于 $0$。</p><h3 id="代码分析">代码分析</h3><p>边输入边累加，记住当 $x - last &lt; 0$ 时，就不要累加。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int ans = 0, n, x, last;cin &gt;&gt; n;for (int i = 1; i &lt;= n; i++) &#123;cin &gt;&gt; x;ans += max(0, x - last);last = x;&#125;cout &lt;&lt; ans &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/05/LG-Hands-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/08/05/LG-Hands-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>『置顶』WFR - 如何使用 Warfarin</title>
      <link href="/2021/08/05/WFR-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Warfarin/"/>
      <url>/2021/08/05/WFR-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Warfarin/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="简介">简介</h2><p>Warfarin 是一个由 C++ 编写而成的解释型语言。</p><h3 id="特点">特点</h3><ul><li><p>变量，支持数字、字符串、布尔、数组（允许使用 <code>a[&quot;test&quot;]</code> 这样的语法）；</p></li><li><p>函数定义、调用与递归、高阶函数、<code>lambda</code> 表达式；</p></li><li><p>键盘与文件的 I/O 操作；</p></li><li><p><code>if for while</code> 语句；</p></li><li><p>大量内置函数，以及一部分操作系统 API（仅支持Windows）；</p></li><li><p>点语法操作，即 <code>a.test</code> 等价于 <code>a[&quot;test&quot;]</code>；</p></li><li><p>编译成特定格式的 <code>.ff0</code> 文件，支持 <code>import</code>；</p></li><li><p>支持伪代码和普通代码混写 （打开 <code>-p</code> 开关）；</p></li><li><p>支持反编译成 JavaScript（一部分内置函数不会给出对应的实现）；</p></li><li><p>支持 DLL 文件调用。</p></li><li><p><strong>支持自动更新 不需要手动下载新版本的代码，程序会自动检查并更新源代码。（仅限 3.30+ 版本）</strong></p></li><li><p>全新 Warfarin 语言编写数学库（<code>algorithm.wfr</code>）</p></li></ul><p>具体信息请看<a href="https://github.com/WarfarinBloodanger/ff0-script/blob/main/readme.md">这里</a></p><h2 id="使用">使用</h2><p>Warfarin 目前最新版本：<strong>3.50</strong></p><h3 id="下载-配置">下载 &amp; 配置</h3><p>$1.$ <strong>下载</strong> Warfarin C++ 源文件，</p><p>$2.$ 使用 g++ 编译成 exe 文件，</p><p>$3.$ <strong>把 exe 文件加入环境变量</strong>（不会的请百度）。</p><h3 id="编译-运行">编译 &amp; 运行</h3><p>运行程序有 $2$ 种方法：</p><ul><li><p>直接运行 <code>Warfarin.exe</code></p></li><li><p>编译运行 <code>.wfr</code> 源文件（请看下文）</p></li></ul><p>Warfarin 的源文件扩展名一般为 <code>.wfr</code>，</p><p>使用 <code>Warfarin.exe</code> 编译时请在该文件夹下的命令行输入 <code>Warfarin 文件名 -cr/crj/crjp</code>，</p><p>此命令会编译出一个 <code>.ff0</code> 文件，相当于 C++ 的 <code>.exe</code> 文件，<s>但不能双击运行</s>，请<strong>不要删除</strong>。</p><p>关于 <code>cr/crj/crjp</code> $3$ 个编译参数请看<a href="https://www.luogu.com.cn/blog/Warfarin/ff0-faq">此处</a>。</p><h2 id="相关链接">相关链接</h2><p><a href="https://ren-yc.github.io/assets/ff0/Warfarin.zip">本站下载链接</a></p><p><a href="https://github.com/WarfarinBloodanger/ff0-script">作者 GitHub 仓库</a></p><p><a href="https://raw.githubusercontent.com/WarfarinBloodanger/ff0-script/main/user.txt">英文帮助文档</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=ren-yc.vscode-warfarin">VSCode 插件</a></p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/08/05/WFR-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Warfarin/">https://ren-yc.github.io/2021/08/05/WFR-如何使用-Warfarin/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Programming Languages </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Warfarin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 买二送一 - 题解</title>
      <link href="/2021/07/31/LG-%E4%B9%B0%E4%BA%8C%E9%80%81%E4%B8%80-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/31/LG-%E4%B9%B0%E4%BA%8C%E9%80%81%E4%B8%80-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><blockquote><p>凡是顾客购买两本书，就可以免费带走第三本书，只要免费书的价格不超过两本付费书各自的价格即可。</p></blockquote><p>可以使用排序来做。</p><h3 id="代码分析">代码分析</h3><p>排序，建议偷懒使用 <code>sort</code> 函数，<strong>But</strong> 是降序排序，所以要写炒鸡简单的 <code>cmp()</code> 函数。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int n, a[100001], ans = 0;bool cmp(int x, int y) &#123;return x &gt; y;&#125;int main() &#123;cin &gt;&gt; n;for (int i = 1; i &lt;= n; i++) &#123;cin &gt;&gt; a[i];&#125;sort(a + 1, a + n + 1, cmp);for (int i = 1; i &lt;= n; i += 3) &#123;ans += a[i] + a[i + 1];&#125;cout &lt;&lt; ans &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/31/LG-%E4%B9%B0%E4%BA%8C%E9%80%81%E4%B8%80-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/31/LG-买二送一-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 方舱医院 - 题解</title>
      <link href="/2021/07/31/LG-%E6%96%B9%E8%88%B1%E5%8C%BB%E9%99%A2-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/31/LG-%E6%96%B9%E8%88%B1%E5%8C%BB%E9%99%A2-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="0d1a9f3aca2c8fe4e1cf44cd052c1323375814e2b1dca4f519a3fe1a7d878961">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58ccc8bc78212f166148a4c68dc108945a7c9fd427aac55495c37ec0395fe2c5ae4788c4458bf2b236d4f3dbf8064d71651a8bf04f3111e87ed96c67c00780f2ef84e590540026e68e3389a15f8bef40ac77c4818e97a7369971a52e4eccff147ad520e9005fbf668056102a1984d40e360585faf27fe3e3d22c3a3d35719402cc73e878a0b3cacbaa7f3786f830f9ade5de54881c7079f706d1e89c5baf739852440aa13aa4adb8ca1dd9676379a64728b90b11617a386e69b12cadaf993dd570e9e94bd6a9b4e2116d3b1a094ac82894abc292b095585a995e5d7e859bc1457645d012dc5bbe62306d9902f4e3ed3c717f5baa21c0f10201cb5fc6b4777db332e8f0fd400630a77166597af53a05f52f66c08555e530a0d5a2e4b7182e4e354954f8422502c980ee74393503cf5b3ac6b4c8822e16a6967ffd7735fed8f6a8bc7fcbdb8a3b6f6a5d4662a627c1b06dd3f0140518425a4e96083b91d1062910271f8cba5a6684d20d99513091b45cfd9e8c85abecbf3a7f144d170510721898dc125d026896e0e5d6cb05e63af7e7f6d952efbf5d4417853bf431b5de8c39169c195bbb92be1277b0edce334be75c2acdc500086f1f4d27aad81cbefb5b809403f688cceb099607456bc4fe9e33e9f51b8bf83f1b74745de6ece9f7a6cb26d17861788fb64c3cbaf95483fe5d5c1be18cdab769c01592f9ad20995aff095f96e8f20571524177717700e6337a3dc4831f316bf1047bf897a53d6ff187b636c476a1a96d366592ea35514a32ace2552426e6d7c9e1544a5e8ff68e38ae91131c0ff086f134dade5a5e54dd8d3e2fa139fbb1458185093acc43256bc507016484414481004dcfd633b66e52f6d799c2d3f24637bb3117235228de42615a49be5bc43b5132275aec66e0572d0945d6ba149eaf1f9888bf4a930fd81de32dc0cb4775ecb90dc9f1bf6ce386d90b11a132e5f15cc8010e0aeb25fc127a2c7b92c9c76a264fb2e04f7673338d986b92089d0aa8c9f0e618b682c2ba53d954bc9e1a4942c33c72da764c87b00621cb4979d2fa50fdeacf3d19cdd19a662af893b0f99f61781a508b6251e7974b89e4a9c665f5564b6eb7da693251407cbe5cda6c4fa7c072e631fbf3ac12500f51afcf18d16548f4fea391fc7e62d6bd11cd2b10e520abf216697046ff2ad89b738dd0f20e8ee5dcd2663b0942ebf47980c7d5bc4e5026431bea0312e9b28a6731b31d54cc67c3dae76be1fb316f641e13902de05861cd4c4e76e1aeefd5ed77c9d671e6ebabb95d7ea0296e90cf32ad66876ed017089c30bf840a7a1e51fbac9025d8f0038e9ed4ef8a487daff17fb1cea909b633ad5d328d9efc2986b5ef37addc59403dd17c1b0ff1567103a1736fd92fd96b3d0ee06937be9c3374806365bfdb63a8b4f0e4ecf1eac755d642d8180b93ef9487bd301144aea7f16922f43a23f0840194332e209f8f0c62cadd3717e077f33efed3b3462a434d908eed8e40767bca75005c470ce2829c025bdd7d048c1db550a95719df07254435348a4308b3dab6e6caf4a5fab043e08ab4abff1c8e6da2f3f5f1f96f758499851989d3e980b4555c47eeaa7873ec5e9df6420c0a0021d25a2db70a2a5a221287f89947aa43d780f12185d27e293e487160f06d70a8e970a97f686fbfb0a8e6888f01b0bfc86fa4d830f2ec99</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 开关灯 - 题解</title>
      <link href="/2021/07/26/LG-%E5%BC%80%E5%85%B3%E7%81%AF-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/26/LG-%E5%BC%80%E5%85%B3%E7%81%AF-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>一个循环搞定。</p><h3 id="代码分析">代码分析</h3><p>一个嵌套循环 + 检查灯的状态的循环。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int n, x, y, a[10001] = &#123;0&#125;, sum = 0;cin &gt;&gt; n;for (int i = 1; i &lt;= n; i++) &#123;cin &gt;&gt; x &gt;&gt; y;for (int j = x; j &lt;= y; j++) &#123;if (a[j] == 1) &#123;a[j] = 0;&#125; else &#123;a[j] = 1;&#125;&#125;&#125;for (int i = 1; i &lt;= 10000; i++) &#123;if (a[i] == 1) &#123;sum++;&#125;&#125;cout &lt;&lt; sum &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/26/LG-%E5%BC%80%E5%85%B3%E7%81%AF-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/26/LG-开关灯-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 古老的 A + B - 题解</title>
      <link href="/2021/07/26/LG-%E5%8F%A4%E8%80%81%E7%9A%84-A-B-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/26/LG-%E5%8F%A4%E8%80%81%E7%9A%84-A-B-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="aa5568fdf8fcd0f6661173673d3d5f296966d1e6f55387daa409dc518db6b9c0">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c10636d54684bd9fdd32deb9d38b1cde4b00c2f13af0f31a29ab62941722a1d1e58cc14db3c95bd80164544e733d5d0b786a68ee86f749c626e437718ab72f45e9d3c47b78d43ec4867023c161260bb55798b6b951fc8181de3e08a3dc64c3adbf84ac4dabdfcba2d103b4b5fc2177e03591beb305fd825d08f34ea25f35ffbaab3be04f1090e622a2fbcf102bda9823f344854eaeedab7aa5e47cb23ce7d6330a1e786e0a0a6f4f00989238b6c0bf10cf457cee76560f616c6bb2a3321f0a49080940b5877d17be13e2443ee220c3859ab3970de71114ace09b0887c7ef476569faa63a5465f5ff22729606e9327fc14267dd3b39b2d47d1e488e053ceef09e42f24bbc7b2a23b36485a071d538d0b99165386e22bd0c10bd76db605298fe178b224dc2999ec1be80fb31faebc2772de93be37c611b3a4725a677e251441f73d13deafbb26575b72fb3858d92b0b537b2c2e1ebd5ebbffb8a14190e36e09b339fe7156e34d7217b478186ba279ab4e4a913c9003c76686afe77013d155721b4031621a477c88290f224688b46fbdbf3d5012f07d75453816e29dacd3c5afd729a3821cb819bd0212dbf5327be5abf43ea6f27d9d7db1752df44de434d2f47403a152cf3f8e3c7e050470f57bd25ef619af85aebf4c5d9573f4d6940664d2b19a4024a260f01a9abd416874abcb372c836678b331c027bd054b15df0b1140122e8ed9bcafcf76d61735f7b149b1f89fed2a5f6296a07e4c28fb3cfb00f55bea7529ea085e5cec97c39d59b124a97bf277c1c5cdc4cf9d5791c1bc1d7969d700a506af8ea74b4c959fade37f50d226de549f195ddd43a46293cacbd444696e1ae67d7bd9e9cba02d96c59f69504c392b49b78aea8dd8b51447b8c8f1448cdedae18dc657c5b1f709e74c6231f45b96d8ebd955ddbe759a6ba031982a606ce688c34fa98d6e60e4817e7b21a8ec07a9f2dfec69b9c701709e7e696698428ea0f77221e8369c3312cff5f747ff816f8398063ac2f40997a621c857d9c1b72682c8afe1577fd122ee7f48d1e2079d824ad127721174f24eece953d2ead45723181407bfc136824e39ca92a01d2b2e3bf282fae2b05a625e8d2b5db86e9a38ea23089766a522b4140b592462a4faa7c1280db753666767c9d1f57e421bf0b1427b6c4338f16052fbad6e02a18c59e363ae04bc9ebb405a25b2235cb9de185252342bc2e8518d6810ea3d3d72e3ae063de55337459ea567e876c7f6fa997afbd324a460a2be93537317e5f647b9ca3b1383be6d8f27726acb8e6024aff698116840a8301bb5f77b9ee79cfe869cdbb29250906c17565137169b70414eb38a94946bef286bcf35cb68928a3445594fc31ee5cdabfe5476976c1c456a7c5b325bb8fdd7e341206fc1d82f095e62934166eace5fe7e4c4860be2704f3cc95532d4746e949b4f4bc4126efcc55084d2ae673e9aff74d199a0c62e5053ce1cecc442e2d05fa6592948a58b90464ea66d3a201dfd070da53120bcc7975e5f0349506e50d6e657d9192d2faee9692a15f034f52204ac697f78c1019e570a33a7b2d018d3bce1c58d7fb555dae7e351f1ad25ad14256a7cc939ec6b61eb2ff15d4796ae22074d00d2679952e119c31631dbb026e6df1f0f930c3e637b01aba6c56bbee12c31fe38bcf28c97e39d5f2437ccefa24383ac4f60238663f758c5d828406a1a977611d4fcdb56a8616352e8ed923945a48393405c5ea7d37ff697986f34d0a65cb5f4fcf1b0180b54bdf049842f1fa7702a0920f19c0ef797e1a8982af0dcfc760f6e47a7d4f8fe574d842e0bf6440b9ef1c7d8189cd0084f4bed832dd26527fc812fcbdd4ef23f5ff840711905438688ac23f89f2d23e26acc3224afe4dfc009e0e7403d1353b176657100abe02f49a07729119ab0eea358535dce60ba0294970f3f25070c320786bb7f90e97d178956ecef5709d9ded8adc8c5c1aface5453146fa7febf71c0108cea4860fca9f1acc7770244c580ae95021c2a586342bad599bdf81f635388b483967592e58765e786e8d21e5dabae6dffe1c7154b044871023b1ff0efc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 排序 - 题解</title>
      <link href="/2021/07/26/LG-%E6%8E%92%E5%BA%8F-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/26/LG-%E6%8E%92%E5%BA%8F-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>这是一道炒鸡淼的 C++ <code>if</code> 语句题（?）。</p><p>太淼了就不解释了</p><h3 id="代码分析">代码分析</h3><p>全读入完来个函数判断就行了。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int a[6], b[6], cnt1, cnt2, tot1, tot2;int mysort() &#123;if (cnt1 &gt; cnt2) &#123;return 1;&#125; else if (cnt1 == cnt2) &#123;if (tot1 &gt; tot2) &#123;return 1;&#125; else if (tot1 &lt; tot2) &#123;return 2;&#125; else &#123;return 0;&#125;&#125; else &#123;return 2;&#125;&#125;int main() &#123;for (int i = 0; i &lt; 6; i++) &#123;cin &gt;&gt; a[i];cnt1 += a[i];if (a[i] == 50) tot1++;&#125;for (int i = 0; i &lt; 6; i++) &#123;cin &gt;&gt; b[i];cnt2 += b[i];if (b[i] == 50) tot2++;&#125;cout &lt;&lt; mysort() &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/26/LG-%E6%8E%92%E5%BA%8F-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/26/LG-排序-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 生小虫子 - 题解</title>
      <link href="/2021/07/25/LG-%E7%94%9F%E5%B0%8F%E8%99%AB%E5%AD%90-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-%E7%94%9F%E5%B0%8F%E8%99%AB%E5%AD%90-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>这道题其实就在检验 <code>for()</code> 循环的应用。</p><h3 id="代码分析">代码分析</h3><p>读入一切信息后，</p><p>写一个循环 $z$ 次的 <code>for</code> 循环，如果满足条件 <code>k == x</code>，小虫子数量增加，反之 <code>s1 = 0</code>。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int k = 0, x, y, z;cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;int s1 = 0, s2 = 0, cc = 1, cl = 0;for (int i = 1; i &lt;= z; i++) &#123;k++;cl += cc;cc = s2;s2 = s1;if (k == x) &#123;s1 = cl * y;k = 0;&#125; else &#123;s1 = 0;&#125;&#125;cout &lt;&lt; cc + cl &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/25/LG-%E7%94%9F%E5%B0%8F%E8%99%AB%E5%AD%90-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/25/LG-生小虫子-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 合成大西瓜 - 题解</title>
      <link href="/2021/07/25/LG-%E5%90%88%E6%88%90%E5%A4%A7%E8%A5%BF%E7%93%9C-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-%E5%90%88%E6%88%90%E5%A4%A7%E8%A5%BF%E7%93%9C-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>这是一道 C++ 枚举题，只要遍历 $b$ 数组就 $ok$ 了。</p><h3 id="代码分析">代码分析</h3><p>输入正整数 $n$，然后循环输入 $x$，$b_x = b_x + 1$;</p><p>遍历 $b$ 数组。</p><p>倒着遍历，一旦发现有符合条件的数，直接输出并结束程序。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int n, b[201];int main() &#123;int x;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; x;b[x]++;&#125;for (int i = 0; i &lt; n; i++) &#123;b[i + 1] += b[i] / 2;&#125;for (int i = n - 1; i &gt;= 0; i--) &#123;if (b[i] != 0) &#123;cout &lt;&lt; i + 1 &lt;&lt; endl;break;&#125;&#125;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/25/LG-%E5%90%88%E6%88%90%E5%A4%A7%E8%A5%BF%E7%93%9C-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/25/LG-合成大西瓜-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 救援争先 - 题解</title>
      <link href="/2021/07/25/LG-%E6%95%91%E6%8F%B4%E4%BA%89%E5%85%88-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-%E6%95%91%E6%8F%B4%E4%BA%89%E5%85%88-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>这是一道炒鸡不淼的 C++ 结构体排序题，我卡 <code>cmp</code> 了好久。</p><p>就俩循环读入 &amp; 输出，<code>sort()</code>，还有<strong>万恶</strong>的 <code>cmp</code>。</p><h3 id="代码分析">代码分析</h3><p>输入正整数 $n$，然后循环输入 $a_i . sh, a_i . sm, a_i . dh, a_i . dm$;</p><p>使用 <code>sort()</code> 结构体排序;</p><p>循环输出排序后的 $a_i$。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;struct Node &#123;int sh, sm, st, dh, dm, et, id;&#125; a[1001];bool cmp(Node a, Node b) &#123;return a.et &lt; b.et || a.et == b.et &amp;&amp; a.st &lt; b.st || a.et == b.et &amp;&amp; a.st == b.st &amp;&amp; a.id &lt; b.id;&#125;int main() &#123;int n;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;scanf(&quot;%d:%d %d:%d&quot;, &amp;a[i].sh, &amp;a[i].sm, &amp;a[i].dh, &amp;a[i].dm);a[i].st = a[i].sh * 60 + a[i].sm;a[i].et = a[i].st + a[i].dh * 60 + a[i].dm;a[i].id = i + 1;&#125;sort(a, a + n, cmp);for (int i = 0; i &lt; n; i++) &#123;cout &lt;&lt; a[i].id &lt;&lt; endl;&#125;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/25/LG-%E6%95%91%E6%8F%B4%E4%BA%89%E5%85%88-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/25/LG-救援争先-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 斗罗大陆之武魂融合技 - 题解</title>
      <link href="/2021/07/25/LG-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E6%AD%A6%E9%AD%82%E8%9E%8D%E5%90%88%E6%8A%80-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E6%AD%A6%E9%AD%82%E8%9E%8D%E5%90%88%E6%8A%80-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>这是一道炒鸡淼的 C++ 模拟题，也不卡 <code>long long</code>。</p><h3 id="代码分析">代码分析</h3><p>输入正整数 $n$，然后循环输入 $x$ 和 $y$。</p><p><strong>一边输入一边计算，速度快</strong></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;int n, x, y, z;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; x &gt;&gt; y;z = (x + y) * 2;cout &lt;&lt; z &lt;&lt; endl;&#125;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/25/LG-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E6%AD%A6%E9%AD%82%E8%9E%8D%E5%90%88%E6%8A%80-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/25/LG-斗罗大陆之武魂融合技-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 前 n 个偶数位回文数之和 - 题解</title>
      <link href="/2021/07/24/LG-%E5%89%8D-n-%E4%B8%AA%E5%81%B6%E6%95%B0%E4%BD%8D%E5%9B%9E%E6%96%87%E6%95%B0%E4%B9%8B%E5%92%8C-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/24/LG-%E5%89%8D-n-%E4%B8%AA%E5%81%B6%E6%95%B0%E4%BD%8D%E5%9B%9E%E6%96%87%E6%95%B0%E4%B9%8B%E5%92%8C-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p><s>这道题目就不淼了，变成沝了。</s></p><p>写几个函数就不行了。</p><p><s>真 简 单</s></p><p><s>250lht：呜呜呜这是比赛赛题，我保龄。</s></p><h3 id="代码分析">代码分析</h3><p>输入 $n$，写个循环判断从 $1$ 起的每一个数，如果满足函数 <code>weishu</code> 和函数 <code>huiwen</code>，则加到计数器。</p><p>这时有人就会问了，<code>huiwen</code> 函数中的 <code>_itoa_s()</code> 是神马东西，请看<a href="https://blog.csdn.net/smcrystal/article/details/71191335?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.base&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.base">这里</a>。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;bool huiwen(int g) &#123;int i, j;char b[1001];_itoa_s(g, b, 10);for (int i = 0, j = strlen(b) - 1; i &lt; j; i++, j--) &#123;if (b[i] != b[j]) return false;&#125;if (i == j) return false;return true;&#125;bool weishu(int x) &#123;int cnt = 0;while (x != 0) &#123;x /= 10;cnt++;&#125;return cnt % 2 == 0;&#125;int main() &#123;long long n, i = 1, sum = 0;cin &gt;&gt; n;while (n != 0) &#123;if (weishu(i) &amp;&amp; huiwen(i)) &#123;n--;sum += i;&#125;i++;&#125;cout &lt;&lt; sum &lt;&lt; endl;return 0;&#125;</code></pre><p>以上代码交到洛谷上会 <strong><a href="https://www.luogu.com.cn/record/54096300">CE</a></strong>，你谷居然无法使用 <code>stdlib.h</code> 的 <code>_itoa_s()</code> ???</p><p><strong>偷懒失败</strong>，只好自己写转换函数。</p><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;void int_to_string(char s[], int m) &#123;int i = 0, k, n;char temp;if (m &lt; 0) &#123;s[i] = '-';m = -m;i++;&#125;while (m &gt; 0) &#123;n = m % 10;m /= 10;s[i] = n + '0';i++;&#125;s[i] = '\0';if (s[0] == '-') k = 1;else k = 0;for (int j = k; j &lt; i / 2; j++) &#123;temp = s[j];s[j] = s[i - j - 1 + k];s[i - j - 1 + k] = temp;&#125;&#125;bool huiwen(int g) &#123;int i, j;char b[1001];int_to_string(b, g);for (int i = 0, j = strlen(b) - 1; i &lt; j; i++, j--) &#123;if (b[i] != b[j]) return false;&#125;if (i == j) return false;return true;&#125;bool weishu(int x) &#123;int cnt = 0;while (x != 0) &#123;x /= 10;cnt++;&#125;return cnt % 2 == 0;&#125;int main() &#123;long long n, i = 1, sum = 0;cin &gt;&gt; n;while (n != 0) &#123;if (weishu(i) &amp;&amp; huiwen(i)) &#123;n--;sum += i;&#125;i++;&#125;cout &lt;&lt; sum &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/24/LG-%E5%89%8D-n-%E4%B8%AA%E5%81%B6%E6%95%B0%E4%BD%8D%E5%9B%9E%E6%96%87%E6%95%B0%E4%B9%8B%E5%92%8C-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/24/LG-前-n-个偶数位回文数之和-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 斗罗大陆之魂系辨认 - 题解</title>
      <link href="/2021/07/24/LG-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E9%AD%82%E7%B3%BB%E8%BE%A8%E8%AE%A4-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/24/LG-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E9%AD%82%E7%B3%BB%E8%BE%A8%E8%AE%A4-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>@250lht 这道题目太淼了！</p><p>不多废话，这道题直接写一连串的 <code>if</code> 语句就行了。</p><blockquote><p><strong>P.S.由于 Windows 操作系统终端使用 GB2312，所以无法正确显示中文，但这不会影响洛谷评测结果</strong></p></blockquote><p>审题人真的良心，写了这个，不说的话我还以为我代码出 BUG 了呢。</p><h3 id="代码分析">代码分析</h3><p>输入 $n$，循环读入 $a_i$，尽量<strong>一边读入一边输出</strong>，<strong>速度快</strong>。</p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;void judge(int n) &#123;if (1 &lt;= n &amp;&amp; n &lt;= 4) cout &lt;&lt; &quot;魂土&quot;;if (5 &lt;= n &amp;&amp; n &lt;= 14) cout &lt;&lt; &quot;魂师&quot;;if (15 &lt;= n &amp;&amp; n &lt;= 34) cout &lt;&lt; &quot;大魂师&quot;;if (35 &lt;= n &amp;&amp; n &lt;= 39) cout &lt;&lt; &quot;魂王&quot;;if (40 &lt;= n &amp;&amp; n &lt;= 49) cout &lt;&lt; &quot;魂宗&quot;;if (50 &lt;= n &amp;&amp; n &lt;= 54) cout &lt;&lt; &quot;魂尊&quot;;if (55 &lt;= n &amp;&amp; n &lt;= 59) cout &lt;&lt; &quot;魂帝&quot;;if (60 &lt;= n &amp;&amp; n &lt;= 69) cout &lt;&lt; &quot;赤炎斗罗&quot;;if (70 &lt;= n &amp;&amp; n &lt;= 79) cout &lt;&lt; &quot;巅峰斗罗&quot;;if (80 &lt;= n &amp;&amp; n &lt;= 89) cout &lt;&lt; &quot;封号斗罗&quot;;if (90 &lt;= n &amp;&amp; n &lt;= 100) cout &lt;&lt; &quot;海神&quot;;cout &lt;&lt; endl;&#125;int main() &#123;int n, a[101] = &#123;0&#125;;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; a[i];judge(a[i]);&#125;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/24/LG-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E9%AD%82%E7%B3%BB%E8%BE%A8%E8%AE%A4-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/24/LG-斗罗大陆之魂系辨认-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 王者荣耀 2 - 题解</title>
      <link href="/2021/07/24/LG-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-2-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/24/LG-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-2-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>这道题目应使用算法库函数 <s>当然自己手写也行</s> 和类型转换。</p><h3 id="代码分析">代码分析</h3><p>先输入 $x$ 和 $y$，直接输出 $\lceil x \div y \rceil$。</p><p><strong>注意本题数据范围 $10^{18}$，卡 long long。</strong></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;long long a, b;cin &gt;&gt; a &gt;&gt; b;cout &lt;&lt; ceil((double)a / (double)b) &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/24/LG-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-2-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/24/LG-王者荣耀-2-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - gcd 与 lcm - 题解</title>
      <link href="/2021/07/23/LG-gcd-%E4%B8%8E-lcm-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/23/LG-gcd-%E4%B8%8E-lcm-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>这是一道典型的数论题。</p><p>题目要求我们求某两个数的<strong>最大公约数</strong>或<strong>最小公倍数</strong>。</p><h3 id="代码分析">代码分析</h3><p>输入字符串 $mode$，然后输入两个正整数 $a$ 和 $b$。</p><p>判断 $mode$ 是否为 <code>gcd</code> 或 <code>lcm</code>。</p><p>写一个求最大公约数的函数。</p><p>（算法库里有 int 的：<code>__gcd</code>，不过本题卡 long long）</p><p><strong>注意本题数据范围 $10^{10}$，卡 long long</strong></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;long long gcd(long long a, long long b) &#123;if (a % b == 0) return b;else return gcd(b, a % b);&#125;long long lcm(long long a, long long b) &#123;return a * b / gcd(a, b);&#125;int main() &#123;long long T, a, b;string mode;cin &gt;&gt; T;while (T--) &#123;cin &gt;&gt; mode &gt;&gt; a &gt;&gt; b;if (mode == &quot;gcd&quot;) &#123;cout &lt;&lt; gcd(a, b) &lt;&lt; endl;&#125; else &#123;cout &lt;&lt; lcm(a, b) &lt;&lt; endl;&#125;&#125;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/23/LG-gcd-%E4%B8%8E-lcm-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/23/LG-gcd-与-lcm-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 微信（2） - 题解</title>
      <link href="/2021/07/22/LG-%E5%BE%AE%E4%BF%A1%EF%BC%882%EF%BC%89-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/22/LG-%E5%BE%AE%E4%BF%A1%EF%BC%882%EF%BC%89-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>这是一道典型的 C++ <strong>结构体</strong>排序题。</p><p>要点：题目要求<strong>从大到小</strong>排序，$a$ 一样的按 $name_0$（字符串首） 的 ASCII 码<strong>从小到大</strong>排序，所以我们还要自己写 <code>cmp</code> 函数，来比较两结构体。</p><h3 id="代码分析">代码分析</h3><p>输入正整数 $n$，然后循环输入 $a_i$。</p><p>建议使用 <code>sort</code> 函数<s>偷懒</s>，写一个 <code>cmp</code>。</p><p><s>出题人 NB！！！不卡我们 long long 了</s></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;struct node &#123;string name;int a;&#125; wx[101];bool cmp(node a, node b) &#123;if (a.a == b.a) &#123;return a.name[0] &lt; b.name[0];&#125;return a.a &gt; b.a;&#125;int main() &#123;int n;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; wx[i].name &gt;&gt; wx[i].a;&#125;sort(wx, wx + n, cmp);for (int i = 0; i &lt; n; i++) &#123;cout &lt;&lt; wx[i].name &lt;&lt; endl;&#125;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/22/LG-%E5%BE%AE%E4%BF%A1%EF%BC%882%EF%BC%89-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/22/LG-微信（2）-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 微信（1） - 题解</title>
      <link href="/2021/07/22/LG-%E5%BE%AE%E4%BF%A1%EF%BC%881%EF%BC%89-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/22/LG-%E5%BE%AE%E4%BF%A1%EF%BC%881%EF%BC%89-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>这是一道典型的 C++ 排序题。</p><p>要点：题目要求<strong>从大到小</strong>排序，所以我们要自己写 <code>cmp</code> 函数，来判断升序。</p><h3 id="代码分析">代码分析</h3><p>输入正整数 $n$，然后循环输入 $a_i$。</p><p>建议使用 <code>sort</code> 函数<s>偷懒</s>，写一个 <code>cmp</code>。</p><p><strong>注意本题数据范围 $10^{18}$，卡 long long</strong></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;bool cmp(long long a, long long b) &#123;return a &gt; b;&#125;int main() &#123;int n;int a[1001] = &#123;0&#125;;cin &gt;&gt; n;for (int i = 0; i &lt; n; i++) &#123;cin &gt;&gt; a[i];&#125;sort(a, a + n, cmp);for (int i = 0; i &lt; n; i++) &#123;cout &lt;&lt; a[i] &lt;&lt; &quot; &quot;;&#125;cout &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/22/LG-%E5%BE%AE%E4%BF%A1%EF%BC%881%EF%BC%89-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/22/LG-微信（1）-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - 王者荣耀 - 题解</title>
      <link href="/2021/07/22/LG-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/22/LG-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="题目解析">题目解析</h3><p>这是一道典型的 C++ 语言入门题。</p><h3 id="代码分析">代码分析</h3><p>直接输入正整数 $n$ 再输出 $n \times 10$。</p><p>或者输入字符串 $n$ 再输出 $n + ‘0’$。</p><p><strong>注意本题数据范围 $10^{18}$，卡 long long（使用方法 2 可无视）</strong></p><h3 id="代码">代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;long long x;cin &gt;&gt; x;cout &lt;&lt; x * 10 &lt;&lt; endl;return 0;&#125;</code></pre><p>$$END$$</p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/07/22/LG-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-%E9%A2%98%E8%A7%A3/">https://ren-yc.github.io/2021/07/22/LG-王者荣耀-题解/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/06/03/hello-world/"/>
      <url>/2021/06/03/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><blockquote><p>本文作者：ren-yc<br>本文链接： <a href="https://ren-yc.github.io/2021/06/03/hello-world/">https://ren-yc.github.io/2021/06/03/hello-world/</a><br>版权声明：本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img src="https://ren-yc.github.io/assets/img/by-nc-sa4.0.png" alt="CC-BY-NC-SA"></a> 许可协议。转载请注明出处！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
