<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>LG - T191905 MC 之吃牛肉 - 题解</title>
      <link href="/2021/08/06/LG-T191905-MC-%E4%B9%8B%E5%90%83%E7%89%9B%E8%82%89-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/06/LG-T191905-MC-%E4%B9%8B%E5%90%83%E7%89%9B%E8%82%89-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="103db8b55760b9398141878aa400cf22ce3907daec12fc1e0545f888e339f2ea">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c1063b9248d7b001af0175f55219c6208f3573cacc4b9ea6a1881851fa3163028a7c711e647d224f2ef01b42de90b445c15995ae4b3bb490bbfe7cad4bd239542e46f5dfa02b0d3ae60545109a8558aa09b26cf6a442835bee97872823b86c7ff6234322a6ac5e80701bd9c7c574cec849e26906353802f7ec3bc6c722c5587694959134836d5ad38ca9f6403705db322b7df4690060bfe4da5b7a55efe6543b836a4c91ea4e4e65e5955402ee2ade50ee3ee2e0570e6bf3b4ed4dc076d81b2e3dca85c71fa56cdbea29774f2490bd38cc660cd49f1c68c0bf361fd1cd78f369af1e58b80fe086b3681c0c1951509fc10253cdb2cefeba051099f2da797a13be5200937616d3c02d83a5734cec05943d84d62a8f3944395ecea35a89021c78654ad1fb7ff76ada682cf3df35331db0c3b02a988d60d043c574e305c99318acc84997dc4986e7d95ba6564aca28ed192ca0f9144f1d101f94afca0306e7354e9c7c022bb0f0dc1adfa7f5ff21b9201c0ed3ea0c51646c34ee4b251daef29805fd1cd15ca2902131a945d331b2bc33ed77d99fe7ed9bad497a7f16bb093358a204d24d0dbad575ea039362a337b8217e8ebd7a1ea06281e1c50a4519799a50c12df125ed794f2ec0c29f0bcfb316f9f2e8d2f206de330f12729f1a4c6ae6b495cc1906c608ba8c9e171dae5e26a21ff1ff60e67a2ee4a7c299bd79abcd6f4640e80f3f9b0cddbd457eb1cd67d7a865dba51d9044af441d19e78d09a10a3936021f3a529102464e2861eb201ec333a23ce43239c09043f7833cfbff058ad46eedd5e2c9f9831d0bf419d6cc1dd4d5b747815a7c10e94863a5450ab0d8345742c84b966546435a8dc5bbf502fb343bb260ccec9b671a8a887f089a6a17eecdda3d9175d3cdc33ba71603ab45951d405feb2744f0873c7ef7e0681574836b483c6f5abef641c2fe2223d0a204f51924a623d076a0796f2a86d94412981e7b7396000389b98b0f31423e71e7eb871ad1b127cc716c35be6dfdab2f68ac519cb8bae37f5da57221dd835c8ef2fd2da5dceef20067eaaf416924da8d61a9673b5b7e91829500732eae1d40bbd7d87db92a093ee26f289a3bc9554888c477032d7371ce3fdddc0a6bd3d5fbd956e355a72c9ca120936d94040eb6d7a4335c2173c587b6f91204e6d9b935eb8bb813b6d1328ea3b937a14f190b789778f15c9d2f24b6e73e87d653ab6684fcbbea64d207c7398b708a38546b6dc06a803b19998baae307b9ee792bab199665cdf43fa3db5e59968416d6bdf230e5825a41c682bb25d830c5c393e4985ce88dc15331c16699b16033b39a4791070452d07f2ac2008d4ea0eed7040514faf747dcd1ebbd4f93261feeb46706beaec4d78045f0b498c0a961bf507387025b65b111a5a761cb818edfe105d94c3aa645fa1e82d804ce5f1cb113f36f9ac79d992ea82e8d1d61c990b5bafd9f2a89065caeafcf24e9e9e72164e063aec7fdf86b0572af8319cf64149464851254287a05edef2c260497fd8509a29d36ed23094e7e26c3d3f47135122d40358a894c11ce22ffd68fa5257e24363d82e4d122f75033d5a03961ec46691db74fe8c4d70a9e415387f318665a46ba313e4ae9108bee65c74d55aa768685738eafe4a4c16c24e6ad113b15f3ecee36f1731af976a0ca51514b25af3b133ba5016999d46b27fb1acdf0983799f988a4e7cb9a92c02b12baf08192aed94576aa51a96fa0cc94c820d0e01bed2da1ed5d15905141b746c61eb9990c9a6ecba4be4e841a0f898433829933847bbb611b651ac43cc969798cb2527523382d008ce2b236588419ed9293a47f6f66a17667faf99605cda5fec4ec480315af3d4dc709716f22b70b84fd086a23e3c26f9b2ebe658b1743cd06c4b4c9d190fd79bc0be4f9f5ddf5d83b35893175919b5d155e00913702cfad823f5436243eaf62577694b6fb6240184f8cfc534ad54b54c4e62c8fc8ef1baf1ae19904b2a1c24064a4c26bd3256454504ffa987b57f7a595182adb9c6b11c21ea12a36ccb0f5c84ef441c1d5a6453f9b0320e2897e54ff0eeb7af6fa3dda18889f1898bb97705c746911df37de682b8901eb0fe2903afb976402de446be6fb03f117df325ab1f9d5522a86d5e30943f223881f88d326e95ac741b3073d88de4d6ec687c153e2b7179397b44fc5ff6d8794b47cb0d12bad84937790068ea1188287fb60c1bbdf40506e34017d6180a78c6194ae8f530f14ba4baffe4c6923fda70cbe68d13caec01d9628bb8723a6d7b90b0166be85fc3c84ea65f37e165c21f997230647ea0edde69f752678c9d268a81d6d6a348c84707641f08a978632630fecb2e7cb7ac24e3bf4486c7184f5a287ad10d26cbe21451283b52bb75101a80ad0b3ab8cd2e8397079e79a69f6cda83fad4c5d6f439652e74153fbf286d711f2f7a13be745d1cb6226cf6fbeac23c5381bc9e018f4899c0bceda78a4dc531bb3084689c3bf589753ec0475ac1527674bb9869f17d16b38b9008b483260d241ac95d0329dd3bdbaa7adf3d4d1313d5f48bc9f75d1527ca9d38aeeb7bdaa222355356bc21419344c5063b89686cedff7f69508055442585355293e26b5b18ee7b490578d254097a2ffea45f5dda2d39fd690e667740763fea9c8780cf94a953bce9b6309cb336ada3175c4cfb4bd2d947a0477b28bba4af1c658e3c56c5fd2405bbabd6c877c6aa74b16e551880b31bf067958862c929f05f8e2937f09c66ac1eab5061b3e37803b35fd928c224ae4ed17d783f643c34988b1e8eee3eda008042b1dc4a73a41987fb234ce2437888db28a98fcf218bfa50a81a0304cecbe2fff73b2c575d8a1369a033c2d706794fabf3b5016b6a6b40e6a30e8cef38198e84628dbd7f6d276840066368bed90facbca56aba4495aa2090bf407ebd47d671353ebf00a534356b6f1986cdd77f04fb12ac37067a2e2e845aaa596f53b0d34f7b1d8f214e14741ff38eacd09d72bc5af28ecc9cd5bd0ea4aa766174a94f383ddc613339e53833ed0fcf5ffea9431395839f02d138bb7e8dbea9ff4987a1047fa6bdd1806f01b295547edfa7afd6fd25c74da44c4e0a400d1746ecf74b952e5189825ef9dd29c4d6c5974e338b406d12dcd5697d67bc1a3bfd60a46df060638cf451a7875448ad7d62e0f15e623ee6697c4df20094549167e23ef1c247889687e02734f2bdfdab8dcfcdf5e845da4e3090731874a5a0e693ba002e95f91fc9834c4f0268902bb409e90ec1faeb7662289e6002dffc090cbdf809396d4bb16f60881a36eb8fdc4fcedd2211517e36dfb96cb093177bca411d933fee528e07d33545c958a48754ef0edbcacfe987e173eee9f0e4172e8d1a434f8beada62873637bd177b772048787d741956dc142205d0551a735961eb112ac5c864d9d69292aa2d0d5fcb3fc9cd6c88566d41f31aa4616c62dfcb4042edb64801bf1c65c2aebab23c2dc73912b0ca7b95fa0f90f6954c5a3b983b61f766b9861e455e741ad38c40a876a36043ee1c2565117965553008b74403134d5076ffae4b95ed6f48bb4563f440b5316e147c521dd26503a471bb7636873b3788fb1e9e72ef39a72a70d4c4aa2f78ba2ae1493827fe36d2360e0713e5f913e102c7c2d80f2d34447786f2459745b1a6167ad07f9ad287cc95287b21e8cb5036fcd18a6cb90d93f776f70fff5492ed789a81583e4a1e7fc6ee6fec2717296974cb2ed23b4f7d7f87ac9e7038490931b2baaa19919eeaa8b9d43182e00389c7ac61d5eae3a0d80754dedb318e7b55db7e4ab8562eccc6600b550af29288a1bd82b1538b3f25eb3450f45a269f699ea05eb12863c0c780889151d3af6e58b2465e35c1c1dfa52fc595ed2d82053329d32c88a8eedfb7fb0512c563ea60e8e45974786bf6e71bdf92d84e33b50c20a7ca202e6a5626bf11d50461103d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T190532 公交车站 - 题解</title>
      <link href="/2021/08/06/LG-T190532-%E5%85%AC%E4%BA%A4%E8%BD%A6%E7%AB%99-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/06/LG-T190532-%E5%85%AC%E4%BA%A4%E8%BD%A6%E7%AB%99-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="1197735f59537f99d700fdac5056606118151cb2433b4b1e21af1a47c3f81527">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c1063b9248d7b001af0175f55219c6208f3573cacc4b9ea6a1881851fa3163028a7c711e647d224f2ef01b42de90b445c15995ae4b3bb490bbfe7cad4bd239542e46f5dfa02b0d3ae60545109a8558aa09b26cf6a442835bee97872823b86c7ff6234322a6ac5e80701bd9c7c574cec849e26906353802f7ec3bc6c722c5587694959134836d5ad38ca9f6403705db322b7dff5093aeea4178d1d96f56ea4eb263d3df04f41881bb14ceb425955fd2ef4e444add67396cb26d43c47c6d6b0d98b6774258d663fa60e49c7e08e3c73bc12251010398d0ce89ba44408685267ba2412b0e21ac7b3c312183d3ecfd5718c08d70901fc74b395f68df3785278cd7bc4ee8be68f172f99204793f3e0db136da86fe3eff7c9ebe6ed65b8d2f659ef51772dd16a5b4997da9ff4594e050fe495e38b50165189706b019c66fc6393e8464e65b19f7350313154452d4a73a185e754d59a65aadbd23b32dd9df09c2487d000a20453145cc990bc7363108db6f470878d024aafeec998c0e7e3090c72314602c6bb19d3a12f29bb3df48d85dd2fb936a63a5def1908921da66459e45f04bea994079894dc569df463941cddd735316b28e7b5a3cc3c358862d8265a08729cf29b87bba628e9fbfc6ff4608320fbf41584886384e8e98808b24339fb509225f081f9e95af75cb6aec184ad39eeb8e466ef94388ee1a981bda469c8be189ad065b05245d51f77388341bea403651e7e6fb6ef41330cf2431be1c6cdd784b2565aa2fd97dc330b8a85b09af632cb90447d65d3e2167a43e10de62dc6b32369792318750929e7447d20dce34b1e5f94a63526810558fb332f476888410518df2ef885f3ee2f4ee7249cbcc550834f3b9ef79d1af1769673e58d31c1f4779cdcb1dc07f1ecb005bb36fc23616543cf61cee58e19348c81116497d3c813b9fff0a9622a1ae8d29b1b6c0bfb6c3a3c41f3432edc1073709e612001bbc3d1acced9ed4eea9222374e585d5ca0bf80f9bfa99dc24e1881dcef1452ee60466a90d71234472bb0be86143cab2790fc0333c8a0a7fda46cd5b0201811d902a95f40f0fd9d60947d136a9a2e04736e53f8584c4b1449b2d22ca6193414e02b86cf08f6e9b17b237301cb04db6ec03563f555969829e484fd5dc6e7c8803ec8a2a435b7f99a24dcc837d54627318de77c7427f583f14a0660743341ca651bd829e30acc975725f62cc7cbb10ae7aea9b0c7f0f7f477e175faa2bae0d9d0dc9bd3b8e09b572b1f13bdc00658392cd1d583a46d83a4b5a414037aced057e3b7a33f1bd1263298b8d00b22563e903b8bad9f7a811ef6bd9ef244da03b274f07295dad4f8be00d9024df2bca9a29d9b8e85f4a9212c53d77942cbbb1a8f2f1a79ff69a8b14dddb7ec62b64966a7b5c96a96cc3eebea4741fadc2aaebe8f410cba1c326085bda376df81b81e42e602bc2566b3613a3cf5fdb789e60f9711d0555c6892f929a886c6d20f8c679781b9a9226f1bfa12a4e45846a780575b2ce3a1e5ac4df1c0d57ae1880eb24e920b200e047903338c102dfd4f01e000f145f466b6ff2084f6586a5fb4c48d6806cdb9224c90643b7d07bdb0b61d8bd725613b9ce25587b6d7e8fe26c16e44580361430c71859cb48c82987f5f6842ab2ee350ebc8c31747a8a5e4934d683e382c409cd21c6b62522575e609544bd06b81337a2421306a86a9a8c813fb72baef7f58a66a236c467a19e352fa05b54f253bdae3091bc3a0288b442e0d9d75da89d36caeef0fb929d2b50f0bca081b57c135e9aea1c0bdaf2614bb79700815c10982dd6e706b5f70a8c701f29b5511a31a24053068443faa3418e8e7ed8d1d51f5fc24d30c8a5bf2327425489b82c88f26f9dad4c6ecad353f10627902c51f661eaf331ede45c31da79bcc0eafc245e0ec49c0a9ad62657bffeb7278f3ba3fb10c17c8696a452dcc395e773f04328d4520e71cd6e01d39fc93c2b54f0a273051bc582764714226e15af58839105dbb2026117439385bb77b210dc99e7e546b070769d8ea7c3f7d8dfe6234ca11bd01589a6c71cf39455b3dc5e7d9de6f9e9ae43681ba69992448e6ff6309cd27a2efbc90e61ad0603d79fbb771e9eb212125e45f21be38fff1ca60058f7dd19a5c6a4950bb0b8abd92594c2236689cd9b31f5268aae668fa60c75fb6023f4d287ff61663b1822b64d9b06f2dd826ae136593ee17512b04674459a8ef0252c8480933d7dfb58b2429f06ca5ef682e5e92e71abe070707f081114ccbcbcb5e2bcd84dde36df29370e92ddbcebee2e9cac5e5ee48f5a0ce6d1ffe37fef60b0a68f886fcc10435a25e45000a7b315a9f147a33605bb4ce67754565905383cf5f9a41a69efd913d11c2e7f65db60d4ccd04df09793fca284018dbbb56a452f47fb8460e2bdd1d20e8a3c92a986425cb879c3c559f1f3e68fc3840b3521ae9add929c3e898a09b7f1e6732debbab7948cfdeef9fa06c87c5ca5939a2a883e84d9e3d8260a42fa69d8451cb7f9c4e19a0f6ffbe82a4d978948df2af3d4a2d2dbd8c1e6206aff0bdc50e4620e0203133e437a78bc8d85fa0fe4d598b83627fd11e337e073401414621d0cb1311f635f405d084bbd7a5de41bf84444e409a0eaa5994227f94f0a5e50cfaa5199026144cdb9468d7aa9c0dbb4ad998d9c9104c5e858678582cbf491e4cb59899dfc23997e4e7f20ce3a5f3b2e9f3bbe23cd6d1d051fda6e5c5332442c50f6d3839d5368440a508bf71b96fb3a3a6623e904c1e7668efde09e60e6d80a26cda8c3ad79daa62d0a51be4e44af85531c180986c6549d242b3dc4e3653a5cd641dc0f68cc685215e843a9c13981946078859d83fdf362a9fc94814efd303779e996286507047063d3e7b7d44ceca557a95ecc63c5cc876f1172d21e4c5e9fcde66c9440c4277774f661abadc9e3bd5228e3489ccf6cfd6dc283c3070abd6a374f7ccaa9b8ce9e01287226cb35eb173137d42c9d4916bb728a74c01088ed4650334c908d24fdf15b5b552d1bcb7dd1d005de690d2162d50587a1335cae7725028efdaf39fa8fa38f521bf59e4259d27ea8f065663d3f0e7e824f1c7e6f37f7d13ef662346a917e72df7884fcea7c169eec20d0f929024c36f46189533a8d5ec273e96788eb2784b41b402bbffc3ee191e6b17172bd8c3783fc826261329fe6cf1412460a6a8e53a69e7c6c6fd410ca080b67a904004cc25f7a0542ebd0dbd7c83b795b62da7cb5923bfdf4509aae0d27fe2e745c224af3055e492814278e25482636de805355b46d13feb3b20adcbef923997043f9e5bea3ae5094d514becf86a2150fe3df9a345e871c52cca3c48d2ab15e7ca8ac1209b1ea9bbb2c16fd2d0dcbda4562a76c6d3ee8d0d4013c5ceac488efd9e6b37d641cc57c40e5e6b01ab1465ddbe8b6fb011003e1cf84f03677eff4af12194d3957925c164c735d4c2016eb585870d2a0f9a356d43112ab69c6e38f528d7d0f7b25aef41c0566fd08c55a4cb3b59534d21c0111e31fa20d87ea23d05ca6a2adde2934fbab6973363e5bf5bb22c7d958e80f72e50b8081c471c7d7ca57e51f683a3c6ab5661257630eb2e63d311d49f48add05a183d8235b90dae16fbaa02cc97e67a01fe461a8b9aa9df0ac632b36dd0510aa5e5c7d5cca4c1744ff14b0e186f331f3b44f7d12fd7ce11f3617abcfba0dab7f3c0e0c7ac70fbf84ecb2846375ac8d41ba85154c478f9d475579e40c1b2cba123e63e081bb7f8e3b15304d903ab934ffffa8dd4ea72</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189807 Hands - 题解</title>
      <link href="/2021/08/05/LG-T189807-Hands-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/08/05/LG-T189807-Hands-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T189807">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这题看上去很难，但分析后就可以一个循环解决。</p><p>每次取牌如果有一个连续的大于 $0$ 的数列，那就全部取出，取到其中的某一个数等于 $0$。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>边输入边累加，记住当 $x - last &lt; 0$ 时，就不要累加。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;    int ans = 0, n, x, last;    cin &gt;&gt; n;    for (int i = 1; i &lt;= n; i++) &#123;        cin &gt;&gt; x;        ans += max(0, x - last);        last = x;    &#125;    cout &lt;&lt; ans &lt;&lt; endl;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/08/05/LG-T189807-Hands-题解/">https://ren-yc.github.io/2021/08/05/LG-T189807-Hands-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WFR - 如何使用 Warfarin</title>
      <link href="/2021/08/05/WFR-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Warfarin/"/>
      <url>/2021/08/05/WFR-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Warfarin/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="什么是-Warfarin"><a href="#什么是-Warfarin" class="headerlink" title="什么是 Warfarin"></a>什么是 Warfarin</h2><p>Warfarin 是一个由 C++ 编写而成的解释型语言。</p><h3 id="Warfarin-的特点"><a href="#Warfarin-的特点" class="headerlink" title="Warfarin 的特点"></a>Warfarin 的特点</h3><ul><li><p>变量，支持数字、字符串、布尔、数组（允许使用 <code>a[&quot;test&quot;]</code> 这样的语法）；</p></li><li><p>函数定义、调用与递归、高阶函数、<code>lambda</code> 表达式；</p></li><li><p>键盘与文件的 I/O 操作；</p></li><li><p><code>if for while</code> 语句；</p></li><li><p>大量内置函数，以及一部分操作系统 API（仅支持Windows）；</p></li><li><p>点语法操作，即 <code>a.test</code> 等价于 <code>a[&quot;test&quot;]</code>；</p></li><li><p>编译成特定格式的 <code>.ff0</code> 文件，支持 <code>import</code>；</p></li><li><p>支持伪代码和普通代码混写 （打开 <code>-p</code> 开关）；</p></li><li><p>支持反编译成 JavaScript（一部分内置函数不会给出对应的实现）；</p></li><li><p>支持 DLL 文件调用。</p></li></ul><p>具体信息请看<a href="https://www.luogu.com.cn/discuss/show/334473">这里</a></p><h2 id="如何使用-Warfarin"><a href="#如何使用-Warfarin" class="headerlink" title="如何使用 Warfarin"></a>如何使用 Warfarin</h2><p>Warfarin 最新版本：<strong>3.17</strong></p><h3 id="下载-amp-配置"><a href="#下载-amp-配置" class="headerlink" title="下载 &amp; 配置"></a>下载 &amp; 配置</h3><p>$1.$ <strong>下载</strong> Warfarin C++ 源文件，</p><p>$2.$ 使用 g++ 编译成 exe 文件，</p><p>$3.$ <strong>把 exe 文件加入环境变量</strong>（不会的请百度）。</p><h3 id="编译-amp-运行"><a href="#编译-amp-运行" class="headerlink" title="编译 &amp; 运行"></a>编译 &amp; 运行</h3><p>运行程序有 $2$ 种方法：</p><ul><li><p>直接运行 <code>Warfarin.exe</code></p></li><li><p>编译运行 <code>.wfr</code> 源文件（请看下文）</p></li></ul><p>Warfarin 的源文件扩展名一般为 <code>.wfr</code>，</p><p>使用 <code>Warfarin.exe</code> 编译时请在该文件夹下的命令行输入 <code>Warfarin 文件名 -cr/crj/crjp</code>，</p><p>此命令会编译出一个 <code>.ff0</code> 文件，相当于 C++ 的 <code>.exe</code> 文件，<del>但不能双击运行</del>，请<strong>不要删除</strong>。</p><p>关于 <code>cr/crj/crjp</code> $3$ 个编译参数请看<a href="https://www.luogu.com.cn/blog/Warfarin/ff0-faq">此处</a>。</p><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><a href="https://ren-yc.github.io/assets/ff0/Warfarin.zip">本站下载链接（自带 exe）</a></p><p><a href="https://github.com/WarfarinBloodanger/ff0-script">作者 GitHub 仓库</a></p><p><a href="https://raw.githubusercontent.com/WarfarinBloodanger/ff0-script/main/user.txt">英文帮助文档</a></p><p><a href="https://www.luogu.com.cn/discuss/show/334473">作者发布帖</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=ren-yc.vscode-warfarin">VSCode 插件</a></p><p>本文链接 <a href="https://ren-yc.github.io/2021/08/05/WFR-如何使用-Warfarin/">https://ren-yc.github.io/2021/08/05/WFR-如何使用-Warfarin/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Programming Languages </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Warfarin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T190529 买二送一 - 题解</title>
      <link href="/2021/07/31/LG-T190529-%E4%B9%B0%E4%BA%8C%E9%80%81%E4%B8%80-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/31/LG-T190529-%E4%B9%B0%E4%BA%8C%E9%80%81%E4%B8%80-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T190529">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><blockquote><p>凡是顾客购买两本书，就可以免费带走第三本书，只要免费书的价格不超过两本付费书各自的价格即可。</p></blockquote><p>可以使用排序来做。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>排序，建议偷懒使用 <code>sort</code> 函数，<strong>But</strong> 是降序排序，所以要写炒鸡简单的 <code>cmp()</code> 函数。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int n, a[100001], ans = 0;bool cmp(int x, int y) &#123;    return x &gt; y;&#125;int main() &#123;    cin &gt;&gt; n;    for (int i = 1; i &lt;= n; i++) &#123;        cin &gt;&gt; a[i];    &#125;    sort(a + 1, a + n + 1, cmp);    for (int i = 1; i &lt;= n; i += 3) &#123;        ans += a[i] + a[i + 1];    &#125;    cout &lt;&lt; ans &lt;&lt; endl;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/31/LG-T190529-买二送一-题解/">https://ren-yc.github.io/2021/07/31/LG-T190529-买二送一-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T190528 方舱医院 - 题解</title>
      <link href="/2021/07/31/LG-T190528-%E6%96%B9%E8%88%B1%E5%8C%BB%E9%99%A2-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/31/LG-T190528-%E6%96%B9%E8%88%B1%E5%8C%BB%E9%99%A2-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T190528">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这是炒鸡淼的小学一年级数学应用题（（（</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p><del>由于本题过于淼所以不分析。</del></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;    int a, b, c;    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;    cout &lt;&lt; (a / c) * (b / c) &lt;&lt; endl;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/31/LG-T190528-方舱医院-题解/">https://ren-yc.github.io/2021/07/31/LG-T190528-方舱医院-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189610 开关灯 - 题解</title>
      <link href="/2021/07/26/LG-T189610-%E5%BC%80%E5%85%B3%E7%81%AF-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/26/LG-T189610-%E5%BC%80%E5%85%B3%E7%81%AF-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请再试一次" data-whm="未知错误，请报告给博客管理员!">  <script id="hbeData" type="hbeData" data-hmacdigest="35532562762892239e28c420ff53dd8224a549ff4bd8b615f564d5acf3679ce6">33c7c2007436768271a01b49189558256fdf298294ab4f08cfc60e76edbeb3390f0005c364f656d0effabe5c0346fb2b739f810af1132a60725674fb66796a7f0d549c97dd05b1d113f55281bd8f455666a9716681681fb726ea4a1025dd8661049770aafd32739bf88cd1fff955bc45f44fd154cb4038b75555f79e8c1e8147c4b877230e060e439f0363de01f6fcdd98bd63a82b0af1b8ef88661616dfc7213ba4809af894ee169a9a14397b77ec3f4615f192a073f9df1dcfc1a869d3c4880b7057694951edc3ec8ddb45e48c1063b9248d7b001af0175f55219c6208f3573cacc4b9ea6a1881851fa3163028a7c711e647d224f2ef01b42de90b445c15995ae4b3bb490bbfe7cad4bd239542e46f5dfa02b0d3ae60545109a8558aa09b26cf6a442835bee97872823b86c7ff6234322a6ac5e80701bd9c7c574cec849e26906353802f7ec3bc6c722c5587694959134836d5ad38ca9f6403705db322b7dfef16202eb73f0613ec6f6a45c27351601f7c2791b2ba2571ac4b5eb8bac197637cc989911b641399e61fa372c093c40bc2866982172287f9b681207a9f87167d275200b814d9945adf4745495921d81299529e5fba3fab60fed88550bb05db5dc2552ba52639e5fb5f852e2ea351d76606d09d82502eab4b665c9d3a0a31c5f2b8280e55139867928d53c932e100159d7d577d99429d29654e16a9daf17d4b2ab56581223be4aa19ab0442dde353d206b836ebede392740915ef8121357631c1b39f367fa2e983330c0238c59c3e3422efad5f653941260d321621ef894f9e56601c644723f8fb2445b80903827c82c477723baeaa719edfecd5209d35abfc5b89919539e5c6b9e6c8528e800c9f49dc061f69438ff6a1e8b100e83b833c99a316d6c13213bc2055ff2ba0937c5a0b8b725d8920af34b5dad7229db0cdb92882d7d394285d64fe670cc75003ce02acadedcf62d0ebdc23e1c4c36d2524f93cca953726c98537edcfb23fa225940ae5b014af60397f6d11a7fb1658f223a395f7d87c8d5e5c4acb044e41145aa8adc056b80457f844ef96d810da5317b1185f60782f7ee9178b25ffa97779621b44badd5f7f68560d6905672f21821a2457c4ed5405f45a03eea3ef535a3e3308e6e9bfd962d4737e8a2a8ee3da79e1bcf3b8aa60c7b692b8e80f809acf3e1559b3c669eb88d4d80963e5259478c7a79c3b8f2af2f0b3a5b5253fc6fe40bb6a440446eb634d97073cc307258fc6fbd887327dd537c443a8b205ea66a1afe33bae62e7df4e8302bc74cbda55c2ba7b24492eb3395ef69b5eee6b218aa709f42fb655154ede8830c7ab9e1fd3102bd567b4af8e299bc1e71c81da20704e500ff68ed5c44740fbfaa71b62396bac8d4bb7a0160872bdad5a6d76754ccdcbec4589d83f6aea91c09d9e009df3f9032bb35b0ce6909e22f50577ec7a09c332878248f471f04476cb98922c35d48b6c7568c07cc6795bd4f53389d5b89f0e2070bcf59dc36d53b565db260713a4bfd7b0e43f5c9fdf4437cc6886bdc9835e74f677223dc6601db4622b4a7a65bced242e95e6fdcc0b1a76d787eef626e9581aaec02eecf25de77886ccb78a028011d575f510c5fb86037825717b37f639b15a1cbd1585e8ac7abed98daf751e566073cfc7b655c831bd8531bed63b2e42d10c01889e3b356ba000c957365496ea0e2a28cee9e991711e0c8f7e9275592f11c425f3ff2edb457cee1511cd0e505262668b4ff37c6dcbb1fe8a003eb4b2277877b088edba73f404dab5e1acf1ebc31f4d124dfc893cd0e545e66baef33994709ebb4de8188cadc113635e79959ff8da3f22612c3f6152fb59b6674eb67cfddbc2aaa3c59fb27b2a553a2cf59fbb09d2c0b4adddffa87f3c8910a84a0c29e282a5a676310d5e0d753e53c742a91d3b03e2fe894af30dd44c12007dea6f82684b14849917bd8523c9c397dd64114e74adb48ea6473fc68fafb3110dd153bba3b368bb4370c8aed290078aaeb99db95e8a4b30a08c9d39a427f6165c997935c815a2b4dc08e932a7c711335f0c74a11cd68304d4de59280b091be788e6be59e9499b3de202e87669c3aeaa41ce9bcf06b3c904e603cc023cbaa3c24a96f0908828536e10671a45169bc8e9a74218352ab88468fcdf19f4edd27dfc1b890d927f81a0a3e511db491e709778cf71c82912f5210decb5896f75f822cdc74e368181060677f70b1cf1f7ac84271c8e2528d17cb6faa51c9638d509508f590eb578b2b95a9fe0a1029ab6ca3782ea6bd407dcf055aafaa55e707b77a3fb8c53e22794959cc299dfae9736af03c14e66530e36289585da3e938ac1849a6fba8f46d60401c4548dc095d7f29c222d215b2c9233d39508aa0e859bdddc8d668554f218bc1f9887bdbb9c00da9be7f417db0decd18bb54111d78d97b4065585e18a0c75766ce325f19e2acecc957096b96b404819f884773be46acae9accf6ae5d51b61ce35e3c4178cdec0dc74ba26552bb69c10af24ed751d8a9d610aa22c1fa5208469ec3e552cb773c43116988d8ce1651b1203db2f25d20bac2407fcb2f482d8c0a64ef61aa8cb01a754c269c8a50548e311503932331110789792206c767b9c5c9081a5a8cff17a8737ebcf5d5cc7bfc0e915c339a221b9f848735689d811bc5eb0758d0b8f1eb3ac4caf70555a53d144506c88870c3c2830e9f0</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请点击此处输入密码，输入完请按 Enter 并刷新页面</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189243 古老的 A + B - 题解</title>
      <link href="/2021/07/26/LG-T189243-%E5%8F%A4%E8%80%81%E7%9A%84-A-B-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/26/LG-T189243-%E5%8F%A4%E8%80%81%E7%9A%84-A-B-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T189243">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p><del>This is the waterest problem I had ever seen.</del></p><p>好吧 A + B 最 water。</p><p>没啥好讲的，就一个循环。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>直接读入然后来个循环，注意输出格式。</p><p>时间复杂度 $O(c)$，空间复杂度 $O(1)$。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;    int a, b, c;    cin &gt;&gt; c;    for (int i = 0; i &lt;= c; i++) &#123;        a = i;        b = c - i;        cout &lt;&lt; a &lt;&lt; &quot;*&quot; &lt;&lt; b &lt;&lt; &quot;=&quot; &lt;&lt; a * b &lt;&lt; endl;    &#125;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/26/LG-T189243-古老的-A-B-题解/">https://ren-yc.github.io/2021/07/26/LG-T189243-古老的-A-B-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189069 排序 - 题解</title>
      <link href="/2021/07/26/LG-T189069-%E6%8E%92%E5%BA%8F-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/26/LG-T189069-%E6%8E%92%E5%BA%8F-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T189069">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这是一道炒鸡淼的 C++ <code>if</code> 语句题（?）。</p><p>太淼了就不解释了</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>全读入完来个函数判断就行了。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int a[6], b[6], cnt1, cnt2, tot1, tot2;int mysort() &#123;    if (cnt1 &gt; cnt2) &#123;        return 1;    &#125; else if (cnt1 == cnt2) &#123;        if (tot1 &gt; tot2) &#123;            return 1;        &#125; else if (tot1 &lt; tot2) &#123;            return 2;        &#125; else &#123;            return 0;        &#125;    &#125; else &#123;        return 2;    &#125;&#125;int main() &#123;    for (int i = 0; i &lt; 6; i++) &#123;        cin &gt;&gt; a[i];        cnt1 += a[i];        if (a[i] == 50) tot1++;    &#125;    for (int i = 0; i &lt; 6; i++) &#123;        cin &gt;&gt; b[i];        cnt2 += b[i];        if (b[i] == 50) tot2++;    &#125;    cout &lt;&lt; mysort() &lt;&lt; endl;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/26/LG-T189069-排序-题解/">https://ren-yc.github.io/2021/07/26/LG-T189069-排序-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189422 生小虫子 - 题解</title>
      <link href="/2021/07/25/LG-T189422-%E7%94%9F%E5%B0%8F%E8%99%AB%E5%AD%90-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-T189422-%E7%94%9F%E5%B0%8F%E8%99%AB%E5%AD%90-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T189422">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这道题其实就在检验 <code>for()</code> 循环的应用。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>读入一切信息后，</p><p>写一个循环 $z$ 次的 <code>for</code> 循环，如果满足条件 <code>k == x</code>，小虫子数量增加，反之 <code>s1 = 0</code>。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;    int k = 0, x, y, z;    cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;    int s1 = 0, s2 = 0, cc = 1, cl = 0;    for (int i = 1; i &lt;= z; i++) &#123;        k++;        cl += cc;        cc = s2;        s2 = s1;        if (k == x) &#123;            s1 = cl * y;            k = 0;        &#125; else &#123;            s1 = 0;        &#125;    &#125;    cout &lt;&lt; cc + cl &lt;&lt; endl;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/25/LG-T189422-生小虫子-题解/">https://ren-yc.github.io/2021/07/25/LG-T189422-生小虫子-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189358 合成大西瓜 - 题解</title>
      <link href="/2021/07/25/LG-T189358-%E5%90%88%E6%88%90%E5%A4%A7%E8%A5%BF%E7%93%9C-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-T189358-%E5%90%88%E6%88%90%E5%A4%A7%E8%A5%BF%E7%93%9C-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T189358">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这是一道 C++ 枚举题，只要遍历 $b$ 数组就 $ok$ 了。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>输入正整数 $n$，然后循环输入 $x$，$b_x = b_x + 1$;</p><p>遍历 $b$ 数组。</p><p>倒着遍历，一旦发现有符合条件的数，直接输出并结束程序。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int n, b[201];int main() &#123;    int x;    cin &gt;&gt; n;    for (int i = 0; i &lt; n; i++) &#123;        cin &gt;&gt; x;        b[x]++;    &#125;    for (int i = 0; i &lt; n; i++) &#123;        b[i + 1] += b[i] / 2;    &#125;    for (int i = n - 1; i &gt;= 0; i--) &#123;        if (b[i] != 0) &#123;            cout &lt;&lt; i + 1 &lt;&lt; endl;            break;        &#125;    &#125;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/25/LG-T189358-合成大西瓜-题解/">https://ren-yc.github.io/2021/07/25/LG-T189358-合成大西瓜-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189355 救援争先 - 题解</title>
      <link href="/2021/07/25/LG-T189355-%E6%95%91%E6%8F%B4%E4%BA%89%E5%85%88-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-T189355-%E6%95%91%E6%8F%B4%E4%BA%89%E5%85%88-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T189355">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这是一道炒鸡不淼的 C++ 结构体排序题，我卡 <code>cmp</code> 了好久。</p><p>就俩循环读入 &amp; 输出，<code>sort()</code>，还有<strong>万恶</strong>的 <code>cmp</code>。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>输入正整数 $n$，然后循环输入 $a_i . sh, a_i . sm, a_i . dh, a_i . dm$;</p><p>使用 <code>sort()</code> 结构体排序;</p><p>循环输出排序后的 $a_i$。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;struct Node &#123;    int sh, sm, st, dh, dm, et, id;&#125; a[1001];bool cmp(Node a, Node b) &#123;    return a.et &lt; b.et || a.et == b.et &amp;&amp; a.st &lt; b.st || a.et == b.et &amp;&amp; a.st == b.st &amp;&amp; a.id &lt; b.id;&#125;int main() &#123;    int n;    cin &gt;&gt; n;    for (int i = 0; i &lt; n; i++) &#123;        scanf(&quot;%d:%d %d:%d&quot;, &amp;a[i].sh, &amp;a[i].sm, &amp;a[i].dh, &amp;a[i].dm);        a[i].st = a[i].sh * 60 + a[i].sm;        a[i].et = a[i].st + a[i].dh * 60 + a[i].dm;        a[i].id = i + 1;    &#125;    sort(a, a + n, cmp);    for (int i = 0; i &lt; n; i++) &#123;        cout &lt;&lt; a[i].id &lt;&lt; endl;    &#125;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/25/LG-T189355-救援争先-题解/">https://ren-yc.github.io/2021/07/25/LG-T189355-救援争先-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T189354 斗罗大陆之武魂融合技 - 题解</title>
      <link href="/2021/07/25/LG-T189354-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E6%AD%A6%E9%AD%82%E8%9E%8D%E5%90%88%E6%8A%80-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/25/LG-T189354-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E6%AD%A6%E9%AD%82%E8%9E%8D%E5%90%88%E6%8A%80-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T189354">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这是一道炒鸡淼的 C++ 模拟题，也不卡 <code>long long</code>。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>输入正整数 $n$，然后循环输入 $x$ 和 $y$。</p><p><strong>一边输入一边计算，速度快</strong></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;    int n, x, y, z;    cin &gt;&gt; n;    for (int i = 0; i &lt; n; i++) &#123;        cin &gt;&gt; x &gt;&gt; y;        z = (x + y) * 2;        cout &lt;&lt; z &lt;&lt; endl;    &#125;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/25/LG-T189354-斗罗大陆之武魂融合技-题解/">https://ren-yc.github.io/2021/07/25/LG-T189354-斗罗大陆之武魂融合技-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188708 前 n 个偶数位回文数之和 - 题解</title>
      <link href="/2021/07/24/LG-T188708-%E5%89%8D-n-%E4%B8%AA%E5%81%B6%E6%95%B0%E4%BD%8D%E5%9B%9E%E6%96%87%E6%95%B0%E4%B9%8B%E5%92%8C-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/24/LG-T188708-%E5%89%8D-n-%E4%B8%AA%E5%81%B6%E6%95%B0%E4%BD%8D%E5%9B%9E%E6%96%87%E6%95%B0%E4%B9%8B%E5%92%8C-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T188708">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p><del>这道题目就不淼了，变成沝了。</del></p><p>写几个函数就不行了。</p><p><del>真 简 单</del></p><p><del>250lht：呜呜呜这是比赛赛题，我保龄。</del></p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>输入 $n$，写个循环判断从 $1$ 起的每一个数，如果满足函数 <code>weishu</code> 和函数 <code>huiwen</code>，则加到计数器。</p><p>这时有人就会问了，<code>huiwen</code> 函数中的 <code>_itoa_s()</code> 是神马东西，请看<a href="https://blog.csdn.net/smcrystal/article/details/71191335?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.base&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.base">这里</a>。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;bool huiwen(int g) &#123;    int i, j;    char b[1001];    _itoa_s(g, b, 10);    for (int i = 0, j = strlen(b) - 1; i &lt; j; i++, j--) &#123;        if (b[i] != b[j]) return false;    &#125;    if (i == j) return false;    return true;&#125;bool weishu(int x) &#123;    int cnt = 0;    while (x != 0) &#123;        x /= 10;        cnt++;    &#125;    return cnt % 2 == 0;&#125;int main() &#123;    long long n, i = 1, sum = 0;    cin &gt;&gt; n;    while (n != 0) &#123;        if (weishu(i) &amp;&amp; huiwen(i)) &#123;            n--;            sum += i;        &#125;        i++;    &#125;    cout &lt;&lt; sum &lt;&lt; endl;    return 0;&#125;</code></pre><p>以上代码交到洛谷上会 <strong><a href="https://www.luogu.com.cn/record/54096300">CE</a></strong>，你谷居然无法使用 <code>stdlib.h</code> 的 <code>_itoa_s()</code> ???</p><p><strong>偷懒失败</strong>，只好自己写转换函数。</p><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;void int_to_string(char s[], int m) &#123;    int i = 0, k, n;    char temp;    if (m &lt; 0) &#123;        s[i] = &#39;-&#39;;        m = -m;        i++;    &#125;    while (m &gt; 0) &#123;        n = m % 10;        m /= 10;        s[i] = n + &#39;0&#39;;        i++;    &#125;    s[i] = &#39;\0&#39;;    if (s[0] == &#39;-&#39;) k = 1;    else k = 0;    for (int j = k; j &lt; i / 2; j++) &#123;        temp = s[j];        s[j] = s[i - j - 1 + k];        s[i - j - 1 + k] = temp;    &#125;&#125;bool huiwen(int g) &#123;    int i, j;    char b[1001];    int_to_string(b, g);    for (int i = 0, j = strlen(b) - 1; i &lt; j; i++, j--) &#123;        if (b[i] != b[j]) return false;    &#125;    if (i == j) return false;    return true;&#125;bool weishu(int x) &#123;    int cnt = 0;    while (x != 0) &#123;        x /= 10;        cnt++;    &#125;    return cnt % 2 == 0;&#125;int main() &#123;    long long n, i = 1, sum = 0;    cin &gt;&gt; n;    while (n != 0) &#123;        if (weishu(i) &amp;&amp; huiwen(i)) &#123;            n--;            sum += i;        &#125;        i++;    &#125;    cout &lt;&lt; sum &lt;&lt; endl;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/24/LG-T188708-前-n-个偶数位回文数之和-题解/">https://ren-yc.github.io/2021/07/24/LG-T188708-前-n-个偶数位回文数之和-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188706 斗罗大陆之魂系辨认 - 题解</title>
      <link href="/2021/07/24/LG-T188706-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E9%AD%82%E7%B3%BB%E8%BE%A8%E8%AE%A4-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/24/LG-T188706-%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E4%B9%8B%E9%AD%82%E7%B3%BB%E8%BE%A8%E8%AE%A4-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T188706">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>@250lht 这道题目太淼了！</p><p>不多废话，这道题直接写一连串的 <code>if</code> 语句就行了。</p><blockquote><p><strong>P.S.由于 Windows 操作系统终端使用 GB2312，所以无法正确显示中文，但这不会影响洛谷评测结果</strong></p></blockquote><p>审题人真的良心，写了这个，不说的话我还以为我代码出 BUG 了呢。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>输入 $n$，循环读入 $a_i$，尽量<strong>一边读入一边输出</strong>，<strong>速度快</strong>。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;void judge(int n) &#123;    if (1 &lt;= n &amp;&amp; n &lt;= 4) cout &lt;&lt; &quot;魂土&quot;;    if (5 &lt;= n &amp;&amp; n &lt;= 14) cout &lt;&lt; &quot;魂师&quot;;    if (15 &lt;= n &amp;&amp; n &lt;= 34) cout &lt;&lt; &quot;大魂师&quot;;    if (35 &lt;= n &amp;&amp; n &lt;= 39) cout &lt;&lt; &quot;魂王&quot;;    if (40 &lt;= n &amp;&amp; n &lt;= 49) cout &lt;&lt; &quot;魂宗&quot;;    if (50 &lt;= n &amp;&amp; n &lt;= 54) cout &lt;&lt; &quot;魂尊&quot;;    if (55 &lt;= n &amp;&amp; n &lt;= 59) cout &lt;&lt; &quot;魂帝&quot;;    if (60 &lt;= n &amp;&amp; n &lt;= 69) cout &lt;&lt; &quot;赤炎斗罗&quot;;    if (70 &lt;= n &amp;&amp; n &lt;= 79) cout &lt;&lt; &quot;巅峰斗罗&quot;;    if (80 &lt;= n &amp;&amp; n &lt;= 89) cout &lt;&lt; &quot;封号斗罗&quot;;    if (90 &lt;= n &amp;&amp; n &lt;= 100) cout &lt;&lt; &quot;海神&quot;;    cout &lt;&lt; endl;&#125;int main() &#123;    int n, a[101] = &#123;0&#125;;    cin &gt;&gt; n;    for (int i = 0; i &lt; n; i++) &#123;        cin &gt;&gt; a[i];        judge(a[i]);    &#125;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/24/LG-T188706-斗罗大陆之魂系辨认-题解/">https://ren-yc.github.io/2021/07/24/LG-T188706-斗罗大陆之魂系辨认-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188702 王者荣耀 2 - 题解</title>
      <link href="/2021/07/24/LG-T188702-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-2-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/24/LG-T188702-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-2-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T188702">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这道题目应使用算法库函数 <del>当然自己手写也行</del> 和类型转换。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>先输入 $x$ 和 $y$，直接输出 $\lceil x \div y \rceil$。</p><p><strong>注意本题数据范围 $10^{18}$，卡 long long。</strong></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;    long long a, b;    cin &gt;&gt; a &gt;&gt; b;    cout &lt;&lt; ceil((double)a / (double)b) &lt;&lt; endl;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/24/LG-T188702-王者荣耀-2-题解/">https://ren-yc.github.io/2021/07/24/LG-T188702-王者荣耀-2-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188712 - gcd 与 lcm - 题解</title>
      <link href="/2021/07/23/LG-T188712-gcd-%E4%B8%8E-lcm-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/23/LG-T188712-gcd-%E4%B8%8E-lcm-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T188712">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这是一道典型的数论题。</p><p>题目要求我们求某两个数的<strong>最大公约数</strong>或<strong>最小公倍数</strong>。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>输入字符串 $mode$，然后输入两个正整数 $a$ 和 $b$。</p><p>判断 $mode$ 是否为 <code>gcd</code> 或 <code>lcm</code>。</p><p>写一个求最大公约数的函数。</p><p>（算法库里有 int 的：<code>__gcd</code>，不过本题卡 long long）</p><p><strong>注意本题数据范围 $10^{10}$，卡 long long</strong></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;long long gcd(long long a, long long b) &#123;    if (a % b == 0) return b;    else return gcd(b, a % b);&#125;long long lcm(long long a, long long b) &#123;    return a * b / gcd(a, b);&#125;int main() &#123;    long long T, a, b;    string mode;    cin &gt;&gt; T;    while (T--) &#123;        cin &gt;&gt; mode &gt;&gt; a &gt;&gt; b;        if (mode == &quot;gcd&quot;) &#123;            cout &lt;&lt; gcd(a, b) &lt;&lt; endl;        &#125; else &#123;            cout &lt;&lt; lcm(a, b) &lt;&lt; endl;        &#125;    &#125;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/23/LG-T188712-gcd-与-lcm-题解/">https://ren-yc.github.io/2021/07/23/LG-T188712-gcd-与-lcm-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188700 微信（2） - 题解</title>
      <link href="/2021/07/22/LG-T188700-%E5%BE%AE%E4%BF%A1%EF%BC%882%EF%BC%89-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/22/LG-T188700-%E5%BE%AE%E4%BF%A1%EF%BC%882%EF%BC%89-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T188700">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这是一道典型的 C++ <strong>结构体</strong>排序题。</p><p>要点：题目要求<strong>从大到小</strong>排序，$a$ 一样的按 $name_0$（字符串首） 的 ASCII 码<strong>从小到大</strong>排序，所以我们还要自己写 <code>cmp</code> 函数，来比较两结构体。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>输入正整数 $n$，然后循环输入 $a_i$。</p><p>建议使用 <code>sort</code> 函数<del>偷懒</del>，写一个 <code>cmp</code>。</p><p><del>出题人 NB！！！不卡我们 long long 了</del></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;struct node &#123;    string name;    int a;&#125; wx[101];bool cmp(node a, node b) &#123;    if (a.a == b.a) &#123;        return a.name[0] &lt; b.name[0];    &#125;    return a.a &gt; b.a;&#125;int main() &#123;    int n;    cin &gt;&gt; n;    for (int i = 0; i &lt; n; i++) &#123;        cin &gt;&gt; wx[i].name &gt;&gt; wx[i].a;    &#125;    sort(wx, wx + n, cmp);    for (int i = 0; i &lt; n; i++) &#123;        cout &lt;&lt; wx[i].name &lt;&lt; endl;    &#125;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/22/LG-T188700-微信（2）-题解/">https://ren-yc.github.io/2021/07/22/LG-T188700-微信（2）-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T188699 微信（1） - 题解</title>
      <link href="/2021/07/22/LG-T188699-%E5%BE%AE%E4%BF%A1%EF%BC%881%EF%BC%89-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/22/LG-T188699-%E5%BE%AE%E4%BF%A1%EF%BC%881%EF%BC%89-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T188699">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这是一道典型的 C++ 排序题。</p><p>要点：题目要求<strong>从大到小</strong>排序，所以我们要自己写 <code>cmp</code> 函数，来判断升序。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>输入正整数 $n$，然后循环输入 $a_i$。</p><p>建议使用 <code>sort</code> 函数<del>偷懒</del>，写一个 <code>cmp</code>。</p><p><strong>注意本题数据范围 $10^{18}$，卡 long long</strong></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;bool cmp(long long a, long long b) &#123;    return a &gt; b;&#125;int main() &#123;    int n;    int a[1001] = &#123;0&#125;;    cin &gt;&gt; n;    for (int i = 0; i &lt; n; i++) &#123;        cin &gt;&gt; a[i];    &#125;    sort(a, a + n, cmp);    for (int i = 0; i &lt; n; i++) &#123;        cout &lt;&lt; a[i] &lt;&lt; &quot; &quot;;    &#125;    cout &lt;&lt; endl;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/22/LG-T188699-微信（1）-题解/">https://ren-yc.github.io/2021/07/22/LG-T188699-微信（1）-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LG - T190576 王者荣耀 - 题解</title>
      <link href="/2021/07/22/LG-T190576-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/07/22/LG-T190576-%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="洛谷题目地址"><a href="#洛谷题目地址" class="headerlink" title="洛谷题目地址"></a><a href="https://www.luogu.com.cn/problem/T190576">洛谷题目地址</a></h4><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>这是一道典型的 C++ 语言入门题。</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>直接输入正整数 $n$ 再输出 $n \times 10$。</p><p>或者输入字符串 $n$ 再输出 $n + ‘0’$。</p><p><strong>注意本题数据范围 $10^{18}$，卡 long long（使用方法 2 可无视）</strong></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p class="code-caption" data-lang="cpp" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-cpp">#include &lt;bits/stdc++.h&gt;using namespace std;int main() &#123;    long long x;    cin &gt;&gt; x;    cout &lt;&lt; x * 10 &lt;&lt; endl;    return 0;&#125;</code></pre><script type="math/tex; mode=display">END</script><p>本文链接 <a href="https://ren-yc.github.io/2021/07/22/LG-T190576-王者荣耀-题解/">https://ren-yc.github.io/2021/07/22/LG-T190576-王者荣耀-题解/</a> 文章转载需注明出处</p>]]></content>
      
      
      <categories>
          
          <category> Solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/06/03/hello-world/"/>
      <url>/2021/06/03/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><p class="code-caption" data-lang="bash" data-line_number="frontend" data-trim_indent="backend" data-label_position="outer" data-labels_left="Code" data-labels_right=":" data-labels_copy=""><span class="code-caption-label"></span></p><pre><code class="lang-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>本文链接 <a href="https://ren-yc.github.io/2021/06/03/hello-world/">https://ren-yc.github.io/2021/06/03/hello-world/</a> 文章转载需注明出处</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
